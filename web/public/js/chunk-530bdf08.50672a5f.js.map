{"version":3,"sources":["webpack:///./node_modules/ol/events/EventType.js","webpack:///./node_modules/ol/extent/Relationship.js","webpack:///./node_modules/ol/render/EventType.js","webpack:///./node_modules/ol/dom.js","webpack:///./node_modules/ol/extent.js","webpack:///./node_modules/ol/MapBrowserEventType.js","webpack:///./node_modules/ol/events/Target.js","webpack:///./node_modules/ol/util.js","webpack:///./node_modules/ol/renderer/Layer.js","webpack:///./node_modules/ol/renderer/canvas/Layer.js","webpack:///./node_modules/ol/CollectionEventType.js","webpack:///./node_modules/ol/layer/Layer.js","webpack:///./node_modules/ol/geom/flat/simplify.js","webpack:///./node_modules/ol/events.js","webpack:///./node_modules/ol/proj/Projection.js","webpack:///./node_modules/ol/proj/epsg3857.js","webpack:///./node_modules/ol/proj/epsg4326.js","webpack:///./node_modules/ol/proj/projections.js","webpack:///./node_modules/ol/proj/transforms.js","webpack:///./node_modules/ol/proj.js","webpack:///./node_modules/ol/renderer/vector.js","webpack:///./node_modules/ol/render/Event.js","webpack:///./node_modules/ol/size.js","webpack:///./node_modules/ol/Observable.js","webpack:///./node_modules/ol/render/canvas/BuilderType.js","webpack:///./node_modules/ol/extent/Corner.js","webpack:///./node_modules/ol/obj.js","webpack:///./node_modules/ol/style/IconImageCache.js","webpack:///./node_modules/ol/interaction/Pointer.js","webpack:///./node_modules/ol/interaction/Interaction.js","webpack:///./node_modules/ol/ViewHint.js","webpack:///./node_modules/ol/geom/GeometryLayout.js","webpack:///./node_modules/ol/layer/Base.js","webpack:///./node_modules/ol/functions.js","webpack:///./node_modules/ol/MapEventType.js","webpack:///./node_modules/ol/color.js","webpack:///./node_modules/ol/has.js","webpack:///./node_modules/ol/ImageBase.js","webpack:///./node_modules/ol/Image.js","webpack:///./node_modules/ol/source/State.js","webpack:///./node_modules/ol/sphere.js","webpack:///./node_modules/ol/ObjectEventType.js","webpack:///./node_modules/ol/math.js","webpack:///./node_modules/ol/AssertionError.js","webpack:///./node_modules/ol/ImageState.js","webpack:///./node_modules/ol/asserts.js","webpack:///./node_modules/ol/geom/Geometry.js","webpack:///./node_modules/ol/geom/SimpleGeometry.js","webpack:///./node_modules/ol/array.js","webpack:///./node_modules/ol/coordinate.js","webpack:///./node_modules/ol/transform.js","webpack:///./node_modules/ol/geom/flat/deflate.js","webpack:///./node_modules/ol/geom/flat/inflate.js","webpack:///./node_modules/ol/geom/flat/transform.js","webpack:///./node_modules/ol/interaction/Property.js","webpack:///./node_modules/ol/render/canvas/Immediate.js","webpack:///./node_modules/ol/easing.js","webpack:///./node_modules/ol/css.js","webpack:///./node_modules/ol/events/Event.js","webpack:///./node_modules/ol/Disposable.js","webpack:///./node_modules/ol/render/canvas.js","webpack:///./node_modules/ol/layer/Property.js","webpack:///./node_modules/ol/Object.js","webpack:///./node_modules/ol/Collection.js","webpack:///./node_modules/ol/colorlike.js","webpack:///./node_modules/ol/geom/Point.js","webpack:///./node_modules/ol/geom/GeometryType.js","webpack:///./node_modules/ol/render/VectorContext.js","webpack:///./node_modules/ol/proj/Units.js","webpack:///./node_modules/ol/source/Source.js"],"names":["CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","PRERENDER","POSTRENDER","PRECOMPOSE","POSTCOMPOSE","RENDERCOMPLETE","createCanvasContext2D","opt_width","opt_height","opt_canvasPool","canvas","length","shift","OffscreenCanvas","document","createElement","width","height","getContext","outerWidth","element","offsetWidth","style","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","i","oldChild","newChild","insertBefore","appendChild","boundingExtent","coordinates","extent","createEmpty","ii","extendCoordinate","_boundingExtentXYs","xs","ys","opt_extent","minX","Math","min","apply","minY","maxX","max","maxY","createOrUpdate","buffer","value","clone","slice","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Infinity","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extend","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","opt_stops","push","l","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","worldsAway","floor","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","Target","_super","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","type","listener","listeners","listenersForType","indexOf","dispatchEvent","event","evt","target","propagate","dispatching","pendingRemovals","handleEvent","propagationStopped","pr","removeEventListener","disposeInternal","getListeners","undefined","hasListener","opt_type","keys","index","splice","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","VERSION","LayerRenderer","layer","boundHandleImageChange_","handleImageChange_","bind","layer_","getFeatures","pixel","prepareFrame","frameState","renderFrame","loadedTileCallback","tiles","zoom","tile","tileCoord","toString","createLoadedTileFinder","source","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","getDataAtPixel","getLayer","handleFontsChanged","image","getState","ImageState","LOADED","renderIfReadyAndVisible","loadImage","imageState","EventType","IDLE","load","getVisible","getSourceState","READY","changed","Observable","Layer","CanvasLayerRenderer","container","renderedResolution","tempTransform","pixelTransform","inversePixelTransform","context","containerReused","useContainer","transform","opacity","layerClassName","getClassName","className","firstElementChild","HTMLCanvasElement","position","left","transformOrigin","clip","pixelRatio","halfWidth","halfHeight","viewState","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","clipUnrotated","inverted","round","dispatchRenderEvent_","event_1","preRender","postRender","getRenderTransform","offsetX","dx1","dy1","sx","sy","dx2","dy2","data","renderPixel","newCanvas","newContext","clearRect","drawImage","getImageData","err","name","Uint8Array","ADD","REMOVE","options","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","SOURCE","handleSourcePropertyChange_","setSource","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","getLayerState","getSource","get","UNDEFINED","handleSourceChange_","layerRenderer","getRenderer","renderEvent","layerStatesArray","layerState","some","arrayLayerState","set","createRenderer","hasRenderer","inView","visible","minResolution","maxResolution","minZoom","maxZoom","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","n","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","snap","tolerance","quantize","quantizeArray","ends","simplifiedEnds","listen","opt_this","opt_once","originalListener_1","arguments","eventsKey","listenOnce","unlistenByKey","key","Projection","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","PI","EXTENT","WORLD_EXTENT","EPSG3857Projection","units","Units","METERS","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","log","tan","toEPSG4326","atan","exp","METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","DEGREES","cache","add","transforms","destination","sourceCode","destinationCode","cloneTransform","identityTransform","addProjection","addProjections","projections","forEach","projectionLike","opt_units","pointResolution","getter","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","addCommon","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","geometry","feature","fillStyle","getFill","strokeStyle","getStroke","circleReplay","getBuilder","getZIndex","CIRCLE","setFillStrokeStyle","drawCircle","textStyle","getText","textReplay","TEXT","setTextStyle","addDeclutter","drawText","renderFeature","replayGroup","opt_transform","loading","imageStyle","getImage","getImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","getGeometryFunction","simplifiedGeometry","simplifyTransformed","renderer","renderGeometry","geometryRenderer","getType","GEOMETRY_COLLECTION","replay","DEFAULT","drawCustom","geometries","getGeometries","getGeometriesArray","lineStringReplay","LINE_STRING","drawLineString","drawMultiLineString","polygonReplay","POLYGON","drawMultiPolygon","imageReplay","IMAGE","setImageStyle","drawPoint","drawMultiPoint","drawPolygon","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","hasArea","scale","ratio","opt_size","toSize","isArray","revision_","getRevision","on","len","once","ol_key","un","unByKey","assign","var_sources","TypeError","clear","object","property","getValues","values","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","color","getKey","setSize","maxCacheSize","colorString","shared","PointerInteraction","opt_options","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","getPointerCount","mapBrowserEvent","originalEvent","stopEvent","updateTrackedPointers_","preventDefault","handledUp","handled","isPointerDraggingEvent","id","pointerId","centroid","pointerEvents","clientX","clientY","Interaction","map_","setActive","getActive","ACTIVE","getMap","active","pan","view","delta","opt_duration","currentCenter","getCenterInternal","animateInternal","duration","easing","getConstrainedCenter","zoomByDelta","opt_anchor","currentZoom","getZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","animate","anchor","ANIMATING","INTERACTING","XY","XYZ","XYM","XYZM","BaseLayer","properties","OPACITY","VISIBLE","Z_INDEX","zIndex","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","setProperties","state_","opt_managed","state","managed","getOpacity","sourceState","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","MOVESTART","MOVEEND","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromNamed","el","body","rgb","fromString","MAX_CACHE_SIZE","cacheSize","s","fromStringInternal_","asArray","r","g","a","exec","hasAlpha","substr","split","Number","normalize","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","ImageBase","pixelRatio_","getPixelRatio","getResolution","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","handleImageError_","unlistenImage_","handleImageLoad_","LOADING","listenImage","setImage","loadHandler","errorHandler","img","promise","listening_1","unlisten","then","catch","message","listenerKeys","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","distance","bearing","lon1","dByR","lat","asin","lon","PROPERTYCHANGE","clamp","cosh","log2","LOG2E","squaredSegmentDistance","t","squaredDistance","solveLinearSystem","mat","maxRow","maxEl","abs","absValue","tmp","j","coef","k","m","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","AssertionError","path","EMPTY","assert","assertion","errorCode","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","getSimplifiedGeometry","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","rotate","angle","opt_sy","simplify","intersectsExtent","translate","sourceProj","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry","layout","GeometryLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","opt_dest","numberSafeCompareFunction","includes","arr","linearFindNearest","direction","reverseSubArray","begin","extension","arr1","arr2","len1","isSorted","opt_func","opt_strict","compare","every","currentVal","res","coordinate1","coordinate2","cosAngle","sinAngle","getWorldsAway","opt_sourceExtentWidth","sourceExtentWidth","tmp_","multiply","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","e","f","setFromArray","makeScale","compose","makeInverse","det","determinant","join","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","jj","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","transform2D","dest","anchorX","anchorY","CanvasImmediateRenderer","viewRotation","opt_squaredTolerance","opt_userTransform","context_","transform_","viewRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","alpha","globalAlpha","centerX","centerY","setTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","closePath","drawRings_","arc","fill","stroke","setStyle","drawGeometry","POINT","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","drawGeometryCollection","drawFeature","flatMidpoint","getFlatMidpoint","geometryExtent","getEnds","flatMidpoints","getFlatMidpoints","getOrientedFlatCoordinates","flatInteriorPoint","getFlatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","font","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageSize","getSize","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageScale","getScaleArray","getRotateWithView","getRotation","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","easeIn","pow","easeOut","inAndOut","linear","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","BaseEvent","stopPropagation","Disposable","disposed","dispose","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","labelCache","console","warn","measureFont","measureContext","textHeights","registerFont","interval","referenceWidth","retries","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","getKeys","clearInterval","setInterval","measureTextHeight","div","heights","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","margin","padding","measureAndCacheTextWidth","measureTextWidths","lines","widths","numLines","currentWidth","rotateAtOffset","offsetY","drawImageOrLabel","labelOrImage","originX","originY","w","h","contextInstructions","executeLabelInstructions","restore","label","createTransformStringCanvas","createTransformString","ObjectEvent","oldValue","BaseObject","opt_values","values_","getProperties","hasProperties","notify","eventType","getChangeEventType","opt_silent","unset","changeEventTypeCache","Property","LENGTH","CollectionEvent","opt_element","opt_index","Collection","unique_","unique","array_","assertUnique_","updateLength_","getLength","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","asColorLike","Point","LINEAR_RING","VectorContext","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","opt_declutterGroup","opt_declutterGroups","FEET","PIXELS","USFEET","Source","projection_","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","getAttributions","getAttributionsCollapsible","getProjection","getResolutions","getWrapX","getContextOptions","refresh","setAttributions","setState","attributionLike"],"mappings":"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","file":"public/js/chunk-530bdf08.50672a5f.js","sourcesContent":["/**\n * @module ol/events/EventType\n */\n/**\n * @enum {string}\n * @const\n */\nexport default {\n    /**\n     * Generic change event. Triggered when the revision counter is increased.\n     * @event module:ol/events/Event~BaseEvent#change\n     * @api\n     */\n    CHANGE: 'change',\n    /**\n     * Generic error event. Triggered when an error occurs.\n     * @event module:ol/events/Event~BaseEvent#error\n     * @api\n     */\n    ERROR: 'error',\n    BLUR: 'blur',\n    CLEAR: 'clear',\n    CONTEXTMENU: 'contextmenu',\n    CLICK: 'click',\n    DBLCLICK: 'dblclick',\n    DRAGENTER: 'dragenter',\n    DRAGOVER: 'dragover',\n    DROP: 'drop',\n    FOCUS: 'focus',\n    KEYDOWN: 'keydown',\n    KEYPRESS: 'keypress',\n    LOAD: 'load',\n    RESIZE: 'resize',\n    TOUCHMOVE: 'touchmove',\n    WHEEL: 'wheel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/extent/Relationship\n */\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n    UNKNOWN: 0,\n    INTERSECTING: 1,\n    ABOVE: 2,\n    RIGHT: 4,\n    BELOW: 8,\n    LEFT: 16,\n};\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/render/EventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered before a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#prerender\n     * @api\n     */\n    PRERENDER: 'prerender',\n    /**\n     * Triggered after a layer is rendered.\n     * @event module:ol/render/Event~RenderEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered before layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#precompose\n     * @api\n     */\n    PRECOMPOSE: 'precompose',\n    /**\n     * Triggered after all layers are rendered.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#postcompose\n     * @api\n     */\n    POSTCOMPOSE: 'postcompose',\n    /**\n     * Triggered when rendering is complete, i.e. all sources and tiles have\n     * finished loading for the current viewport, and all tiles are faded in.\n     * The event object will not have a `context` set.\n     * @event module:ol/render/Event~RenderEvent#rendercomplete\n     * @api\n     */\n    RENDERCOMPLETE: 'rendercomplete',\n};\n//# sourceMappingURL=EventType.js.map","import { WORKER_OFFSCREEN_CANVAS } from './has.js';\n/**\n * @module ol/dom\n */\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @param {Array<HTMLCanvasElement>=} opt_canvasPool Canvas pool to take existing canvas from.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height, opt_canvasPool) {\n    var canvas = opt_canvasPool && opt_canvasPool.length\n        ? opt_canvasPool.shift()\n        : WORKER_OFFSCREEN_CANVAS\n            ? new OffscreenCanvas(opt_width || 300, opt_height || 300)\n            : document.createElement('canvas');\n    if (opt_width) {\n        canvas.width = opt_width;\n    }\n    if (opt_height) {\n        canvas.height = opt_height;\n    }\n    //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n    return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n    var width = element.offsetWidth;\n    var style = getComputedStyle(element);\n    width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n    return width;\n}\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n    var height = element.offsetHeight;\n    var style = getComputedStyle(element);\n    height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n    return height;\n}\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n    var parent = oldNode.parentNode;\n    if (parent) {\n        parent.replaceChild(newNode, oldNode);\n    }\n}\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n    return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n    while (node.lastChild) {\n        node.removeChild(node.lastChild);\n    }\n}\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n    var oldChildren = node.childNodes;\n    for (var i = 0; true; ++i) {\n        var oldChild = oldChildren[i];\n        var newChild = children[i];\n        // check if our work is done\n        if (!oldChild && !newChild) {\n            break;\n        }\n        // check if children match\n        if (oldChild === newChild) {\n            continue;\n        }\n        // check if a new child needs to be added\n        if (!oldChild) {\n            node.appendChild(newChild);\n            continue;\n        }\n        // check if an old child needs to be removed\n        if (!newChild) {\n            node.removeChild(oldChild);\n            --i;\n            continue;\n        }\n        // reorder\n        node.insertBefore(newChild, oldChild);\n    }\n}\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport { assert } from './asserts.js';\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n    var extent = createEmpty();\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n    var minX = Math.min.apply(null, xs);\n    var minY = Math.min.apply(null, ys);\n    var maxX = Math.max.apply(null, xs);\n    var maxY = Math.max.apply(null, ys);\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0] - value;\n        opt_extent[1] = extent[1] - value;\n        opt_extent[2] = extent[2] + value;\n        opt_extent[3] = extent[3] + value;\n        return opt_extent;\n    }\n    else {\n        return [\n            extent[0] - value,\n            extent[1] - value,\n            extent[2] + value,\n            extent[3] + value,\n        ];\n    }\n}\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent.slice();\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n    var dx, dy;\n    if (x < extent[0]) {\n        dx = extent[0] - x;\n    }\n    else if (extent[2] < x) {\n        dx = x - extent[2];\n    }\n    else {\n        dx = 0;\n    }\n    if (y < extent[1]) {\n        dy = extent[1] - y;\n    }\n    else if (extent[3] < y) {\n        dy = y - extent[3];\n    }\n    else {\n        dy = 0;\n    }\n    return dx * dx + dy * dy;\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n    return containsXY(extent, coordinate[0], coordinate[1]);\n}\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n    return (extent1[0] <= extent2[0] &&\n        extent2[2] <= extent1[2] &&\n        extent1[1] <= extent2[1] &&\n        extent2[3] <= extent1[3]);\n}\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n    return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var relationship = Relationship.UNKNOWN;\n    if (x < minX) {\n        relationship = relationship | Relationship.LEFT;\n    }\n    else if (x > maxX) {\n        relationship = relationship | Relationship.RIGHT;\n    }\n    if (y < minY) {\n        relationship = relationship | Relationship.BELOW;\n    }\n    else if (y > maxY) {\n        relationship = relationship | Relationship.ABOVE;\n    }\n    if (relationship === Relationship.UNKNOWN) {\n        relationship = Relationship.INTERSECTING;\n    }\n    return relationship;\n}\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n    return [Infinity, Infinity, -Infinity, -Infinity];\n}\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = minX;\n        opt_extent[1] = minY;\n        opt_extent[2] = maxX;\n        opt_extent[3] = maxY;\n        return opt_extent;\n    }\n    else {\n        return [minX, minY, maxX, maxY];\n    }\n}\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n    return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    return createOrUpdate(x, y, x, y, opt_extent);\n}\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendCoordinates(extent, coordinates);\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n    var extent = createOrUpdateEmpty(opt_extent);\n    return extendRings(extent, rings);\n}\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n    return (extent1[0] == extent2[0] &&\n        extent1[2] == extent2[2] &&\n        extent1[1] == extent2[1] &&\n        extent1[3] == extent2[3]);\n}\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n    return (Math.abs(extent1[0] - extent2[0]) < tolerance &&\n        Math.abs(extent1[2] - extent2[2]) < tolerance &&\n        Math.abs(extent1[1] - extent2[1]) < tolerance &&\n        Math.abs(extent1[3] - extent2[3]) < tolerance);\n}\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n    if (extent2[0] < extent1[0]) {\n        extent1[0] = extent2[0];\n    }\n    if (extent2[2] > extent1[2]) {\n        extent1[2] = extent2[2];\n    }\n    if (extent2[1] < extent1[1]) {\n        extent1[1] = extent2[1];\n    }\n    if (extent2[3] > extent1[3]) {\n        extent1[3] = extent2[3];\n    }\n    return extent1;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n    if (coordinate[0] < extent[0]) {\n        extent[0] = coordinate[0];\n    }\n    if (coordinate[0] > extent[2]) {\n        extent[2] = coordinate[0];\n    }\n    if (coordinate[1] < extent[1]) {\n        extent[1] = coordinate[1];\n    }\n    if (coordinate[1] > extent[3]) {\n        extent[3] = coordinate[1];\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        extendCoordinate(extent, coordinates[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n    for (; offset < end; offset += stride) {\n        extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n    for (var i = 0, ii = rings.length; i < ii; ++i) {\n        extendCoordinates(extent, rings[i]);\n    }\n    return extent;\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n    extent[0] = Math.min(extent[0], x);\n    extent[1] = Math.min(extent[1], y);\n    extent[2] = Math.max(extent[2], x);\n    extent[3] = Math.max(extent[3], y);\n}\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n    var val;\n    val = callback(getBottomLeft(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getBottomRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopRight(extent));\n    if (val) {\n        return val;\n    }\n    val = callback(getTopLeft(extent));\n    if (val) {\n        return val;\n    }\n    return false;\n}\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n    var area = 0;\n    if (!isEmpty(extent)) {\n        area = getWidth(extent) * getHeight(extent);\n    }\n    return area;\n}\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n    return [extent[0], extent[1]];\n}\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n    return [extent[2], extent[1]];\n}\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n    return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n    var coordinate;\n    if (corner === Corner.BOTTOM_LEFT) {\n        coordinate = getBottomLeft(extent);\n    }\n    else if (corner === Corner.BOTTOM_RIGHT) {\n        coordinate = getBottomRight(extent);\n    }\n    else if (corner === Corner.TOP_LEFT) {\n        coordinate = getTopLeft(extent);\n    }\n    else if (corner === Corner.TOP_RIGHT) {\n        coordinate = getTopRight(extent);\n    }\n    else {\n        assert(false, 13); // Invalid corner\n    }\n    return coordinate;\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n    var minX = Math.min(extent1[0], extent2[0]);\n    var minY = Math.min(extent1[1], extent2[1]);\n    var maxX = Math.max(extent1[2], extent2[2]);\n    var maxY = Math.max(extent1[3], extent2[3]);\n    return (maxX - minX) * (maxY - minY);\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n    var dx = (resolution * size[0]) / 2;\n    var dy = (resolution * size[1]) / 2;\n    var cosRotation = Math.cos(rotation);\n    var sinRotation = Math.sin(rotation);\n    var xCos = dx * cosRotation;\n    var xSin = dx * sinRotation;\n    var yCos = dy * cosRotation;\n    var ySin = dy * sinRotation;\n    var x = center[0];\n    var y = center[1];\n    var x0 = x - xCos + ySin;\n    var x1 = x - xCos - ySin;\n    var x2 = x + xCos - ySin;\n    var x3 = x + xCos + ySin;\n    var y0 = y - xSin - yCos;\n    var y1 = y - xSin + yCos;\n    var y2 = y + xSin + yCos;\n    var y3 = y + xSin - yCos;\n    return createOrUpdate(Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3), Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3), opt_extent);\n}\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n    return extent[3] - extent[1];\n}\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n    var intersection = getIntersection(extent1, extent2);\n    return getArea(intersection);\n}\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n    var intersection = opt_extent ? opt_extent : createEmpty();\n    if (intersects(extent1, extent2)) {\n        if (extent1[0] > extent2[0]) {\n            intersection[0] = extent1[0];\n        }\n        else {\n            intersection[0] = extent2[0];\n        }\n        if (extent1[1] > extent2[1]) {\n            intersection[1] = extent1[1];\n        }\n        else {\n            intersection[1] = extent2[1];\n        }\n        if (extent1[2] < extent2[2]) {\n            intersection[2] = extent1[2];\n        }\n        else {\n            intersection[2] = extent2[2];\n        }\n        if (extent1[3] < extent2[3]) {\n            intersection[3] = extent1[3];\n        }\n        else {\n            intersection[3] = extent2[3];\n        }\n    }\n    else {\n        createOrUpdateEmpty(intersection);\n    }\n    return intersection;\n}\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n    return getWidth(extent) + getHeight(extent);\n}\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n    return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n    return [extent[0], extent[3]];\n}\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n    return [extent[2], extent[3]];\n}\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n    return extent[2] - extent[0];\n}\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n    return (extent1[0] <= extent2[2] &&\n        extent1[2] >= extent2[0] &&\n        extent1[1] <= extent2[3] &&\n        extent1[3] >= extent2[1]);\n}\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n    return extent[2] < extent[0] || extent[3] < extent[1];\n}\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n    if (opt_extent) {\n        opt_extent[0] = extent[0];\n        opt_extent[1] = extent[1];\n        opt_extent[2] = extent[2];\n        opt_extent[3] = extent[3];\n        return opt_extent;\n    }\n    else {\n        return extent;\n    }\n}\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n    var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n    var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n    extent[0] -= deltaX;\n    extent[2] += deltaX;\n    extent[1] -= deltaY;\n    extent[3] += deltaY;\n}\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n    var intersects = false;\n    var startRel = coordinateRelationship(extent, start);\n    var endRel = coordinateRelationship(extent, end);\n    if (startRel === Relationship.INTERSECTING ||\n        endRel === Relationship.INTERSECTING) {\n        intersects = true;\n    }\n    else {\n        var minX = extent[0];\n        var minY = extent[1];\n        var maxX = extent[2];\n        var maxY = extent[3];\n        var startX = start[0];\n        var startY = start[1];\n        var endX = end[0];\n        var endY = end[1];\n        var slope = (endY - startY) / (endX - startX);\n        var x = void 0, y = void 0;\n        if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n            // potentially intersects top\n            x = endX - (endY - maxY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.RIGHT) &&\n            !(startRel & Relationship.RIGHT)) {\n            // potentially intersects right\n            y = endY - (endX - maxX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.BELOW) &&\n            !(startRel & Relationship.BELOW)) {\n            // potentially intersects bottom\n            x = endX - (endY - minY) / slope;\n            intersects = x >= minX && x <= maxX;\n        }\n        if (!intersects &&\n            !!(endRel & Relationship.LEFT) &&\n            !(startRel & Relationship.LEFT)) {\n            // potentially intersects left\n            y = endY - (endX - minX) * slope;\n            intersects = y >= minY && y <= maxY;\n        }\n    }\n    return intersects;\n}\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n    var coordinates = [];\n    if (opt_stops > 1) {\n        var width = extent[2] - extent[0];\n        var height = extent[3] - extent[1];\n        for (var i = 0; i < opt_stops; ++i) {\n            coordinates.push(extent[0] + (width * i) / opt_stops, extent[1], extent[2], extent[1] + (height * i) / opt_stops, extent[2] - (width * i) / opt_stops, extent[3], extent[0], extent[3] - (height * i) / opt_stops);\n        }\n    }\n    else {\n        coordinates = [\n            extent[0],\n            extent[1],\n            extent[2],\n            extent[1],\n            extent[2],\n            extent[3],\n            extent[0],\n            extent[3],\n        ];\n    }\n    transformFn(coordinates, coordinates, 2);\n    var xs = [];\n    var ys = [];\n    for (var i = 0, l = coordinates.length; i < l; i += 2) {\n        xs.push(coordinates[i]);\n        ys.push(coordinates[i + 1]);\n    }\n    return _boundingExtentXYs(xs, ys, opt_extent);\n}\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n    var projectionExtent = projection.getExtent();\n    var center = getCenter(extent);\n    if (projection.canWrapX() &&\n        (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n        var offset = worldsAway * worldWidth;\n        extent[0] -= offset;\n        extent[2] -= offset;\n    }\n    return extent;\n}\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    /**\n     * A true single click with no dragging and no double click. Note that this\n     * event is delayed by 250 ms to ensure that it is not a double click.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n     * @api\n     */\n    SINGLECLICK: 'singleclick',\n    /**\n     * A click with no dragging. A double click will fire two of this.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n     * @api\n     */\n    CLICK: EventType.CLICK,\n    /**\n     * A true double click, with no dragging.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n     * @api\n     */\n    DBLCLICK: EventType.DBLCLICK,\n    /**\n     * Triggered when a pointer is dragged.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n     * @api\n     */\n    POINTERDRAG: 'pointerdrag',\n    /**\n     * Triggered when a pointer is moved. Note that on touch devices this is\n     * triggered when the map is panned, so is not the same as mousemove.\n     * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n     * @api\n     */\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=MapBrowserEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport { VOID } from '../functions.js';\nimport { clear } from '../obj.js';\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /** @class */ (function (_super) {\n    __extends(Target, _super);\n    /**\n     * @param {*=} opt_target Default event target for dispatched events.\n     */\n    function Target(opt_target) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.eventTarget_ = opt_target;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.pendingRemovals_ = null;\n        /**\n         * @private\n         * @type {Object<string, number>}\n         */\n        _this.dispatching_ = null;\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n         */\n        _this.listeners_ = null;\n        return _this;\n    }\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.addEventListener = function (type, listener) {\n        if (!type || !listener) {\n            return;\n        }\n        var listeners = this.listeners_ || (this.listeners_ = {});\n        var listenersForType = listeners[type] || (listeners[type] = []);\n        if (listenersForType.indexOf(listener) === -1) {\n            listenersForType.push(listener);\n        }\n    };\n    /**\n     * Dispatches an event and calls all listeners listening for events\n     * of this type. The event parameter can either be a string or an\n     * Object with a `type` property.\n     *\n     * @param {import(\"./Event.js\").default|string} event Event object.\n     * @return {boolean|undefined} `false` if anyone called preventDefault on the\n     *     event object or if any of the listeners returned false.\n     * @api\n     */\n    Target.prototype.dispatchEvent = function (event) {\n        /** @type {import(\"./Event.js\").default|Event} */\n        var evt = typeof event === 'string' ? new Event(event) : event;\n        var type = evt.type;\n        if (!evt.target) {\n            evt.target = this.eventTarget_ || this;\n        }\n        var listeners = this.listeners_ && this.listeners_[type];\n        var propagate;\n        if (listeners) {\n            var dispatching = this.dispatching_ || (this.dispatching_ = {});\n            var pendingRemovals = this.pendingRemovals_ || (this.pendingRemovals_ = {});\n            if (!(type in dispatching)) {\n                dispatching[type] = 0;\n                pendingRemovals[type] = 0;\n            }\n            ++dispatching[type];\n            for (var i = 0, ii = listeners.length; i < ii; ++i) {\n                if ('handleEvent' in listeners[i]) {\n                    propagate = /** @type {import(\"../events.js\").ListenerObject} */ (listeners[i]).handleEvent(evt);\n                }\n                else {\n                    propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (listeners[i]).call(this, evt);\n                }\n                if (propagate === false || evt.propagationStopped) {\n                    propagate = false;\n                    break;\n                }\n            }\n            --dispatching[type];\n            if (dispatching[type] === 0) {\n                var pr = pendingRemovals[type];\n                delete pendingRemovals[type];\n                while (pr--) {\n                    this.removeEventListener(type, VOID);\n                }\n                delete dispatching[type];\n            }\n            return propagate;\n        }\n    };\n    /**\n     * Clean up.\n     */\n    Target.prototype.disposeInternal = function () {\n        this.listeners_ && clear(this.listeners_);\n    };\n    /**\n     * Get the listeners for a specified event type. Listeners are returned in the\n     * order that they will be called in.\n     *\n     * @param {string} type Type.\n     * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n     */\n    Target.prototype.getListeners = function (type) {\n        return (this.listeners_ && this.listeners_[type]) || undefined;\n    };\n    /**\n     * @param {string=} opt_type Type. If not provided,\n     *     `true` will be returned if this event target has any listeners.\n     * @return {boolean} Has listeners.\n     */\n    Target.prototype.hasListener = function (opt_type) {\n        if (!this.listeners_) {\n            return false;\n        }\n        return opt_type\n            ? opt_type in this.listeners_\n            : Object.keys(this.listeners_).length > 0;\n    };\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../events.js\").Listener} listener Listener.\n     */\n    Target.prototype.removeEventListener = function (type, listener) {\n        var listeners = this.listeners_ && this.listeners_[type];\n        if (listeners) {\n            var index = listeners.indexOf(listener);\n            if (index !== -1) {\n                if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n                    // make listener a no-op, and remove later in #dispatchEvent()\n                    listeners[index] = VOID;\n                    ++this.pendingRemovals_[type];\n                }\n                else {\n                    listeners.splice(index, 1);\n                    if (listeners.length === 0) {\n                        delete this.listeners_[type];\n                    }\n                }\n            }\n        }\n    };\n    return Target;\n}(Disposable));\nexport default Target;\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/util\n */\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n    return /** @type {?} */ ((function () {\n        throw new Error('Unimplemented abstract method.');\n    })());\n}\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n    return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '6.4.3';\n//# sourceMappingURL=util.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport { abstract } from '../util.js';\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nvar LayerRenderer = /** @class */ (function (_super) {\n    __extends(LayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function LayerRenderer(layer) {\n        var _this = _super.call(this) || this;\n        /** @private */\n        _this.boundHandleImageChange_ = _this.handleImageChange_.bind(_this);\n        /**\n         * @protected\n         * @type {LayerType}\n         */\n        _this.layer_ = layer;\n        return _this;\n    }\n    /**\n     * Asynchronous layer level hit detection.\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    LayerRenderer.prototype.getFeatures = function (pixel) {\n        return abstract();\n    };\n    /**\n     * Determine whether render should be called.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    LayerRenderer.prototype.prepareFrame = function (frameState) {\n        return abstract();\n    };\n    /**\n     * Render the layer.\n     * @abstract\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    LayerRenderer.prototype.renderFrame = function (frameState, target) {\n        return abstract();\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    LayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (!tiles[zoom]) {\n            tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n        return undefined;\n    };\n    /**\n     * Create a function that adds loaded tiles to the tile lookup.\n     * @param {import(\"../source/Tile.js\").default} source Tile source.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n     * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n     *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n     * @protected\n     */\n    LayerRenderer.prototype.createLoadedTileFinder = function (source, projection, tiles) {\n        return (\n        /**\n         * @param {number} zoom Zoom level.\n         * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n         * @return {boolean} The tile range is fully loaded.\n         * @this {LayerRenderer}\n         */\n        function (zoom, tileRange) {\n            var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n            return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n        }.bind(this));\n    };\n    /**\n     * @abstract\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n     * @return {T|void} Callback result.\n     * @template T\n     */\n    LayerRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, callback, declutteredFeatures) { };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    LayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        return abstract();\n    };\n    /**\n     * @return {LayerType} Layer.\n     */\n    LayerRenderer.prototype.getLayer = function () {\n        return this.layer_;\n    };\n    /**\n     * Perform action necessary to get the layer rendered after new fonts have loaded\n     * @abstract\n     */\n    LayerRenderer.prototype.handleFontsChanged = function () { };\n    /**\n     * Handle changes in image state.\n     * @param {import(\"../events/Event.js\").default} event Image change event.\n     * @private\n     */\n    LayerRenderer.prototype.handleImageChange_ = function (event) {\n        var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n        if (image.getState() === ImageState.LOADED) {\n            this.renderIfReadyAndVisible();\n        }\n    };\n    /**\n     * Load the image if not already loaded, and register the image change\n     * listener if needed.\n     * @param {import(\"../ImageBase.js\").default} image Image.\n     * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n     * @protected\n     */\n    LayerRenderer.prototype.loadImage = function (image) {\n        var imageState = image.getState();\n        if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n            image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n        }\n        if (imageState == ImageState.IDLE) {\n            image.load();\n            imageState = image.getState();\n        }\n        return imageState == ImageState.LOADED;\n    };\n    /**\n     * @protected\n     */\n    LayerRenderer.prototype.renderIfReadyAndVisible = function () {\n        var layer = this.getLayer();\n        if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n            layer.changed();\n        }\n    };\n    return LayerRenderer;\n}(Observable));\nexport default LayerRenderer;\n//# sourceMappingURL=Layer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport { apply as applyTransform, compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { createCanvasContext2D } from '../../dom.js';\nimport { getBottomLeft, getBottomRight, getTopLeft, getTopRight, } from '../../extent.js';\nimport { rotateAtOffset } from '../../render/canvas.js';\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nvar CanvasLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasLayerRenderer, _super);\n    /**\n     * @param {LayerType} layer Layer.\n     */\n    function CanvasLayerRenderer(layer) {\n        var _this = _super.call(this, layer) || this;\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.container = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedResolution;\n        /**\n         * A temporary transform.  The values in this transform should only be used in a\n         * function that sets the values.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tempTransform = createTransform();\n        /**\n         * The transform for rendered pixels to viewport CSS pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.pixelTransform = createTransform();\n        /**\n         * The transform for viewport CSS pixels to rendered pixels.  This transform must\n         * be set when rendering a frame and may be used by other functions after rendering.\n         * @protected\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.inversePixelTransform = createTransform();\n        /**\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context = null;\n        /**\n         * @type {boolean}\n         */\n        _this.containerReused = false;\n        return _this;\n    }\n    /**\n     * Get a rendering container from an existing target, if compatible.\n     * @param {HTMLElement} target Potential render target.\n     * @param {string} transform CSS Transform.\n     * @param {number} opacity Opacity.\n     */\n    CanvasLayerRenderer.prototype.useContainer = function (target, transform, opacity) {\n        var layerClassName = this.getLayer().getClassName();\n        var container, context;\n        if (target &&\n            target.style.opacity === '' &&\n            target.className === layerClassName) {\n            var canvas = target.firstElementChild;\n            if (canvas instanceof HTMLCanvasElement) {\n                context = canvas.getContext('2d');\n            }\n        }\n        if (context &&\n            (context.canvas.width === 0 ||\n                context.canvas.style.transform === transform)) {\n            // Container of the previous layer renderer can be used.\n            this.container = target;\n            this.context = context;\n            this.containerReused = true;\n        }\n        else if (this.containerReused) {\n            // Previously reused container cannot be used any more.\n            this.container = null;\n            this.context = null;\n            this.containerReused = false;\n        }\n        if (!this.container) {\n            container = document.createElement('div');\n            container.className = layerClassName;\n            var style = container.style;\n            style.position = 'absolute';\n            style.width = '100%';\n            style.height = '100%';\n            context = createCanvasContext2D();\n            var canvas = context.canvas;\n            container.appendChild(canvas);\n            style = canvas.style;\n            style.position = 'absolute';\n            style.left = '0';\n            style.transformOrigin = 'top left';\n            this.container = container;\n            this.context = context;\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clip = function (context, frameState, extent) {\n        var pixelRatio = frameState.pixelRatio;\n        var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n        var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n        var rotation = frameState.viewState.rotation;\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        context.save();\n        rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n        context.beginPath();\n        context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n        context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n        context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n        context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n        context.clip();\n        rotateAtOffset(context, rotation, halfWidth, halfHeight);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.clipUnrotated = function (context, frameState, extent) {\n        var topLeft = getTopLeft(extent);\n        var topRight = getTopRight(extent);\n        var bottomRight = getBottomRight(extent);\n        var bottomLeft = getBottomLeft(extent);\n        applyTransform(frameState.coordinateToPixelTransform, topLeft);\n        applyTransform(frameState.coordinateToPixelTransform, topRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n        applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n        var inverted = this.inversePixelTransform;\n        applyTransform(inverted, topLeft);\n        applyTransform(inverted, topRight);\n        applyTransform(inverted, bottomRight);\n        applyTransform(inverted, bottomLeft);\n        context.save();\n        context.beginPath();\n        context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n        context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n        context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n        context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n        context.clip();\n    };\n    /**\n     * @param {import(\"../../render/EventType.js\").default} type Event type.\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @private\n     */\n    CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function (type, context, frameState) {\n        var layer = this.getLayer();\n        if (layer.hasListener(type)) {\n            var event_1 = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n            layer.dispatchEvent(event_1);\n        }\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.preRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n    };\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    CanvasLayerRenderer.prototype.postRender = function (context, frameState) {\n        this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n    };\n    /**\n     * Creates a transform for rendering to an element that will be rotated after rendering.\n     * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n     * @param {number} resolution Resolution.\n     * @param {number} rotation Rotation.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} width Width of the rendered element (in pixels).\n     * @param {number} height Height of the rendered element (in pixels).\n     * @param {number} offsetX Offset on the x-axis in view coordinates.\n     * @protected\n     * @return {!import(\"../../transform.js\").Transform} Transform.\n     */\n    CanvasLayerRenderer.prototype.getRenderTransform = function (center, resolution, rotation, pixelRatio, width, height, offsetX) {\n        var dx1 = width / 2;\n        var dy1 = height / 2;\n        var sx = pixelRatio / resolution;\n        var sy = -sx;\n        var dx2 = -center[0] + offsetX;\n        var dy2 = -center[1];\n        return composeTransform(this.tempTransform, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n    };\n    /**\n     * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n     *    location, null will be returned.  If there is data, but pixel values cannot be\n     *    returned, and empty array will be returned.\n     */\n    CanvasLayerRenderer.prototype.getDataAtPixel = function (pixel, frameState, hitTolerance) {\n        var renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n        var context = this.context;\n        var data;\n        try {\n            var x = Math.round(renderPixel[0]);\n            var y = Math.round(renderPixel[1]);\n            var newCanvas = document.createElement('canvas');\n            var newContext = newCanvas.getContext('2d');\n            newCanvas.width = 1;\n            newCanvas.height = 1;\n            newContext.clearRect(0, 0, 1, 1);\n            newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n            data = newContext.getImageData(0, 0, 1, 1).data;\n        }\n        catch (err) {\n            if (err.name === 'SecurityError') {\n                // tainted canvas, we assume there is data at the given pixel (although there might not be)\n                return new Uint8Array();\n            }\n            return data;\n        }\n        if (data[3] === 0) {\n            return null;\n        }\n        return data;\n    };\n    return CanvasLayerRenderer;\n}(LayerRenderer));\nexport default CanvasLayerRenderer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/CollectionEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when an item is added to the collection.\n     * @event module:ol/Collection.CollectionEvent#add\n     * @api\n     */\n    ADD: 'add',\n    /**\n     * Triggered when an item is removed from the collection.\n     * @event module:ol/Collection.CollectionEvent#remove\n     * @api\n     */\n    REMOVE: 'remove',\n};\n//# sourceMappingURL=CollectionEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nvar Layer = /** @class */ (function (_super) {\n    __extends(Layer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function Layer(options) {\n        var _this = this;\n        var baseOptions = assign({}, options);\n        delete baseOptions.source;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapPrecomposeKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.mapRenderKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"../events.js\").EventsKey}\n         */\n        _this.sourceChangeKey_ = null;\n        /**\n         * @private\n         * @type {import(\"../renderer/Layer.js\").default}\n         */\n        _this.renderer_ = null;\n        // Overwrite default render method with a custom one\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.map) {\n            _this.setMap(options.map);\n        }\n        _this.addEventListener(getChangeEventType(LayerProperty.SOURCE), _this.handleSourcePropertyChange_);\n        var source = options.source\n            ? /** @type {SourceType} */ (options.source)\n            : null;\n        _this.setSource(source);\n        return _this;\n    }\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    Layer.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array ? opt_array : [];\n        array.push(this);\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    Layer.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states ? opt_states : [];\n        states.push(this.getLayerState());\n        return states;\n    };\n    /**\n     * Get the layer source.\n     * @return {SourceType} The layer source (or `null` if not yet set).\n     * @observable\n     * @api\n     */\n    Layer.prototype.getSource = function () {\n        return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    Layer.prototype.getSourceState = function () {\n        var source = this.getSource();\n        return !source ? SourceState.UNDEFINED : source.getState();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourceChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    Layer.prototype.handleSourcePropertyChange_ = function () {\n        if (this.sourceChangeKey_) {\n            unlistenByKey(this.sourceChangeKey_);\n            this.sourceChangeKey_ = null;\n        }\n        var source = this.getSource();\n        if (source) {\n            this.sourceChangeKey_ = listen(source, EventType.CHANGE, this.handleSourceChange_, this);\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../pixel\").Pixel} pixel Pixel.\n     * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n     * an array of features.\n     */\n    Layer.prototype.getFeatures = function (pixel) {\n        return this.renderer_.getFeatures(pixel);\n    };\n    /**\n     * In charge to manage the rendering of the layer. One layer type is\n     * bounded with one layer renderer.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target which the renderer may (but need not) use\n     * for rendering its content.\n     * @return {HTMLElement} The rendered element.\n     */\n    Layer.prototype.render = function (frameState, target) {\n        var layerRenderer = this.getRenderer();\n        if (layerRenderer.prepareFrame(frameState)) {\n            return layerRenderer.renderFrame(frameState, target);\n        }\n    };\n    /**\n     * Sets the layer to be rendered on top of other layers on a map. The map will\n     * not manage this layer in its layers collection, and the callback in\n     * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n     * is useful for temporary layers. To remove an unmanaged layer from the map,\n     * use `#setMap(null)`.\n     *\n     * To add the layer to a map and have it managed by the map, use\n     * {@link module:ol/Map#addLayer} instead.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Layer.prototype.setMap = function (map) {\n        if (this.mapPrecomposeKey_) {\n            unlistenByKey(this.mapPrecomposeKey_);\n            this.mapPrecomposeKey_ = null;\n        }\n        if (!map) {\n            this.changed();\n        }\n        if (this.mapRenderKey_) {\n            unlistenByKey(this.mapRenderKey_);\n            this.mapRenderKey_ = null;\n        }\n        if (map) {\n            this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function (evt) {\n                var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n                var layerStatesArray = renderEvent.frameState.layerStatesArray;\n                var layerState = this.getLayerState(false);\n                // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n                assert(!layerStatesArray.some(function (arrayLayerState) {\n                    return arrayLayerState.layer === layerState.layer;\n                }), 67);\n                layerStatesArray.push(layerState);\n            }, this);\n            this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n            this.changed();\n        }\n    };\n    /**\n     * Set the layer source.\n     * @param {SourceType} source The layer source.\n     * @observable\n     * @api\n     */\n    Layer.prototype.setSource = function (source) {\n        this.set(LayerProperty.SOURCE, source);\n    };\n    /**\n     * Get the renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n     */\n    Layer.prototype.getRenderer = function () {\n        if (!this.renderer_) {\n            this.renderer_ = this.createRenderer();\n        }\n        return this.renderer_;\n    };\n    /**\n     * @return {boolean} The layer has a renderer.\n     */\n    Layer.prototype.hasRenderer = function () {\n        return !!this.renderer_;\n    };\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    Layer.prototype.createRenderer = function () {\n        return null;\n    };\n    /**\n     * Clean up.\n     */\n    Layer.prototype.disposeInternal = function () {\n        this.setSource(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    return Layer;\n}(BaseLayer));\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n    if (!layerState.visible) {\n        return false;\n    }\n    var resolution = viewState.resolution;\n    if (resolution < layerState.minResolution ||\n        resolution >= layerState.maxResolution) {\n        return false;\n    }\n    var zoom = viewState.zoom;\n    return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\nexport default Layer;\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\nimport { squaredDistance, squaredSegmentDistance } from '../../math.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end, stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n    var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined\n        ? opt_simplifiedFlatCoordinates\n        : [];\n    if (!highQuality) {\n        end = radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        flatCoordinates = simplifiedFlatCoordinates;\n        offset = 0;\n        stride = 2;\n    }\n    simplifiedFlatCoordinates.length = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n    return simplifiedFlatCoordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    var n = (end - offset) / stride;\n    if (n < 3) {\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    /** @type {Array<number>} */\n    var markers = new Array(n);\n    markers[0] = 1;\n    markers[n - 1] = 1;\n    /** @type {Array<number>} */\n    var stack = [offset, end - stride];\n    var index = 0;\n    while (stack.length > 0) {\n        var last = stack.pop();\n        var first = stack.pop();\n        var maxSquaredDistance = 0;\n        var x1 = flatCoordinates[first];\n        var y1 = flatCoordinates[first + 1];\n        var x2 = flatCoordinates[last];\n        var y2 = flatCoordinates[last + 1];\n        for (var i = first + stride; i < last; i += stride) {\n            var x = flatCoordinates[i];\n            var y = flatCoordinates[i + 1];\n            var squaredDistance_1 = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n            if (squaredDistance_1 > maxSquaredDistance) {\n                index = i;\n                maxSquaredDistance = squaredDistance_1;\n            }\n        }\n        if (maxSquaredDistance > squaredTolerance) {\n            markers[(index - offset) / stride] = 1;\n            if (first + stride < index) {\n                stack.push(first, index);\n            }\n            if (index + stride < last) {\n                stack.push(index, last);\n            }\n        }\n    }\n    for (var i = 0; i < n; ++i) {\n        if (markers[i]) {\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + i * stride + 1];\n        }\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = douglasPeucker(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(flatCoordinates, offset, endss, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = douglasPeuckerArray(flatCoordinates, offset, ends, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end, stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    if (end <= offset + stride) {\n        // zero or one point, no simplification possible, so copy and return\n        for (; offset < end; offset += stride) {\n            simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n            simplifiedFlatCoordinates[simplifiedOffset++] =\n                flatCoordinates[offset + 1];\n        }\n        return simplifiedOffset;\n    }\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    // copy first point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    var x2 = x1;\n    var y2 = y1;\n    for (offset += stride; offset < end; offset += stride) {\n        x2 = flatCoordinates[offset];\n        y2 = flatCoordinates[offset + 1];\n        if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n            // copy point at offset\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    if (x2 != x1 || y2 != y1) {\n        // copy last point\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n    return tolerance * Math.round(value / tolerance);\n}\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n    // do nothing if the line is empty\n    if (offset == end) {\n        return simplifiedOffset;\n    }\n    // snap the first coordinate (P1)\n    var x1 = snap(flatCoordinates[offset], tolerance);\n    var y1 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // add the first coordinate to the output\n    simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n    // find the next coordinate that does not snap to the same value as the first\n    // coordinate (P2)\n    var x2, y2;\n    do {\n        x2 = snap(flatCoordinates[offset], tolerance);\n        y2 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        if (offset == end) {\n            // all coordinates snap to the same value, the line collapses to a point\n            // push the last snapped value anyway to ensure that the output contains\n            // at least two points\n            // FIXME should we really return at least two points anyway?\n            simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n            simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n            return simplifiedOffset;\n        }\n    } while (x2 == x1 && y2 == y1);\n    while (offset < end) {\n        // snap the next coordinate (P3)\n        var x3 = snap(flatCoordinates[offset], tolerance);\n        var y3 = snap(flatCoordinates[offset + 1], tolerance);\n        offset += stride;\n        // skip P3 if it is equal to P2\n        if (x3 == x2 && y3 == y2) {\n            continue;\n        }\n        // calculate the delta between P1 and P2\n        var dx1 = x2 - x1;\n        var dy1 = y2 - y1;\n        // calculate the delta between P3 and P1\n        var dx2 = x3 - x1;\n        var dy2 = y3 - y1;\n        // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n        // P1 in the same direction then P2 is on the straight line between P1 and\n        // P3\n        if (dx1 * dy2 == dy1 * dx2 &&\n            ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n            ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n            // discard P2 and set P2 = P3\n            x2 = x3;\n            y2 = y3;\n            continue;\n        }\n        // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n        // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n        // and continue with P1 = P2 and P2 = P3\n        simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n        simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n        x1 = x2;\n        y1 = y2;\n        x2 = x3;\n        y2 = y3;\n    }\n    // add the last point (P2)\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        simplifiedOffset = quantize(flatCoordinates, offset, end, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset);\n        simplifiedEnds.push(simplifiedOffset);\n        offset = end;\n    }\n    return simplifiedOffset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(flatCoordinates, offset, endss, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        var simplifiedEnds = [];\n        simplifiedOffset = quantizeArray(flatCoordinates, offset, ends, stride, tolerance, simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n        simplifiedEndss.push(simplifiedEnds);\n        offset = ends[ends.length - 1];\n    }\n    return simplifiedOffset;\n}\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/events\n */\nimport { clear } from './obj.js';\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent\n */\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n    if (opt_this && opt_this !== target) {\n        listener = listener.bind(opt_this);\n    }\n    if (opt_once) {\n        var originalListener_1 = listener;\n        listener = function () {\n            target.removeEventListener(type, listener);\n            originalListener_1.apply(this, arguments);\n        };\n    }\n    var eventsKey = {\n        target: target,\n        type: type,\n        listener: listener,\n    };\n    target.addEventListener(type, listener);\n    return eventsKey;\n}\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n    return listen(target, type, listener, opt_this, true);\n}\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n    if (key && key.target) {\n        key.target.removeEventListener(key.type, key.listener);\n        clear(key);\n    }\n}\n//# sourceMappingURL=events.js.map","/**\n * @module ol/proj/Projection\n */\nimport { METERS_PER_UNIT } from './Units.js';\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = /** @class */ (function () {\n    /**\n     * @param {Options} options Projection options.\n     */\n    function Projection(options) {\n        /**\n         * @private\n         * @type {string}\n         */\n        this.code_ = options.code;\n        /**\n         * Units of projected coordinates. When set to `TILE_PIXELS`, a\n         * `this.extent_` and `this.worldExtent_` must be configured properly for each\n         * tile.\n         * @private\n         * @type {import(\"./Units.js\").default}\n         */\n        this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n        /**\n         * Validity extent of the projection in projected coordinates. For projections\n         * with `TILE_PIXELS` units, this is the extent of the tile in\n         * tile pixel space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = options.extent !== undefined ? options.extent : null;\n        /**\n         * Extent of the world in EPSG:4326. For projections with\n         * `TILE_PIXELS` units, this is the extent of the tile in\n         * projected coordinate space.\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.worldExtent_ =\n            options.worldExtent !== undefined ? options.worldExtent : null;\n        /**\n         * @private\n         * @type {string}\n         */\n        this.axisOrientation_ =\n            options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.global_ = options.global !== undefined ? options.global : false;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this.canWrapX_ = !!(this.global_ && this.extent_);\n        /**\n         * @private\n         * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n         */\n        this.getPointResolutionFunc_ = options.getPointResolution;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        this.defaultTileGrid_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.metersPerUnit_ = options.metersPerUnit;\n    }\n    /**\n     * @return {boolean} The projection is suitable for wrapping the x-axis\n     */\n    Projection.prototype.canWrapX = function () {\n        return this.canWrapX_;\n    };\n    /**\n     * Get the code for this projection, e.g. 'EPSG:4326'.\n     * @return {string} Code.\n     * @api\n     */\n    Projection.prototype.getCode = function () {\n        return this.code_;\n    };\n    /**\n     * Get the validity extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the units of this projection.\n     * @return {import(\"./Units.js\").default} Units.\n     * @api\n     */\n    Projection.prototype.getUnits = function () {\n        return this.units_;\n    };\n    /**\n     * Get the amount of meters per unit of this projection.  If the projection is\n     * not configured with `metersPerUnit` or a units identifier, the return is\n     * `undefined`.\n     * @return {number|undefined} Meters.\n     * @api\n     */\n    Projection.prototype.getMetersPerUnit = function () {\n        return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n    };\n    /**\n     * Get the world extent for this projection.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    Projection.prototype.getWorldExtent = function () {\n        return this.worldExtent_;\n    };\n    /**\n     * Get the axis orientation of this projection.\n     * Example values are:\n     * enu - the default easting, northing, elevation.\n     * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n     *     or south orientated transverse mercator.\n     * wnu - westing, northing, up - some planetary coordinate systems have\n     *     \"west positive\" coordinate systems\n     * @return {string} Axis orientation.\n     * @api\n     */\n    Projection.prototype.getAxisOrientation = function () {\n        return this.axisOrientation_;\n    };\n    /**\n     * Is this projection a global projection which spans the whole world?\n     * @return {boolean} Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.isGlobal = function () {\n        return this.global_;\n    };\n    /**\n     * Set if the projection is a global projection which spans the whole world\n     * @param {boolean} global Whether the projection is global.\n     * @api\n     */\n    Projection.prototype.setGlobal = function (global) {\n        this.global_ = global;\n        this.canWrapX_ = !!(global && this.extent_);\n    };\n    /**\n     * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n     */\n    Projection.prototype.getDefaultTileGrid = function () {\n        return this.defaultTileGrid_;\n    };\n    /**\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n     */\n    Projection.prototype.setDefaultTileGrid = function (tileGrid) {\n        this.defaultTileGrid_ = tileGrid;\n    };\n    /**\n     * Set the validity extent for this projection.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Projection.prototype.setExtent = function (extent) {\n        this.extent_ = extent;\n        this.canWrapX_ = !!(this.global_ && extent);\n    };\n    /**\n     * Set the world extent for this projection.\n     * @param {import(\"../extent.js\").Extent} worldExtent World extent\n     *     [minlon, minlat, maxlon, maxlat].\n     * @api\n     */\n    Projection.prototype.setWorldExtent = function (worldExtent) {\n        this.worldExtent_ = worldExtent;\n    };\n    /**\n     * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n     * for this projection.\n     * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n     * @api\n     */\n    Projection.prototype.setGetPointResolution = function (func) {\n        this.getPointResolutionFunc_ = func;\n    };\n    /**\n     * Get the custom point resolution function for this projection (if set).\n     * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n     * resolution function (if set).\n     */\n    Projection.prototype.getPointResolutionFunc = function () {\n        return this.getPointResolutionFunc_;\n    };\n    return Projection;\n}());\nexport default Projection;\n//# sourceMappingURL=Projection.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport { cosh } from '../math.js';\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /** @class */ (function (_super) {\n    __extends(EPSG3857Projection, _super);\n    /**\n     * @param {string} code Code.\n     */\n    function EPSG3857Projection(code) {\n        return _super.call(this, {\n            code: code,\n            units: Units.METERS,\n            extent: EXTENT,\n            global: true,\n            worldExtent: WORLD_EXTENT,\n            getPointResolution: function (resolution, point) {\n                return resolution / cosh(point[1] / RADIUS);\n            },\n        }) || this;\n    }\n    return EPSG3857Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG3857Projection('EPSG:3857'),\n    new EPSG3857Projection('EPSG:102100'),\n    new EPSG3857Projection('EPSG:102113'),\n    new EPSG3857Projection('EPSG:900913'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n    new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n    new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    var halfSize = HALF_SIZE;\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (halfSize * input[i]) / 180;\n        var y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n        if (y > halfSize) {\n            y = halfSize;\n        }\n        else if (y < -halfSize) {\n            y = -halfSize;\n        }\n        output[i + 1] = y;\n    }\n    return output;\n}\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n    var length = input.length;\n    var dimension = opt_dimension > 1 ? opt_dimension : 2;\n    var output = opt_output;\n    if (output === undefined) {\n        if (dimension > 2) {\n            // preserve values beyond second dimension\n            output = input.slice();\n        }\n        else {\n            output = new Array(length);\n        }\n    }\n    for (var i = 0; i < length; i += dimension) {\n        output[i] = (180 * input[i]) / HALF_SIZE;\n        output[i + 1] =\n            (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n    }\n    return output;\n}\n//# sourceMappingURL=epsg3857.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /** @class */ (function (_super) {\n    __extends(EPSG4326Projection, _super);\n    /**\n     * @param {string} code Code.\n     * @param {string=} opt_axisOrientation Axis orientation.\n     */\n    function EPSG4326Projection(code, opt_axisOrientation) {\n        return _super.call(this, {\n            code: code,\n            units: Units.DEGREES,\n            extent: EXTENT,\n            axisOrientation: opt_axisOrientation,\n            global: true,\n            metersPerUnit: METERS_PER_UNIT,\n            worldExtent: EXTENT,\n        }) || this;\n    }\n    return EPSG4326Projection;\n}(Projection));\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n    new EPSG4326Projection('CRS:84'),\n    new EPSG4326Projection('EPSG:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n    new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n    new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n    new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu'),\n];\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n    cache = {};\n}\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n    return cache[code] || null;\n}\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n    cache[code] = projection;\n}\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport { isEmpty } from '../obj.js';\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n    transforms = {};\n}\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    if (!(sourceCode in transforms)) {\n        transforms[sourceCode] = {};\n    }\n    transforms[sourceCode][destinationCode] = transformFn;\n}\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n    var sourceCode = source.getCode();\n    var destinationCode = destination.getCode();\n    var transform = transforms[sourceCode][destinationCode];\n    delete transforms[sourceCode][destinationCode];\n    if (isEmpty(transforms[sourceCode])) {\n        delete transforms[sourceCode];\n    }\n    return transform;\n}\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n    var transform;\n    if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n        transform = transforms[sourceCode][destinationCode];\n    }\n    return transform;\n}\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, { METERS_PER_UNIT } from './proj/Units.js';\nimport { PROJECTIONS as EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326, } from './proj/epsg3857.js';\nimport { PROJECTIONS as EPSG4326_PROJECTIONS } from './proj/epsg4326.js';\nimport { add as addProj, clear as clearProj, get as getProj, } from './proj/projections.js';\nimport { add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc, } from './proj/transforms.js';\nimport { applyTransform, getWidth } from './extent.js';\nimport { clamp, modulo } from './math.js';\nimport { getDistance } from './sphere.js';\nimport { getWorldsAway } from './coordinate.js';\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\nexport { METERS_PER_UNIT };\nexport { Projection };\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n    var output;\n    if (opt_output !== undefined) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        output = opt_output;\n    }\n    else {\n        output = input.slice();\n    }\n    return output;\n}\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n    if (opt_output !== undefined && input !== opt_output) {\n        for (var i = 0, ii = input.length; i < ii; ++i) {\n            opt_output[i] = input[i];\n        }\n        input = opt_output;\n    }\n    return input;\n}\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n    addProj(projection.getCode(), projection);\n    addTransformFunc(projection, projection, cloneTransform);\n}\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n    projections.forEach(addProjection);\n}\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n    return typeof projectionLike === 'string'\n        ? getProj(/** @type {string} */ (projectionLike))\n        : /** @type {Projection} */ (projectionLike) || null;\n}\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n    projection = get(projection);\n    var pointResolution;\n    var getter = projection.getPointResolutionFunc();\n    if (getter) {\n        pointResolution = getter(resolution, point);\n        if (opt_units && opt_units !== projection.getUnits()) {\n            var metersPerUnit = projection.getMetersPerUnit();\n            if (metersPerUnit) {\n                pointResolution =\n                    (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n            }\n        }\n    }\n    else {\n        var units = projection.getUnits();\n        if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n            pointResolution = resolution;\n        }\n        else {\n            // Estimate point resolution by transforming the center pixel to EPSG:4326,\n            // measuring its width and height on the normal sphere, and taking the\n            // average of the width and height.\n            var toEPSG4326_1 = getTransformFromProjections(projection, get('EPSG:4326'));\n            var vertices = [\n                point[0] - resolution / 2,\n                point[1],\n                point[0] + resolution / 2,\n                point[1],\n                point[0],\n                point[1] - resolution / 2,\n                point[0],\n                point[1] + resolution / 2,\n            ];\n            vertices = toEPSG4326_1(vertices, vertices, 2);\n            var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n            var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n            pointResolution = (width + height) / 2;\n            var metersPerUnit = opt_units\n                ? METERS_PER_UNIT[opt_units]\n                : projection.getMetersPerUnit();\n            if (metersPerUnit !== undefined) {\n                pointResolution /= metersPerUnit;\n            }\n        }\n    }\n    return pointResolution;\n}\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n    addProjections(projections);\n    projections.forEach(function (source) {\n        projections.forEach(function (destination) {\n            if (source !== destination) {\n                addTransformFunc(source, destination, cloneTransform);\n            }\n        });\n    });\n}\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n    projections1.forEach(function (projection1) {\n        projections2.forEach(function (projection2) {\n            addTransformFunc(projection1, projection2, forwardTransform);\n            addTransformFunc(projection2, projection1, inverseTransform);\n        });\n    });\n}\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n    clearProj();\n    clearTransformFuncs();\n}\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n    if (!projection) {\n        return get(defaultCode);\n    }\n    else if (typeof projection === 'string') {\n        return get(projection);\n    }\n    else {\n        return /** @type {Projection} */ (projection);\n    }\n}\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n    return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n        var length = input.length;\n        var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n        var output = opt_output !== undefined ? opt_output : new Array(length);\n        for (var i = 0; i < length; i += dimension) {\n            var point = coordTransform([input[i], input[i + 1]]);\n            output[i] = point[0];\n            output[i + 1] = point[1];\n            for (var j = dimension - 1; j >= 2; --j) {\n                output[i + j] = input[i + j];\n            }\n        }\n        return output;\n    });\n}\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n    var sourceProj = get(source);\n    var destProj = get(destination);\n    addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n    addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n    return transform(coordinate, 'EPSG:4326', opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n    var lonLat = transform(coordinate, opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n    var lon = lonLat[0];\n    if (lon < -180 || lon > 180) {\n        lonLat[0] = modulo(lon + 180, 360) - 180;\n    }\n    return lonLat;\n}\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n    if (projection1 === projection2) {\n        return true;\n    }\n    var equalUnits = projection1.getUnits() === projection2.getUnits();\n    if (projection1.getCode() === projection2.getCode()) {\n        return equalUnits;\n    }\n    else {\n        var transformFunc = getTransformFromProjections(projection1, projection2);\n        return transformFunc === cloneTransform && equalUnits;\n    }\n}\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n    var sourceCode = sourceProjection.getCode();\n    var destinationCode = destinationProjection.getCode();\n    var transformFunc = getTransformFunc(sourceCode, destinationCode);\n    if (!transformFunc) {\n        transformFunc = identityTransform;\n    }\n    return transformFunc;\n}\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n    var sourceProjection = get(source);\n    var destinationProjection = get(destination);\n    return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n    var transformFunc = getTransform(source, destination);\n    return transformFunc(coordinate, undefined, coordinate.length);\n}\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number=} opt_stops Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n    var transformFunc = getTransform(source, destination);\n    return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n    var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n    return transformFunc(point);\n}\n/**\n * @type {?Projection}\n */\nvar userProjection = null;\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n    userProjection = get(projection);\n}\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n    userProjection = null;\n}\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n    return userProjection;\n}\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n    setUserProjection('EPSG:4326');\n}\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, sourceProjection, userProjection);\n}\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n    if (!userProjection) {\n        return coordinate;\n    }\n    return transform(coordinate, userProjection, destProjection);\n}\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, sourceProjection, userProjection);\n}\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n    if (!userProjection) {\n        return extent;\n    }\n    return transformExtent(extent, userProjection, destProjection);\n}\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n    return function (coord) {\n        var sourceX = coord[0];\n        var sourceY = coord[1];\n        var transformed, worldsAway;\n        if (sourceProj.canWrapX()) {\n            var sourceExtent = sourceProj.getExtent();\n            var sourceExtentWidth = getWidth(sourceExtent);\n            worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n            if (worldsAway) {\n                // Move x to the real world\n                sourceX = sourceX - worldsAway * sourceExtentWidth;\n            }\n            sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n            sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n            transformed = transform([sourceX, sourceY]);\n        }\n        else {\n            transformed = transform(coord);\n        }\n        if (worldsAway && destProj.canWrapX()) {\n            // Move transformed coordinate back to the offset world\n            transformed[0] += worldsAway * getWidth(destProj.getExtent());\n        }\n        return transformed;\n    };\n}\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n    // Add transformations that don't alter coordinates to convert within set of\n    // projections with equal meaning.\n    addEquivalentProjections(EPSG3857_PROJECTIONS);\n    addEquivalentProjections(EPSG4326_PROJECTIONS);\n    // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n    // coordinates and back.\n    addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\naddCommon();\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport { getUid } from '../util.js';\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n    'Point': renderPointGeometry,\n    'LineString': renderLineStringGeometry,\n    'Polygon': renderPolygonGeometry,\n    'MultiPoint': renderMultiPointGeometry,\n    'MultiLineString': renderMultiLineStringGeometry,\n    'MultiPolygon': renderMultiPolygonGeometry,\n    'GeometryCollection': renderGeometryCollectionGeometry,\n    'Circle': renderCircleGeometry,\n};\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n    return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n    var tolerance = getTolerance(resolution, pixelRatio);\n    return tolerance * tolerance;\n}\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n    return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n        circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        circleReplay.drawCircle(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n    var loading = false;\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        var imageState = imageStyle.getImageState();\n        if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n            imageStyle.unlistenImageChange(listener);\n        }\n        else {\n            if (imageState == ImageState.IDLE) {\n                imageStyle.load();\n            }\n            imageState = imageStyle.getImageState();\n            imageStyle.listenImageChange(listener);\n            loading = true;\n        }\n    }\n    renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n    return loading;\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n        return;\n    }\n    var simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n    var renderer = style.getRenderer();\n    if (renderer) {\n        renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n    }\n    else {\n        var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n        geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n    if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n        var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            renderGeometry(replayGroup, geometries[i], style, feature);\n        }\n        return;\n    }\n    var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n    replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n        geometryRenderer(replayGroup, geometries[i], style, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n    var strokeStyle = style.getStroke();\n    if (strokeStyle) {\n        var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n        lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n        lineStringReplay.drawMultiLineString(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (strokeStyle || fillStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawMultiPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n    var imageStyle = style.getImage();\n    if (imageStyle) {\n        if (imageStyle.getImageState() != ImageState.LOADED) {\n            return;\n        }\n        var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n        imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n        imageReplay.drawMultiPoint(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n        textReplay.drawText(geometry, feature);\n    }\n}\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n    var fillStyle = style.getFill();\n    var strokeStyle = style.getStroke();\n    if (fillStyle || strokeStyle) {\n        var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n        polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n        polygonReplay.drawPolygon(geometry, feature);\n    }\n    var textStyle = style.getText();\n    if (textStyle) {\n        var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n        textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n        textReplay.drawText(geometry, feature);\n    }\n}\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/render/Event\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Event from '../events/Event.js';\nvar RenderEvent = /** @class */ (function (_super) {\n    __extends(RenderEvent, _super);\n    /**\n     * @param {import(\"./EventType.js\").default} type Type.\n     * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n     *     CSS pixels to rendered pixels.\n     * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     * @param {?CanvasRenderingContext2D=} opt_context Context.\n     */\n    function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n         * to rendered pixels on this event's `context`.\n         * @type {import(\"../transform.js\").Transform|undefined}\n         * @api\n         */\n        _this.inversePixelTransform = opt_inversePixelTransform;\n        /**\n         * An object representing the current render frame state.\n         * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n         * @api\n         */\n        _this.frameState = opt_frameState;\n        /**\n         * Canvas context. Not available when the event is dispatched by the map. Only available\n         * when a Canvas renderer is used, null otherwise.\n         * @type {CanvasRenderingContext2D|null|undefined}\n         * @api\n         */\n        _this.context = opt_context;\n        return _this;\n    }\n    return RenderEvent;\n}(Event));\nexport default RenderEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/size\n */\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = size[0] + 2 * num;\n    opt_size[1] = size[1] + 2 * num;\n    return opt_size;\n}\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n    return size[0] > 0 && size[1] > 0;\n}\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n    if (opt_size === undefined) {\n        opt_size = [0, 0];\n    }\n    opt_size[0] = (size[0] * ratio + 0.5) | 0;\n    opt_size[1] = (size[1] * ratio + 0.5) | 0;\n    return opt_size;\n}\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n    if (Array.isArray(size)) {\n        return size;\n    }\n    else {\n        if (opt_size === undefined) {\n            opt_size = [size, size];\n        }\n        else {\n            opt_size[0] = size;\n            opt_size[1] = size;\n        }\n        return opt_size;\n    }\n}\n//# sourceMappingURL=size.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { listen, listenOnce, unlistenByKey } from './events.js';\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nvar Observable = /** @class */ (function (_super) {\n    __extends(Observable, _super);\n    function Observable() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.revision_ = 0;\n        return _this;\n    }\n    /**\n     * Increases the revision counter and dispatches a 'change' event.\n     * @api\n     */\n    Observable.prototype.changed = function () {\n        ++this.revision_;\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Get the version number for this object.  Each time the object is modified,\n     * its version number will be incremented.\n     * @return {number} Revision.\n     * @api\n     */\n    Observable.prototype.getRevision = function () {\n        return this.revision_;\n    };\n    /**\n     * Listen for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.on = function (type, listener) {\n        if (Array.isArray(type)) {\n            var len = type.length;\n            var keys = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                keys[i] = listen(this, type[i], listener);\n            }\n            return keys;\n        }\n        else {\n            return listen(this, /** @type {string} */ (type), listener);\n        }\n    };\n    /**\n     * Listen once for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n     *     called with an array of event types as the first argument, the return\n     *     will be an array of keys.\n     * @api\n     */\n    Observable.prototype.once = function (type, listener) {\n        var key;\n        if (Array.isArray(type)) {\n            var len = type.length;\n            key = new Array(len);\n            for (var i = 0; i < len; ++i) {\n                key[i] = listenOnce(this, type[i], listener);\n            }\n        }\n        else {\n            key = listenOnce(this, /** @type {string} */ (type), listener);\n        }\n        /** @type {Object} */ (listener).ol_key = key;\n        return key;\n    };\n    /**\n     * Unlisten for a certain type of event.\n     * @param {string|Array<string>} type The event type or array of event types.\n     * @param {function(?): ?} listener The listener function.\n     * @api\n     */\n    Observable.prototype.un = function (type, listener) {\n        var key = /** @type {Object} */ (listener).ol_key;\n        if (key) {\n            unByKey(key);\n        }\n        else if (Array.isArray(type)) {\n            for (var i = 0, ii = type.length; i < ii; ++i) {\n                this.removeEventListener(type[i], listener);\n            }\n        }\n        else {\n            this.removeEventListener(type, listener);\n        }\n    };\n    return Observable;\n}(EventTarget));\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n    if (Array.isArray(key)) {\n        for (var i = 0, ii = key.length; i < ii; ++i) {\n            unlistenByKey(key[i]);\n        }\n    }\n    else {\n        unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n    }\n}\nexport default Observable;\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n/**\n * @enum {string}\n */\nexport default {\n    CIRCLE: 'Circle',\n    DEFAULT: 'Default',\n    IMAGE: 'Image',\n    LINE_STRING: 'LineString',\n    POLYGON: 'Polygon',\n    TEXT: 'Text',\n};\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/extent/Corner\n */\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n    BOTTOM_LEFT: 'bottom-left',\n    BOTTOM_RIGHT: 'bottom-right',\n    TOP_LEFT: 'top-left',\n    TOP_RIGHT: 'top-right',\n};\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/obj\n */\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var i = 1, ii = arguments.length; i < ii; ++i) {\n            var source = arguments[i];\n            if (source !== undefined && source !== null) {\n                for (var key in source) {\n                    if (source.hasOwnProperty(key)) {\n                        output[key] = source[key];\n                    }\n                }\n            }\n        }\n        return output;\n    };\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n    for (var property in object) {\n        delete object[property];\n    }\n}\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        var values = [];\n        for (var property in object) {\n            values.push(object[property]);\n        }\n        return values;\n    };\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n    var property;\n    for (property in object) {\n        return false;\n    }\n    return !property;\n}\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport { asString } from '../color.js';\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = /** @class */ (function () {\n    function IconImageCache() {\n        /**\n         * @type {!Object<string, import(\"./IconImage.js\").default>}\n         * @private\n         */\n        this.cache_ = {};\n        /**\n         * @type {number}\n         * @private\n         */\n        this.cacheSize_ = 0;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.maxCacheSize_ = 32;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.clear = function () {\n        this.cache_ = {};\n        this.cacheSize_ = 0;\n    };\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    IconImageCache.prototype.canExpireCache = function () {\n        return this.cacheSize_ > this.maxCacheSize_;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    IconImageCache.prototype.expire = function () {\n        if (this.canExpireCache()) {\n            var i = 0;\n            for (var key in this.cache_) {\n                var iconImage = this.cache_[key];\n                if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n                    delete this.cache_[key];\n                    --this.cacheSize_;\n                }\n            }\n        }\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @return {import(\"./IconImage.js\").default} Icon image.\n     */\n    IconImageCache.prototype.get = function (src, crossOrigin, color) {\n        var key = getKey(src, crossOrigin, color);\n        return key in this.cache_ ? this.cache_[key] : null;\n    };\n    /**\n     * @param {string} src Src.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"../color.js\").Color} color Color.\n     * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n     */\n    IconImageCache.prototype.set = function (src, crossOrigin, color, iconImage) {\n        var key = getKey(src, crossOrigin, color);\n        this.cache_[key] = iconImage;\n        ++this.cacheSize_;\n    };\n    /**\n     * Set the cache size of the icon cache. Default is `32`. Change this value when\n     * your map uses more than 32 different icon images and you are not caching icon\n     * styles on the application level.\n     * @param {number} maxCacheSize Cache max size.\n     * @api\n     */\n    IconImageCache.prototype.setSize = function (maxCacheSize) {\n        this.maxCacheSize_ = maxCacheSize;\n        this.expire();\n    };\n    return IconImageCache;\n}());\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n    var colorString = color ? asString(color) : 'null';\n    return crossOrigin + ':' + src + ':' + colorString;\n}\nexport default IconImageCache;\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n//# sourceMappingURL=IconImageCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { getValues } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /** @class */ (function (_super) {\n    __extends(PointerInteraction, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PointerInteraction(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        if (options.handleDownEvent) {\n            _this.handleDownEvent = options.handleDownEvent;\n        }\n        if (options.handleDragEvent) {\n            _this.handleDragEvent = options.handleDragEvent;\n        }\n        if (options.handleMoveEvent) {\n            _this.handleMoveEvent = options.handleMoveEvent;\n        }\n        if (options.handleUpEvent) {\n            _this.handleUpEvent = options.handleUpEvent;\n        }\n        if (options.stopDown) {\n            _this.stopDown = options.stopDown;\n        }\n        /**\n         * @type {boolean}\n         * @protected\n         */\n        _this.handlingDownUpSequence = false;\n        /**\n         * @type {!Object<string, PointerEvent>}\n         * @private\n         */\n        _this.trackedPointers_ = {};\n        /**\n         * @type {Array<PointerEvent>}\n         * @protected\n         */\n        _this.targetPointers = [];\n        return _this;\n    }\n    /**\n     * Returns the current number of pointers involved in the interaction,\n     * e.g. `2` when two fingers are used.\n     * @return {number} The number of pointers.\n     * @api\n     */\n    PointerInteraction.prototype.getPointerCount = function () {\n        return this.targetPointers.length;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDownEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleDragEvent = function (mapBrowserEvent) { };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n     * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n     * detected.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    PointerInteraction.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!mapBrowserEvent.originalEvent) {\n            return true;\n        }\n        var stopEvent = false;\n        this.updateTrackedPointers_(mapBrowserEvent);\n        if (this.handlingDownUpSequence) {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n                this.handleDragEvent(mapBrowserEvent);\n                // prevent page scrolling during dragging\n                mapBrowserEvent.preventDefault();\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                var handledUp = this.handleUpEvent(mapBrowserEvent);\n                this.handlingDownUpSequence =\n                    handledUp && this.targetPointers.length > 0;\n            }\n        }\n        else {\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                var handled = this.handleDownEvent(mapBrowserEvent);\n                this.handlingDownUpSequence = handled;\n                stopEvent = this.stopDown(handled);\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n                this.handleMoveEvent(mapBrowserEvent);\n            }\n        }\n        return !stopEvent;\n    };\n    /**\n     * Handle pointer move events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @protected\n     */\n    PointerInteraction.prototype.handleMoveEvent = function (mapBrowserEvent) { };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     * @protected\n     */\n    PointerInteraction.prototype.handleUpEvent = function (mapBrowserEvent) {\n        return false;\n    };\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @param {boolean} handled Was the event handled by the interaction?\n     * @return {boolean} Should the `down` event be stopped?\n     */\n    PointerInteraction.prototype.stopDown = function (handled) {\n        return handled;\n    };\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @private\n     */\n    PointerInteraction.prototype.updateTrackedPointers_ = function (mapBrowserEvent) {\n        if (isPointerDraggingEvent(mapBrowserEvent)) {\n            var event_1 = mapBrowserEvent.originalEvent;\n            var id = event_1.pointerId.toString();\n            if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n                delete this.trackedPointers_[id];\n            }\n            else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n                this.trackedPointers_[id] = event_1;\n            }\n            else if (id in this.trackedPointers_) {\n                // update only when there was a pointerdown event for this pointer\n                this.trackedPointers_[id] = event_1;\n            }\n            this.targetPointers = getValues(this.trackedPointers_);\n        }\n    };\n    return PointerInteraction;\n}(Interaction));\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n    var length = pointerEvents.length;\n    var clientX = 0;\n    var clientY = 0;\n    for (var i = 0; i < length; i++) {\n        clientX += pointerEvents[i].clientX;\n        clientY += pointerEvents[i].clientY;\n    }\n    return [clientX / length, clientY / length];\n}\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n    var type = mapBrowserEvent.type;\n    return (type === MapBrowserEventType.POINTERDOWN ||\n        type === MapBrowserEventType.POINTERDRAG ||\n        type === MapBrowserEventType.POINTERUP);\n}\nexport default PointerInteraction;\n//# sourceMappingURL=Pointer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport { easeOut, linear } from '../easing.js';\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /** @class */ (function (_super) {\n    __extends(Interaction, _super);\n    /**\n     * @param {InteractionOptions=} opt_options Options.\n     */\n    function Interaction(opt_options) {\n        var _this = _super.call(this) || this;\n        if (opt_options && opt_options.handleEvent) {\n            _this.handleEvent = opt_options.handleEvent;\n        }\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        _this.setActive(true);\n        return _this;\n    }\n    /**\n     * Return whether the interaction is currently active.\n     * @return {boolean} `true` if the interaction is active, `false` otherwise.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.getActive = function () {\n        return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n    };\n    /**\n     * Get the map associated with this interaction.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Interaction.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @api\n     */\n    Interaction.prototype.handleEvent = function (mapBrowserEvent) {\n        return true;\n    };\n    /**\n     * Activate or deactivate the interaction.\n     * @param {boolean} active Active.\n     * @observable\n     * @api\n     */\n    Interaction.prototype.setActive = function (active) {\n        this.set(InteractionProperty.ACTIVE, active);\n    };\n    /**\n     * Remove the interaction from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    Interaction.prototype.setMap = function (map) {\n        this.map_ = map;\n    };\n    return Interaction;\n}(BaseObject));\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n    var currentCenter = view.getCenterInternal();\n    if (currentCenter) {\n        var center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n        view.animateInternal({\n            duration: opt_duration !== undefined ? opt_duration : 250,\n            easing: linear,\n            center: view.getConstrainedCenter(center),\n        });\n    }\n}\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n    var currentZoom = view.getZoom();\n    if (currentZoom === undefined) {\n        return;\n    }\n    var newZoom = view.getConstrainedZoom(currentZoom + delta);\n    var newResolution = view.getResolutionForZoom(newZoom);\n    if (view.getAnimating()) {\n        view.cancelAnimations();\n    }\n    view.animate({\n        resolution: newResolution,\n        anchor: opt_anchor,\n        duration: opt_duration !== undefined ? opt_duration : 250,\n        easing: easeOut,\n    });\n}\nexport default Interaction;\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/ViewHint\n */\n/**\n * @enum {number}\n */\nexport default {\n    ANIMATING: 0,\n    INTERACTING: 1,\n};\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n    XY: 'XY',\n    XYZ: 'XYZ',\n    XYM: 'XYM',\n    XYZM: 'XYZM',\n};\n//# sourceMappingURL=GeometryLayout.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport { abstract } from '../util.js';\nimport { assert } from '../asserts.js';\nimport { assign } from '../obj.js';\nimport { clamp } from '../math.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /** @class */ (function (_super) {\n    __extends(BaseLayer, _super);\n    /**\n     * @param {Options} options Layer options.\n     */\n    function BaseLayer(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = assign({}, options);\n        properties[LayerProperty.OPACITY] =\n            options.opacity !== undefined ? options.opacity : 1;\n        assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n        properties[LayerProperty.VISIBLE] =\n            options.visible !== undefined ? options.visible : true;\n        properties[LayerProperty.Z_INDEX] = options.zIndex;\n        properties[LayerProperty.MAX_RESOLUTION] =\n            options.maxResolution !== undefined ? options.maxResolution : Infinity;\n        properties[LayerProperty.MIN_RESOLUTION] =\n            options.minResolution !== undefined ? options.minResolution : 0;\n        properties[LayerProperty.MIN_ZOOM] =\n            options.minZoom !== undefined ? options.minZoom : -Infinity;\n        properties[LayerProperty.MAX_ZOOM] =\n            options.maxZoom !== undefined ? options.maxZoom : Infinity;\n        /**\n         * @type {string}\n         * @private\n         */\n        _this.className_ =\n            properties.className !== undefined ? options.className : 'ol-layer';\n        delete properties.className;\n        _this.setProperties(properties);\n        /**\n         * @type {import(\"./Layer.js\").State}\n         * @private\n         */\n        _this.state_ = null;\n        return _this;\n    }\n    /**\n     * @return {string} CSS class name.\n     */\n    BaseLayer.prototype.getClassName = function () {\n        return this.className_;\n    };\n    /**\n     * This method is not meant to be called by layers or layer renderers because the state\n     * is incorrect if the layer is included in a layer group.\n     *\n     * @param {boolean=} opt_managed Layer is managed.\n     * @return {import(\"./Layer.js\").State} Layer state.\n     */\n    BaseLayer.prototype.getLayerState = function (opt_managed) {\n        /** @type {import(\"./Layer.js\").State} */\n        var state = this.state_ ||\n            /** @type {?} */ ({\n                layer: this,\n                managed: opt_managed === undefined ? true : opt_managed,\n            });\n        var zIndex = this.getZIndex();\n        state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n        state.sourceState = this.getSourceState();\n        state.visible = this.getVisible();\n        state.extent = this.getExtent();\n        state.zIndex =\n            zIndex !== undefined ? zIndex : state.managed === false ? Infinity : 0;\n        state.maxResolution = this.getMaxResolution();\n        state.minResolution = Math.max(this.getMinResolution(), 0);\n        state.minZoom = this.getMinZoom();\n        state.maxZoom = this.getMaxZoom();\n        this.state_ = state;\n        return state;\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n     *     modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    BaseLayer.prototype.getLayersArray = function (opt_array) {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n     *     states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    BaseLayer.prototype.getLayerStatesArray = function (opt_states) {\n        return abstract();\n    };\n    /**\n     * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n     * will be visible regardless of extent.\n     * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getExtent = function () {\n        return /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT));\n    };\n    /**\n     * Return the maximum resolution of the layer.\n     * @return {number} The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n    };\n    /**\n     * Return the minimum resolution of the layer.\n     * @return {number} The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinResolution = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n    };\n    /**\n     * Return the minimum zoom level of the layer.\n     * @return {number} The minimum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n    };\n    /**\n     * Return the maximum zoom level of the layer.\n     * @return {number} The maximum zoom level of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n    };\n    /**\n     * Return the opacity of the layer (between 0 and 1).\n     * @return {number} The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getOpacity = function () {\n        return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n    };\n    /**\n     * @abstract\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    BaseLayer.prototype.getSourceState = function () {\n        return abstract();\n    };\n    /**\n     * Return the visibility of the layer (`true` or `false`).\n     * @return {boolean} The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getVisible = function () {\n        return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n    };\n    /**\n     * Return the Z-index of the layer, which is used to order layers before\n     * rendering. The default Z-index is 0.\n     * @return {number} The Z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.getZIndex = function () {\n        return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n    };\n    /**\n     * Set the extent at which the layer is visible.  If `undefined`, the layer\n     * will be visible at all extents.\n     * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setExtent = function (extent) {\n        this.set(LayerProperty.EXTENT, extent);\n    };\n    /**\n     * Set the maximum resolution at which the layer is visible.\n     * @param {number} maxResolution The maximum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxResolution = function (maxResolution) {\n        this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n    };\n    /**\n     * Set the minimum resolution at which the layer is visible.\n     * @param {number} minResolution The minimum resolution of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinResolution = function (minResolution) {\n        this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n    };\n    /**\n     * Set the maximum zoom (exclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} maxZoom The maximum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMaxZoom = function (maxZoom) {\n        this.set(LayerProperty.MAX_ZOOM, maxZoom);\n    };\n    /**\n     * Set the minimum zoom (inclusive) at which the layer is visible.\n     * Note that the zoom levels for layer visibility are based on the\n     * view zoom level, which may be different from a tile source zoom level.\n     * @param {number} minZoom The minimum zoom of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setMinZoom = function (minZoom) {\n        this.set(LayerProperty.MIN_ZOOM, minZoom);\n    };\n    /**\n     * Set the opacity of the layer, allowed values range from 0 to 1.\n     * @param {number} opacity The opacity of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setOpacity = function (opacity) {\n        assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n        this.set(LayerProperty.OPACITY, opacity);\n    };\n    /**\n     * Set the visibility of the layer (`true` or `false`).\n     * @param {boolean} visible The visibility of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setVisible = function (visible) {\n        this.set(LayerProperty.VISIBLE, visible);\n    };\n    /**\n     * Set Z-index of the layer, which is used to order layers before rendering.\n     * The default Z-index is 0.\n     * @param {number} zindex The z-index of the layer.\n     * @observable\n     * @api\n     */\n    BaseLayer.prototype.setZIndex = function (zindex) {\n        this.set(LayerProperty.Z_INDEX, zindex);\n    };\n    /**\n     * Clean up.\n     */\n    BaseLayer.prototype.disposeInternal = function () {\n        if (this.state_) {\n            this.state_.layer = null;\n            this.state_ = null;\n        }\n        _super.prototype.disposeInternal.call(this);\n    };\n    return BaseLayer;\n}(BaseObject));\nexport default BaseLayer;\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/functions\n */\nimport { equals as arrayEquals } from './array.js';\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n    return true;\n}\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n    return false;\n}\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() { }\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n    var called = false;\n    /** @type {ReturnType} */\n    var lastResult;\n    /** @type {Array<any>} */\n    var lastArgs;\n    var lastThis;\n    return function () {\n        var nextArgs = Array.prototype.slice.call(arguments);\n        if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n            called = true;\n            lastThis = this;\n            lastArgs = nextArgs;\n            lastResult = fn.apply(this, arguments);\n        }\n        return lastResult;\n    };\n}\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/MapEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered after a map frame is rendered.\n     * @event module:ol/MapEvent~MapEvent#postrender\n     * @api\n     */\n    POSTRENDER: 'postrender',\n    /**\n     * Triggered when the map starts moving.\n     * @event module:ol/MapEvent~MapEvent#movestart\n     * @api\n     */\n    MOVESTART: 'movestart',\n    /**\n     * Triggered after the map is moved.\n     * @event module:ol/MapEvent~MapEvent#moveend\n     * @api\n     */\n    MOVEEND: 'moveend',\n};\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/color\n */\nimport { assert } from './asserts.js';\nimport { clamp } from './math.js';\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n    if (typeof color === 'string') {\n        return color;\n    }\n    else {\n        return toString(color);\n    }\n}\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n    var el = document.createElement('div');\n    el.style.color = color;\n    if (el.style.color !== '') {\n        document.body.appendChild(el);\n        var rgb = getComputedStyle(el).color;\n        document.body.removeChild(el);\n        return rgb;\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (function () {\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n    return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n            color = cache[s];\n        }\n        else {\n            if (cacheSize >= MAX_CACHE_SIZE) {\n                var i = 0;\n                for (var key in cache) {\n                    if ((i++ & 3) === 0) {\n                        delete cache[key];\n                        --cacheSize;\n                    }\n                }\n            }\n            color = fromStringInternal_(s);\n            cache[s] = color;\n            ++cacheSize;\n        }\n        return color;\n    });\n})();\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n    if (Array.isArray(color)) {\n        return color;\n    }\n    else {\n        return fromString(color);\n    }\n}\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n    var r, g, b, a, color;\n    if (NAMED_COLOR_RE_.exec(s)) {\n        s = fromNamed(s);\n    }\n    if (HEX_COLOR_RE_.exec(s)) {\n        // hex\n        var n = s.length - 1; // number of hex digits\n        var d = // number of digits per channel\n         void 0; // number of digits per channel\n        if (n <= 4) {\n            d = 1;\n        }\n        else {\n            d = 2;\n        }\n        var hasAlpha = n === 4 || n === 8;\n        r = parseInt(s.substr(1 + 0 * d, d), 16);\n        g = parseInt(s.substr(1 + 1 * d, d), 16);\n        b = parseInt(s.substr(1 + 2 * d, d), 16);\n        if (hasAlpha) {\n            a = parseInt(s.substr(1 + 3 * d, d), 16);\n        }\n        else {\n            a = 255;\n        }\n        if (d == 1) {\n            r = (r << 4) + r;\n            g = (g << 4) + g;\n            b = (b << 4) + b;\n            if (hasAlpha) {\n                a = (a << 4) + a;\n            }\n        }\n        color = [r, g, b, a / 255];\n    }\n    else if (s.indexOf('rgba(') == 0) {\n        // rgba()\n        color = s.slice(5, -1).split(',').map(Number);\n        normalize(color);\n    }\n    else if (s.indexOf('rgb(') == 0) {\n        // rgb()\n        color = s.slice(4, -1).split(',').map(Number);\n        color.push(1);\n        normalize(color);\n    }\n    else {\n        assert(false, 14); // Invalid color\n    }\n    return color;\n}\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n    color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n    color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n    color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n    color[3] = clamp(color[3], 0, 1);\n    return color;\n}\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n    var r = color[0];\n    if (r != (r | 0)) {\n        r = (r + 0.5) | 0;\n    }\n    var g = color[1];\n    if (g != (g | 0)) {\n        g = (g + 0.5) | 0;\n    }\n    var b = color[2];\n    if (b != (b | 0)) {\n        b = (b + 0.5) | 0;\n    }\n    var a = color[3] === undefined ? 1 : color[3];\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n    if (NAMED_COLOR_RE_.test(s)) {\n        s = fromNamed(s);\n    }\n    return (HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0);\n}\n//# sourceMappingURL=color.js.map","/**\n * @module ol/has\n */\nvar ua = typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport var WORKER_OFFSCREEN_CANVAS = typeof WorkerGlobalScope !== 'undefined' &&\n    typeof OffscreenCanvas !== 'undefined' &&\n    self instanceof WorkerGlobalScope; //eslint-disable-line\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport var IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n/**\n * @type {boolean}\n */\nexport var PASSIVE_EVENT_LISTENERS = (function () {\n    var passive = false;\n    try {\n        var options = Object.defineProperty({}, 'passive', {\n            get: function () {\n                passive = true;\n            },\n        });\n        window.addEventListener('_', null, options);\n        window.removeEventListener('_', null, options);\n    }\n    catch (error) {\n        // passive not supported\n    }\n    return passive;\n})();\n//# sourceMappingURL=has.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport { abstract } from './util.js';\n/**\n * @abstract\n */\nvar ImageBase = /** @class */ (function (_super) {\n    __extends(ImageBase, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./ImageState.js\").default} state State.\n     */\n    function ImageBase(extent, resolution, pixelRatio, state) {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.extent = extent;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @protected\n         * @type {number|undefined}\n         */\n        _this.resolution = resolution;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = state;\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    ImageBase.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    ImageBase.prototype.getExtent = function () {\n        return this.extent;\n    };\n    /**\n     * @abstract\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     */\n    ImageBase.prototype.getImage = function () {\n        return abstract();\n    };\n    /**\n     * @return {number} PixelRatio.\n     */\n    ImageBase.prototype.getPixelRatio = function () {\n        return this.pixelRatio_;\n    };\n    /**\n     * @return {number} Resolution.\n     */\n    ImageBase.prototype.getResolution = function () {\n        return /** @type {number} */ (this.resolution);\n    };\n    /**\n     * @return {import(\"./ImageState.js\").default} State.\n     */\n    ImageBase.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Load not yet loaded URI.\n     * @abstract\n     */\n    ImageBase.prototype.load = function () {\n        abstract();\n    };\n    return ImageBase;\n}(EventTarget));\nexport default ImageBase;\n//# sourceMappingURL=ImageBase.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport { IMAGE_DECODE } from './has.js';\nimport { getHeight } from './extent.js';\nimport { listenOnce, unlistenByKey } from './events.js';\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\nvar ImageWrapper = /** @class */ (function (_super) {\n    __extends(ImageWrapper, _super);\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {LoadFunction} imageLoadFunction Image load function.\n     */\n    function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n        var _this = _super.call(this, extent, resolution, pixelRatio, ImageState.IDLE) || this;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @protected\n         * @type {import(\"./ImageState.js\").default}\n         */\n        _this.state = ImageState.IDLE;\n        /**\n         * @private\n         * @type {LoadFunction}\n         */\n        _this.imageLoadFunction_ = imageLoadFunction;\n        return _this;\n    }\n    /**\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageWrapper.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageError_ = function () {\n        this.state = ImageState.ERROR;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.handleImageLoad_ = function () {\n        if (this.resolution === undefined) {\n            this.resolution = getHeight(this.extent) / this.image_.height;\n        }\n        this.state = ImageState.LOADED;\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @api\n     */\n    ImageWrapper.prototype.load = function () {\n        if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n            this.state = ImageState.LOADING;\n            this.changed();\n            this.imageLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n     */\n    ImageWrapper.prototype.setImage = function (image) {\n        this.image_ = image;\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageWrapper.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageWrapper;\n}(ImageBase));\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n    var img = /** @type {HTMLImageElement} */ (image);\n    if (img.src && IMAGE_DECODE) {\n        var promise = img.decode();\n        var listening_1 = true;\n        var unlisten = function () {\n            listening_1 = false;\n        };\n        promise\n            .then(function () {\n            if (listening_1) {\n                loadHandler();\n            }\n        })\n            .catch(function (error) {\n            if (listening_1) {\n                // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n                //        https://bugs.webkit.org/show_bug.cgi?id=198527\n                if (error.name === 'EncodingError' &&\n                    error.message === 'Invalid image type.') {\n                    loadHandler();\n                }\n                else {\n                    errorHandler();\n                }\n            }\n        });\n        return unlisten;\n    }\n    var listenerKeys = [\n        listenOnce(img, EventType.LOAD, loadHandler),\n        listenOnce(img, EventType.ERROR, errorHandler),\n    ];\n    return function unlisten() {\n        listenerKeys.forEach(unlistenByKey);\n    };\n}\nexport default ImageWrapper;\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/State\n */\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n    UNDEFINED: 'undefined',\n    LOADING: 'loading',\n    READY: 'ready',\n    ERROR: 'error',\n};\n//# sourceMappingURL=State.js.map","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport { toDegrees, toRadians } from './math.js';\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lat2 = toRadians(c2[1]);\n    var deltaLatBy2 = (lat2 - lat1) / 2;\n    var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n    var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n        Math.sin(deltaLonBy2) *\n            Math.sin(deltaLonBy2) *\n            Math.cos(lat1) *\n            Math.cos(lat2);\n    return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n    var length = 0;\n    for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n        length += getDistance(coordinates[i], coordinates[i + 1], radius);\n    }\n    return length;\n}\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var length = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT: {\n            break;\n        }\n        case GeometryType.LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            length = getLengthInternal(coordinates, radius);\n            break;\n        }\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                length += getLengthInternal(coordinates[i], radius);\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                for (j = 0, jj = coords.length; j < jj; ++j) {\n                    length += getLengthInternal(coords[j], radius);\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                length += getLength(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return length;\n}\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n    var area = 0;\n    var len = coordinates.length;\n    var x1 = coordinates[len - 1][0];\n    var y1 = coordinates[len - 1][1];\n    for (var i = 0; i < len; i++) {\n        var x2 = coordinates[i][0];\n        var y2 = coordinates[i][1];\n        area +=\n            toRadians(x2 - x1) *\n                (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n        x1 = x2;\n        y1 = y2;\n    }\n    return (area * radius * radius) / 2.0;\n}\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n    var options = opt_options || {};\n    var radius = options.radius || DEFAULT_RADIUS;\n    var projection = options.projection || 'EPSG:3857';\n    var type = geometry.getType();\n    if (type !== GeometryType.GEOMETRY_COLLECTION) {\n        geometry = geometry.clone().transform(projection, 'EPSG:4326');\n    }\n    var area = 0;\n    var coordinates, coords, i, ii, j, jj;\n    switch (type) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n        case GeometryType.LINE_STRING:\n        case GeometryType.MULTI_LINE_STRING:\n        case GeometryType.LINEAR_RING: {\n            break;\n        }\n        case GeometryType.POLYGON: {\n            coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n            area = Math.abs(getAreaInternal(coordinates[0], radius));\n            for (i = 1, ii = coordinates.length; i < ii; ++i) {\n                area -= Math.abs(getAreaInternal(coordinates[i], radius));\n            }\n            break;\n        }\n        case GeometryType.MULTI_POLYGON: {\n            coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n            for (i = 0, ii = coordinates.length; i < ii; ++i) {\n                coords = coordinates[i];\n                area += Math.abs(getAreaInternal(coords[0], radius));\n                for (j = 1, jj = coords.length; j < jj; ++j) {\n                    area -= Math.abs(getAreaInternal(coords[j], radius));\n                }\n            }\n            break;\n        }\n        case GeometryType.GEOMETRY_COLLECTION: {\n            var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n            for (i = 0, ii = geometries.length; i < ii; ++i) {\n                area += getArea(geometries[i], opt_options);\n            }\n            break;\n        }\n        default: {\n            throw new Error('Unsupported geometry type: ' + type);\n        }\n    }\n    return area;\n}\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n    var radius = opt_radius || DEFAULT_RADIUS;\n    var lat1 = toRadians(c1[1]);\n    var lon1 = toRadians(c1[0]);\n    var dByR = distance / radius;\n    var lat = Math.asin(Math.sin(lat1) * Math.cos(dByR) +\n        Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n    var lon = lon1 +\n        Math.atan2(Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1), Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n    return [toDegrees(lon), toDegrees(lat)];\n}\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/ObjectEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a property is changed.\n     * @event module:ol/Object.ObjectEvent#propertychange\n     * @api\n     */\n    PROPERTYCHANGE: 'propertychange',\n};\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/math\n */\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var cosh;\n    if ('cosh' in Math) {\n        // The environment supports the native Math.cosh function, use it…\n        cosh = Math.cosh;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        cosh = function (x) {\n            var y = /** @type {Math} */ (Math).exp(x);\n            return (y + 1 / y) / 2;\n        };\n    }\n    return cosh;\n})();\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport var log2 = (function () {\n    // Wrapped in a iife, to save the overhead of checking for the native\n    // implementation on every invocation.\n    var log2;\n    if ('log2' in Math) {\n        // The environment supports the native Math.log2 function, use it…\n        log2 = Math.log2;\n    }\n    else {\n        // … else, use the reference implementation of MDN:\n        log2 = function (x) {\n            return Math.log(x) * Math.LOG2E;\n        };\n    }\n    return log2;\n})();\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    if (dx !== 0 || dy !== 0) {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            x1 = x2;\n            y1 = y2;\n        }\n        else if (t > 0) {\n            x1 += dx * t;\n            y1 += dy * t;\n        }\n    }\n    return squaredDistance(x, y, x1, y1);\n}\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    return dx * dx + dy * dy;\n}\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n    var n = mat.length;\n    for (var i = 0; i < n; i++) {\n        // Find max in the i-th column (ignoring i - 1 first rows)\n        var maxRow = i;\n        var maxEl = Math.abs(mat[i][i]);\n        for (var r = i + 1; r < n; r++) {\n            var absValue = Math.abs(mat[r][i]);\n            if (absValue > maxEl) {\n                maxEl = absValue;\n                maxRow = r;\n            }\n        }\n        if (maxEl === 0) {\n            return null; // matrix is singular\n        }\n        // Swap max row with i-th (current) row\n        var tmp = mat[maxRow];\n        mat[maxRow] = mat[i];\n        mat[i] = tmp;\n        // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n        for (var j = i + 1; j < n; j++) {\n            var coef = -mat[j][i] / mat[i][i];\n            for (var k = i; k < n + 1; k++) {\n                if (i == k) {\n                    mat[j][k] = 0;\n                }\n                else {\n                    mat[j][k] += coef * mat[i][k];\n                }\n            }\n        }\n    }\n    // Solve Ax=b for upper triangular matrix A (mat)\n    var x = new Array(n);\n    for (var l = n - 1; l >= 0; l--) {\n        x[l] = mat[l][n] / mat[l][l];\n        for (var m = l - 1; m >= 0; m--) {\n            mat[m][n] -= mat[m][l] * x[l];\n        }\n    }\n    return x;\n}\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n    return (angleInRadians * 180) / Math.PI;\n}\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n    return (angleInDegrees * Math.PI) / 180;\n}\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n    var r = a % b;\n    return r * b < 0 ? r + b : r;\n}\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n    return a + x * (b - a);\n}\n//# sourceMappingURL=math.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/AssertionError\n */\nimport { VERSION } from './util.js';\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /** @class */ (function (_super) {\n    __extends(AssertionError, _super);\n    /**\n     * @param {number} code Error code.\n     */\n    function AssertionError(code) {\n        var _this = this;\n        var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n        var message = 'Assertion failed. See https://openlayers.org/en/' +\n            path +\n            '/doc/errors/#' +\n            code +\n            ' for details.';\n        _this = _super.call(this, message) || this;\n        /**\n         * Error code. The meaning of the code can be found on\n         * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n         * the version found in the OpenLayers script's header comment if a version\n         * other than the latest is used).\n         * @type {number}\n         * @api\n         */\n        _this.code = code;\n        /**\n         * @type {string}\n         */\n        _this.name = 'AssertionError';\n        // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n        _this.message = message;\n        return _this;\n    }\n    return AssertionError;\n}(Error));\nexport default AssertionError;\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/ImageState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n    if (!assertion) {\n        throw new AssertionError(errorCode);\n    }\n}\n//# sourceMappingURL=asserts.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, create as createTransform, } from '../transform.js';\nimport { createEmpty, createOrUpdateEmpty, getHeight, returnOrUpdate, } from '../extent.js';\nimport { get as getProjection, getTransform } from '../proj.js';\nimport { memoizeOne } from '../functions.js';\nimport { transform2D } from './flat/transform.js';\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /** @class */ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        _this.extent_ = createEmpty();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.extentRevision_ = -1;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.simplifiedGeometryRevision = 0;\n        /**\n         * Get a transformed and simplified version of the geometry.\n         * @abstract\n         * @param {number} revision The geometry revision.\n         * @param {number} squaredTolerance Squared tolerance.\n         * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n         * @return {Geometry} Simplified geometry.\n         */\n        _this.simplifyTransformedInternal = memoizeOne(function (revision, squaredTolerance, opt_transform) {\n            if (!opt_transform) {\n                return this.getSimplifiedGeometry(squaredTolerance);\n            }\n            var clone = this.clone();\n            clone.applyTransform(opt_transform);\n            return clone.getSimplifiedGeometry(squaredTolerance);\n        });\n        return _this;\n    }\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.simplifyTransformed = function (squaredTolerance, opt_transform) {\n        return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @abstract\n     * @return {!Geometry} Clone.\n     */\n    Geometry.prototype.clone = function () {\n        return abstract();\n    };\n    /**\n     * @abstract\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Geometry.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        return abstract();\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Geometry.prototype.containsXY = function (x, y) {\n        var coord = this.getClosestPoint([x, y]);\n        return coord[0] === x && coord[1] === y;\n    };\n    /**\n     * Return the closest point of the geometry to the passed point as\n     * {@link module:ol/coordinate~Coordinate coordinate}.\n     * @param {import(\"../coordinate.js\").Coordinate} point Point.\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n     * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n     * @api\n     */\n    Geometry.prototype.getClosestPoint = function (point, opt_closestPoint) {\n        var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n        this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n        return closestPoint;\n    };\n    /**\n     * Returns true if this geometry includes the specified coordinate. If the\n     * coordinate is on the boundary of the geometry, returns false.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains coordinate.\n     * @api\n     */\n    Geometry.prototype.intersectsCoordinate = function (coordinate) {\n        return this.containsXY(coordinate[0], coordinate[1]);\n    };\n    /**\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Geometry.prototype.computeExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Get the extent of the geometry.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     * @api\n     */\n    Geometry.prototype.getExtent = function (opt_extent) {\n        if (this.extentRevision_ != this.getRevision()) {\n            var extent = this.computeExtent(this.extent_);\n            if (isNaN(extent[0]) || isNaN(extent[1])) {\n                createOrUpdateEmpty(extent);\n            }\n            this.extentRevision_ = this.getRevision();\n        }\n        return returnOrUpdate(this.extent_, opt_extent);\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    Geometry.prototype.rotate = function (angle, anchor) {\n        abstract();\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @abstract\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    Geometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        abstract();\n    };\n    /**\n     * Create a simplified version of this geometry.  For linestrings, this uses\n     * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n     * algorithm.  For polygons, a quantization-based\n     * simplification is used to preserve topology.\n     * @param {number} tolerance The tolerance distance for simplification.\n     * @return {Geometry} A new, simplified version of the original geometry.\n     * @api\n     */\n    Geometry.prototype.simplify = function (tolerance) {\n        return this.getSimplifiedGeometry(tolerance * tolerance);\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker\n     * algorithm.\n     * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n     * @abstract\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Geometry} Simplified geometry.\n     */\n    Geometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        return abstract();\n    };\n    /**\n     * Get the type of this geometry.\n     * @abstract\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     */\n    Geometry.prototype.getType = function () {\n        return abstract();\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @abstract\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     */\n    Geometry.prototype.applyTransform = function (transformFn) {\n        abstract();\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @abstract\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     */\n    Geometry.prototype.intersectsExtent = function (extent) {\n        return abstract();\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @abstract\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    Geometry.prototype.translate = function (deltaX, deltaY) {\n        abstract();\n    };\n    /**\n     * Transform each coordinate of the geometry from one coordinate reference\n     * system to another. The geometry is modified in place.\n     * For example, a line will be transformed to a line and a circle to a circle.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n     *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n     * @return {Geometry} This geometry.  Note that original geometry is\n     *     modified in place.\n     * @api\n     */\n    Geometry.prototype.transform = function (source, destination) {\n        /** @type {import(\"../proj/Projection.js\").default} */\n        var sourceProj = getProjection(source);\n        var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS\n            ? function (inCoordinates, outCoordinates, stride) {\n                var pixelExtent = sourceProj.getExtent();\n                var projectedExtent = sourceProj.getWorldExtent();\n                var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n                composeTransform(tmpTransform, projectedExtent[0], projectedExtent[3], scale, -scale, 0, 0, 0);\n                transform2D(inCoordinates, 0, inCoordinates.length, stride, tmpTransform, outCoordinates);\n                return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n            }\n            : getTransform(sourceProj, destination);\n        this.applyTransform(transformFn);\n        return this;\n    };\n    return Geometry;\n}(BaseObject));\nexport default Geometry;\n//# sourceMappingURL=Geometry.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport { abstract } from '../util.js';\nimport { createOrUpdateFromFlatCoordinates, getCenter } from '../extent.js';\nimport { rotate, scale, transform2D, translate } from './flat/transform.js';\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /** @class */ (function (_super) {\n    __extends(SimpleGeometry, _super);\n    function SimpleGeometry() {\n        var _this = _super.call(this) || this;\n        /**\n         * @protected\n         * @type {import(\"./GeometryLayout.js\").default}\n         */\n        _this.layout = GeometryLayout.XY;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.stride = 2;\n        /**\n         * @protected\n         * @type {Array<number>}\n         */\n        _this.flatCoordinates = null;\n        return _this;\n    }\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    SimpleGeometry.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromFlatCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, extent);\n    };\n    /**\n     * @abstract\n     * @return {Array<*>} Coordinates.\n     */\n    SimpleGeometry.prototype.getCoordinates = function () {\n        return abstract();\n    };\n    /**\n     * Return the first coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n     * @api\n     */\n    SimpleGeometry.prototype.getFirstCoordinate = function () {\n        return this.flatCoordinates.slice(0, this.stride);\n    };\n    /**\n     * @return {Array<number>} Flat coordinates.\n     */\n    SimpleGeometry.prototype.getFlatCoordinates = function () {\n        return this.flatCoordinates;\n    };\n    /**\n     * Return the last coordinate of the geometry.\n     * @return {import(\"../coordinate.js\").Coordinate} Last point.\n     * @api\n     */\n    SimpleGeometry.prototype.getLastCoordinate = function () {\n        return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n    };\n    /**\n     * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n     * @return {import(\"./GeometryLayout.js\").default} Layout.\n     * @api\n     */\n    SimpleGeometry.prototype.getLayout = function () {\n        return this.layout;\n    };\n    /**\n     * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometry = function (squaredTolerance) {\n        if (this.simplifiedGeometryRevision !== this.getRevision()) {\n            this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n            this.simplifiedGeometryRevision = this.getRevision();\n        }\n        // If squaredTolerance is negative or if we know that simplification will not\n        // have any effect then just return this.\n        if (squaredTolerance < 0 ||\n            (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n                squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n            return this;\n        }\n        var simplifiedGeometry = this.getSimplifiedGeometryInternal(squaredTolerance);\n        var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n        if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n            return simplifiedGeometry;\n        }\n        else {\n            // Simplification did not actually remove any coordinates.  We now know\n            // that any calls to getSimplifiedGeometry with a squaredTolerance less\n            // than or equal to the current squaredTolerance will also not have any\n            // effect.  This allows us to short circuit simplification (saving CPU\n            // cycles) and prevents the cache of simplified geometries from filling\n            // up with useless identical copies of this geometry (saving memory).\n            this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n            return this;\n        }\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {SimpleGeometry} Simplified geometry.\n     * @protected\n     */\n    SimpleGeometry.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        return this;\n    };\n    /**\n     * @return {number} Stride.\n     */\n    SimpleGeometry.prototype.getStride = function () {\n        return this.stride;\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     */\n    SimpleGeometry.prototype.setFlatCoordinates = function (layout, flatCoordinates) {\n        this.stride = getStrideForLayout(layout);\n        this.layout = layout;\n        this.flatCoordinates = flatCoordinates;\n    };\n    /**\n     * @abstract\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    SimpleGeometry.prototype.setCoordinates = function (coordinates, opt_layout) {\n        abstract();\n    };\n    /**\n     * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n     * @param {Array<*>} coordinates Coordinates.\n     * @param {number} nesting Nesting.\n     * @protected\n     */\n    SimpleGeometry.prototype.setLayout = function (layout, coordinates, nesting) {\n        /** @type {number} */\n        var stride;\n        if (layout) {\n            stride = getStrideForLayout(layout);\n        }\n        else {\n            for (var i = 0; i < nesting; ++i) {\n                if (coordinates.length === 0) {\n                    this.layout = GeometryLayout.XY;\n                    this.stride = 2;\n                    return;\n                }\n                else {\n                    coordinates = /** @type {Array} */ (coordinates[0]);\n                }\n            }\n            stride = coordinates.length;\n            layout = getLayoutForStride(stride);\n        }\n        this.layout = layout;\n        this.stride = stride;\n    };\n    /**\n     * Apply a transform function to the coordinates of the geometry.\n     * The geometry is modified in place.\n     * If you do not want the geometry modified in place, first `clone()` it and\n     * then use this function on the clone.\n     * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n     * Called with a flat array of geometry coordinates.\n     * @api\n     */\n    SimpleGeometry.prototype.applyTransform = function (transformFn) {\n        if (this.flatCoordinates) {\n            transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n            this.changed();\n        }\n    };\n    /**\n     * Rotate the geometry around a given coordinate. This modifies the geometry\n     * coordinates in place.\n     * @param {number} angle Rotation angle in radians.\n     * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n     * @api\n     */\n    SimpleGeometry.prototype.rotate = function (angle, anchor) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            rotate(flatCoordinates, 0, flatCoordinates.length, stride, angle, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Scale the geometry (with an optional origin).  This modifies the geometry\n     * coordinates in place.\n     * @param {number} sx The scaling factor in the x-direction.\n     * @param {number=} opt_sy The scaling factor in the y-direction (defaults to sx).\n     * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n     *     of the geometry extent).\n     * @api\n     */\n    SimpleGeometry.prototype.scale = function (sx, opt_sy, opt_anchor) {\n        var sy = opt_sy;\n        if (sy === undefined) {\n            sy = sx;\n        }\n        var anchor = opt_anchor;\n        if (!anchor) {\n            anchor = getCenter(this.getExtent());\n        }\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            scale(flatCoordinates, 0, flatCoordinates.length, stride, sx, sy, anchor, flatCoordinates);\n            this.changed();\n        }\n    };\n    /**\n     * Translate the geometry.  This modifies the geometry coordinates in place.  If\n     * instead you want a new geometry, first `clone()` this geometry.\n     * @param {number} deltaX Delta X.\n     * @param {number} deltaY Delta Y.\n     * @api\n     */\n    SimpleGeometry.prototype.translate = function (deltaX, deltaY) {\n        var flatCoordinates = this.getFlatCoordinates();\n        if (flatCoordinates) {\n            var stride = this.getStride();\n            translate(flatCoordinates, 0, flatCoordinates.length, stride, deltaX, deltaY, flatCoordinates);\n            this.changed();\n        }\n    };\n    return SimpleGeometry;\n}(Geometry));\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n    var layout;\n    if (stride == 2) {\n        layout = GeometryLayout.XY;\n    }\n    else if (stride == 3) {\n        layout = GeometryLayout.XYZ;\n    }\n    else if (stride == 4) {\n        layout = GeometryLayout.XYZM;\n    }\n    return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n    var stride;\n    if (layout == GeometryLayout.XY) {\n        stride = 2;\n    }\n    else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n        stride = 3;\n    }\n    else if (layout == GeometryLayout.XYZM) {\n        stride = 4;\n    }\n    return /** @type {number} */ (stride);\n}\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n    var flatCoordinates = simpleGeometry.getFlatCoordinates();\n    if (!flatCoordinates) {\n        return null;\n    }\n    else {\n        var stride = simpleGeometry.getStride();\n        return transform2D(flatCoordinates, 0, flatCoordinates.length, stride, transform, opt_dest);\n    }\n}\nexport default SimpleGeometry;\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/array\n */\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n    var mid, cmp;\n    var comparator = opt_comparator || numberSafeCompareFunction;\n    var low = 0;\n    var high = haystack.length;\n    var found = false;\n    while (low < high) {\n        /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n         * to double (which gives the wrong results). */\n        mid = low + ((high - low) >> 1);\n        cmp = +comparator(haystack[mid], needle);\n        if (cmp < 0.0) {\n            /* Too low. */\n            low = mid + 1;\n        }\n        else {\n            /* Key found or too high */\n            high = mid;\n            found = !cmp;\n        }\n    }\n    /* Key not found. */\n    return found ? low : ~low;\n}\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n    return a > b ? 1 : a < b ? -1 : 0;\n}\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n    return arr.indexOf(obj) >= 0;\n}\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n    var n = arr.length;\n    if (arr[0] <= target) {\n        return 0;\n    }\n    else if (target <= arr[n - 1]) {\n        return n - 1;\n    }\n    else {\n        var i = void 0;\n        if (direction > 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] < target) {\n                    return i - 1;\n                }\n            }\n        }\n        else if (direction < 0) {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] <= target) {\n                    return i;\n                }\n            }\n        }\n        else {\n            for (i = 1; i < n; ++i) {\n                if (arr[i] == target) {\n                    return i;\n                }\n                else if (arr[i] < target) {\n                    if (arr[i - 1] - target < target - arr[i]) {\n                        return i - 1;\n                    }\n                    else {\n                        return i;\n                    }\n                }\n            }\n        }\n        return n - 1;\n    }\n}\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n    while (begin < end) {\n        var tmp = arr[begin];\n        arr[begin] = arr[end];\n        arr[end] = tmp;\n        ++begin;\n        --end;\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n    var extension = Array.isArray(data) ? data : [data];\n    var length = extension.length;\n    for (var i = 0; i < length; i++) {\n        arr[arr.length] = extension[i];\n    }\n}\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n    var i = arr.indexOf(obj);\n    var found = i > -1;\n    if (found) {\n        arr.splice(i, 1);\n    }\n    return found;\n}\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n    var length = arr.length >>> 0;\n    var value;\n    for (var i = 0; i < length; i++) {\n        value = arr[i];\n        if (func(value, i, arr)) {\n            return value;\n        }\n    }\n    return null;\n}\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n    var len1 = arr1.length;\n    if (len1 !== arr2.length) {\n        return false;\n    }\n    for (var i = 0; i < len1; i++) {\n        if (arr1[i] !== arr2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n    var length = arr.length;\n    var tmp = Array(arr.length);\n    var i;\n    for (i = 0; i < length; i++) {\n        tmp[i] = { index: i, value: arr[i] };\n    }\n    tmp.sort(function (a, b) {\n        return compareFnc(a.value, b.value) || a.index - b.index;\n    });\n    for (i = 0; i < arr.length; i++) {\n        arr[i] = tmp[i].value;\n    }\n}\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n    var index;\n    var found = !arr.every(function (el, idx) {\n        index = idx;\n        return !func(el, idx, arr);\n    });\n    return found ? index : -1;\n}\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n    var compare = opt_func || numberSafeCompareFunction;\n    return arr.every(function (currentVal, index) {\n        if (index === 0) {\n            return true;\n        }\n        var res = compare(arr[index - 1], currentVal);\n        return !(res > 0 || (opt_strict && res === 0));\n    });\n}\n//# sourceMappingURL=array.js.map","/**\n * @module ol/coordinate\n */\nimport { getWidth } from './extent.js';\nimport { modulo } from './math.js';\nimport { padNumber } from './string.js';\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n    coordinate[0] += +delta[0];\n    coordinate[1] += +delta[1];\n    return coordinate;\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n    var r = circle.getRadius();\n    var center = circle.getCenter();\n    var x0 = center[0];\n    var y0 = center[1];\n    var x1 = coordinate[0];\n    var y1 = coordinate[1];\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    if (dx === 0 && dy === 0) {\n        dx = 1;\n    }\n    var d = Math.sqrt(dx * dx + dy * dy);\n    var x = x0 + (r * dx) / d;\n    var y = y0 + (r * dy) / d;\n    return [x, y];\n}\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n    var x0 = coordinate[0];\n    var y0 = coordinate[1];\n    var start = segment[0];\n    var end = segment[1];\n    var x1 = start[0];\n    var y1 = start[1];\n    var x2 = end[0];\n    var y2 = end[1];\n    var dx = x2 - x1;\n    var dy = y2 - y1;\n    var along = dx === 0 && dy === 0\n        ? 0\n        : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n    var x, y;\n    if (along <= 0) {\n        x = x1;\n        y = y1;\n    }\n    else if (along >= 1) {\n        x = x2;\n        y = y2;\n    }\n    else {\n        x = x1 + along * dx;\n        y = y1 + along * dy;\n    }\n    return [x, y];\n}\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n    return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n        return toStringXY(coordinate, opt_fractionDigits);\n    });\n}\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n    var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n    var x = Math.abs(3600 * normalizedDegrees);\n    var dflPrecision = opt_fractionDigits || 0;\n    var precision = Math.pow(10, dflPrecision);\n    var deg = Math.floor(x / 3600);\n    var min = Math.floor((x - deg * 3600) / 60);\n    var sec = x - deg * 3600 - min * 60;\n    sec = Math.ceil(sec * precision) / precision;\n    if (sec >= 60) {\n        sec = 0;\n        min += 1;\n    }\n    if (min >= 60) {\n        min = 0;\n        deg += 1;\n    }\n    return (deg +\n        '\\u00b0 ' +\n        padNumber(min, 2) +\n        '\\u2032 ' +\n        padNumber(sec, 2, dflPrecision) +\n        '\\u2033' +\n        (normalizedDegrees == 0\n            ? ''\n            : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0)));\n}\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n    if (coordinate) {\n        return template\n            .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n            .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n    var equals = true;\n    for (var i = coordinate1.length - 1; i >= 0; --i) {\n        if (coordinate1[i] != coordinate2[i]) {\n            equals = false;\n            break;\n        }\n    }\n    return equals;\n}\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n    var cosAngle = Math.cos(angle);\n    var sinAngle = Math.sin(angle);\n    var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    coordinate[0] = x;\n    coordinate[1] = y;\n    return coordinate;\n}\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n    coordinate[0] *= scale;\n    coordinate[1] *= scale;\n    return coordinate;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n    var dx = coord1[0] - coord2[0];\n    var dy = coord1[1] - coord2[1];\n    return dx * dx + dy * dy;\n}\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n    return Math.sqrt(squaredDistance(coord1, coord2));\n}\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n    return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n    if (coordinate) {\n        return (degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n            ' ' +\n            degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits));\n    }\n    else {\n        return '';\n    }\n}\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n    return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n    if (projection.canWrapX()) {\n        var worldWidth = getWidth(projection.getExtent());\n        var worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n        if (worldsAway) {\n            coordinate[0] -= worldsAway * worldWidth;\n        }\n    }\n    return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number=} opt_sourceExtentWidth Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n    var projectionExtent = projection.getExtent();\n    var worldsAway = 0;\n    if (projection.canWrapX() &&\n        (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])) {\n        var sourceExtentWidth = opt_sourceExtentWidth || getWidth(projectionExtent);\n        worldsAway = Math.floor((coordinate[0] - projectionExtent[0]) / sourceExtentWidth);\n    }\n    return worldsAway;\n}\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/transform\n */\nimport { assert } from './asserts.js';\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n    return [1, 0, 0, 1, 0, 0];\n}\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n    return set(transform, 1, 0, 0, 1, 0, 0);\n}\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n    var a1 = transform1[0];\n    var b1 = transform1[1];\n    var c1 = transform1[2];\n    var d1 = transform1[3];\n    var e1 = transform1[4];\n    var f1 = transform1[5];\n    var a2 = transform2[0];\n    var b2 = transform2[1];\n    var c2 = transform2[2];\n    var d2 = transform2[3];\n    var e2 = transform2[4];\n    var f2 = transform2[5];\n    transform1[0] = a1 * a2 + c1 * b2;\n    transform1[1] = b1 * a2 + d1 * b2;\n    transform1[2] = a1 * c2 + c1 * d2;\n    transform1[3] = b1 * c2 + d1 * d2;\n    transform1[4] = a1 * e2 + c1 * f2 + e1;\n    transform1[5] = b1 * e2 + d1 * f2 + f1;\n    return transform1;\n}\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n    transform[0] = a;\n    transform[1] = b;\n    transform[2] = c;\n    transform[3] = d;\n    transform[4] = e;\n    transform[5] = f;\n    return transform;\n}\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n    transform1[0] = transform2[0];\n    transform1[1] = transform2[1];\n    transform1[2] = transform2[2];\n    transform1[3] = transform2[3];\n    transform1[4] = transform2[4];\n    transform1[5] = transform2[5];\n    return transform1;\n}\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n    var x = coordinate[0];\n    var y = coordinate[1];\n    coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n    coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n    return coordinate;\n}\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n    return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n    return set(target, x, 0, 0, y, 0, 0);\n}\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n    return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n    var sin = Math.sin(angle);\n    var cos = Math.cos(angle);\n    transform[0] = sx * cos;\n    transform[1] = sy * sin;\n    transform[2] = -sx * sin;\n    transform[3] = sy * cos;\n    transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n    transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n    return transform;\n}\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` porperty of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n    return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n    return makeInverse(source, source);\n}\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n    var det = determinant(source);\n    assert(det !== 0, 32); // Transformation matrix cannot be inverted\n    var a = source[0];\n    var b = source[1];\n    var c = source[2];\n    var d = source[3];\n    var e = source[4];\n    var f = source[5];\n    target[0] = d / det;\n    target[1] = -b / det;\n    target[2] = -c / det;\n    target[3] = a / det;\n    target[4] = (c * f - d * e) / det;\n    target[5] = -(a * f - b * e) / det;\n    return target;\n}\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n    return mat[0] * mat[3] - mat[1] * mat[2];\n}\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n    return 'matrix(' + mat.join(', ') + ')';\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/flat/deflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n    for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n        flatCoordinates[offset++] = coordinate[i];\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var coordinate = coordinates[i];\n        for (var j = 0; j < stride; ++j) {\n            flatCoordinates[offset++] = coordinate[j];\n        }\n    }\n    return offset;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n    var ends = opt_ends ? opt_ends : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n        var end = deflateCoordinates(flatCoordinates, offset, coordinatess[j], stride);\n        ends[i++] = end;\n        offset = end;\n    }\n    ends.length = i;\n    return ends;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n    var endss = opt_endss ? opt_endss : [];\n    var i = 0;\n    for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n        var ends = deflateCoordinatesArray(flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n        endss[i++] = ends;\n        offset = ends[ends.length - 1];\n    }\n    endss.length = i;\n    return endss;\n}\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n    var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        coordinates[i++] = flatCoordinates.slice(j, j + stride);\n    }\n    coordinates.length = i;\n    return coordinates;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n    var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n    var i = 0;\n    for (var j = 0, jj = ends.length; j < jj; ++j) {\n        var end = ends[j];\n        coordinatess[i++] = inflateCoordinates(flatCoordinates, offset, end, stride, coordinatess[i]);\n        offset = end;\n    }\n    coordinatess.length = i;\n    return coordinatess;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n    var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n    var i = 0;\n    for (var j = 0, jj = endss.length; j < jj; ++j) {\n        var ends = endss[j];\n        coordinatesss[i++] = inflateCoordinatesArray(flatCoordinates, offset, ends, stride, coordinatesss[i]);\n        offset = ends[ends.length - 1];\n    }\n    coordinatesss.length = i;\n    return coordinatesss;\n}\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/transform\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var x = flatCoordinates[j];\n        var y = flatCoordinates[j + 1];\n        dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n        dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var cos = Math.cos(angle);\n    var sin = Math.sin(angle);\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n        dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var anchorX = anchor[0];\n    var anchorY = anchor[1];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        var deltaX = flatCoordinates[j] - anchorX;\n        var deltaY = flatCoordinates[j + 1] - anchorY;\n        dest[i++] = anchorX + sx * deltaX;\n        dest[i++] = anchorY + sy * deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n    var dest = opt_dest ? opt_dest : [];\n    var i = 0;\n    for (var j = offset; j < end; j += stride) {\n        dest[i++] = flatCoordinates[j] + deltaX;\n        dest[i++] = flatCoordinates[j + 1] + deltaY;\n        for (var k = j + 2; k < j + stride; ++k) {\n            dest[i++] = flatCoordinates[k];\n        }\n    }\n    if (opt_dest && dest.length != i) {\n        dest.length = i;\n    }\n    return dest;\n}\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/interaction/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    ACTIVE: 'active',\n};\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport { asColorLike } from '../../colorlike.js';\nimport { compose as composeTransform, create as createTransform, } from '../../transform.js';\nimport { defaultFillStyle, defaultFont, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextAlign, defaultTextBaseline, } from '../canvas.js';\nimport { equals } from '../../array.js';\nimport { intersects } from '../../extent.js';\nimport { transform2D } from '../../geom/flat/transform.js';\nimport { transformGeom2D } from '../../geom/SimpleGeometry.js';\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /** @class */ (function (_super) {\n    __extends(CanvasImmediateRenderer, _super);\n    /**\n     * @param {CanvasRenderingContext2D} context Context.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     * @param {number} viewRotation View rotation.\n     * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n     * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n     */\n    function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {CanvasRenderingContext2D}\n         */\n        _this.context_ = context;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.extent_ = extent;\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.transform_ = transform;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.viewRotation_ = viewRotation;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.squaredTolerance_ = opt_squaredTolerance;\n        /**\n         * @private\n         * @type {import(\"../../proj.js\").TransformFunction}\n         */\n        _this.userTransform_ = opt_userTransform;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.contextFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.contextStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.contextTextState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.fillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.strokeState_ = null;\n        /**\n         * @private\n         * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n         */\n        _this.image_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageAnchorY_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageHeight_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOpacity_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageOriginY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.imageRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.imageScale_ = [0, 0];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.imageWidth_ = 0;\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.text_ = '';\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetX_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textOffsetY_ = 0;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.textRotateWithView_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.textRotation_ = 0;\n        /**\n         * @private\n         * @type {import(\"../../size.js\").Size}\n         */\n        _this.textScale_ = [0, 0];\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").FillState}\n         */\n        _this.textFillState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").StrokeState}\n         */\n        _this.textStrokeState_ = null;\n        /**\n         * @private\n         * @type {?import(\"../canvas.js\").TextState}\n         */\n        _this.textState_ = null;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.pixelCoordinates_ = [];\n        /**\n         * @private\n         * @type {import(\"../../transform.js\").Transform}\n         */\n        _this.tmpLocalTransform_ = createTransform();\n        return _this;\n    }\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawImages_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.image_) {\n            return;\n        }\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, 2, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var localTransform = this.tmpLocalTransform_;\n        var alpha = context.globalAlpha;\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha * this.imageOpacity_;\n        }\n        var rotation = this.imageRotation_;\n        if (this.imageRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n            var x = pixelCoordinates[i] - this.imageAnchorX_;\n            var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n            if (rotation !== 0 ||\n                this.imageScale_[0] != 1 ||\n                this.imageScale_[1] != 1) {\n                var centerX = x + this.imageAnchorX_;\n                var centerY = y + this.imageAnchorY_;\n                composeTransform(localTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n                context.setTransform.apply(context, localTransform);\n                context.translate(centerX, centerY);\n                context.scale(this.imageScale_[0], this.imageScale_[1]);\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, -this.imageAnchorX_, -this.imageAnchorY_, this.imageWidth_, this.imageHeight_);\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_, this.imageWidth_, this.imageHeight_, x, y, this.imageWidth_, this.imageHeight_);\n            }\n        }\n        if (this.imageOpacity_ != 1) {\n            context.globalAlpha = alpha;\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.drawText_ = function (flatCoordinates, offset, end, stride) {\n        if (!this.textState_ || this.text_ === '') {\n            return;\n        }\n        if (this.textFillState_) {\n            this.setContextFillState_(this.textFillState_);\n        }\n        if (this.textStrokeState_) {\n            this.setContextStrokeState_(this.textStrokeState_);\n        }\n        this.setContextTextState_(this.textState_);\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        var context = this.context_;\n        var rotation = this.textRotation_;\n        if (this.textRotateWithView_) {\n            rotation += this.viewRotation_;\n        }\n        for (; offset < end; offset += stride) {\n            var x = pixelCoordinates[offset] + this.textOffsetX_;\n            var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n            if (rotation !== 0 ||\n                this.textScale_[0] != 1 ||\n                this.textScale_[1] != 1) {\n                var localTransform = composeTransform(this.tmpLocalTransform_, x, y, 1, 1, rotation, -x, -y);\n                context.setTransform.apply(context, localTransform);\n                context.translate(x, y);\n                context.scale(this.textScale_[0], this.textScale_[1]);\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, 0, 0);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, 0, 0);\n                }\n                context.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            else {\n                if (this.textStrokeState_) {\n                    context.strokeText(this.text_, x, y);\n                }\n                if (this.textFillState_) {\n                    context.fillText(this.text_, x, y);\n                }\n            }\n        }\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {number} end End.\n     * @param {number} stride Stride.\n     * @param {boolean} close Close.\n     * @private\n     * @return {number} end End.\n     */\n    CanvasImmediateRenderer.prototype.moveToLineTo_ = function (flatCoordinates, offset, end, stride, close) {\n        var context = this.context_;\n        var pixelCoordinates = transform2D(flatCoordinates, offset, end, stride, this.transform_, this.pixelCoordinates_);\n        context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n        var length = pixelCoordinates.length;\n        if (close) {\n            length -= 2;\n        }\n        for (var i = 2; i < length; i += 2) {\n            context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n        }\n        if (close) {\n            context.closePath();\n        }\n        return end;\n    };\n    /**\n     * @param {Array<number>} flatCoordinates Flat coordinates.\n     * @param {number} offset Offset.\n     * @param {Array<number>} ends Ends.\n     * @param {number} stride Stride.\n     * @private\n     * @return {number} End.\n     */\n    CanvasImmediateRenderer.prototype.drawRings_ = function (flatCoordinates, offset, ends, stride) {\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n        }\n        return offset;\n    };\n    /**\n     * Render a circle geometry into the canvas.  Rendering is immediate and uses\n     * the current fill and stroke styles.\n     *\n     * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawCircle = function (geometry) {\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.fillState_ || this.strokeState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var pixelCoordinates = transformGeom2D(geometry, this.transform_, this.pixelCoordinates_);\n            var dx = pixelCoordinates[2] - pixelCoordinates[0];\n            var dy = pixelCoordinates[3] - pixelCoordinates[1];\n            var radius = Math.sqrt(dx * dx + dy * dy);\n            var context = this.context_;\n            context.beginPath();\n            context.arc(pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            this.drawText_(geometry.getCenter(), 0, 2, 2);\n        }\n    };\n    /**\n     * Set the rendering style.  Note that since this is an immediate rendering API,\n     * any `zIndex` on the provided style will be ignored.\n     *\n     * @param {import(\"../../style/Style.js\").default} style The rendering style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.setStyle = function (style) {\n        this.setFillStrokeStyle(style.getFill(), style.getStroke());\n        this.setImageStyle(style.getImage());\n        this.setTextStyle(style.getText());\n    };\n    /**\n     * @param {import(\"../../transform.js\").Transform} transform Transform.\n     */\n    CanvasImmediateRenderer.prototype.setTransform = function (transform) {\n        this.transform_ = transform;\n    };\n    /**\n     * Render a geometry into the canvas.  Call\n     * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n     *\n     * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawGeometry = function (geometry) {\n        var type = geometry.getType();\n        switch (type) {\n            case GeometryType.POINT:\n                this.drawPoint(\n                /** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n                break;\n            case GeometryType.LINE_STRING:\n                this.drawLineString(\n                /** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.POLYGON:\n                this.drawPolygon(\n                /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POINT:\n                this.drawMultiPoint(\n                /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_LINE_STRING:\n                this.drawMultiLineString(\n                /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n                break;\n            case GeometryType.MULTI_POLYGON:\n                this.drawMultiPolygon(\n                /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n                break;\n            case GeometryType.GEOMETRY_COLLECTION:\n                this.drawGeometryCollection(\n                /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n                break;\n            case GeometryType.CIRCLE:\n                this.drawCircle(\n                /** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n                break;\n            default:\n        }\n    };\n    /**\n     * Render a feature into the canvas.  Note that any `zIndex` on the provided\n     * style will be ignored - features are rendered immediately in the order that\n     * this method is called.  If you need `zIndex` support, you should be using an\n     * {@link module:ol/layer/Vector~VectorLayer} instead.\n     *\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @param {import(\"../../style/Style.js\").default} style Style.\n     * @api\n     */\n    CanvasImmediateRenderer.prototype.drawFeature = function (feature, style) {\n        var geometry = style.getGeometryFunction()(feature);\n        if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        this.setStyle(style);\n        this.drawGeometry(geometry);\n    };\n    /**\n     * Render a GeometryCollection to the canvas.  Rendering is immediate and\n     * uses the current styles appropriate for each geometry in the collection.\n     *\n     * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n     */\n    CanvasImmediateRenderer.prototype.drawGeometryCollection = function (geometry) {\n        var geometries = geometry.getGeometriesArray();\n        for (var i = 0, ii = geometries.length; i < ii; ++i) {\n            this.drawGeometry(geometries[i]);\n        }\n    };\n    /**\n     * Render a Point geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n     * uses the current style.\n     *\n     * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPoint = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var flatCoordinates = geometry.getFlatCoordinates();\n        var stride = geometry.getStride();\n        if (this.image_) {\n            this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n        if (this.text_ !== '') {\n            this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n        }\n    };\n    /**\n     * Render a LineString into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            context.beginPath();\n            this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length, geometry.getStride(), false);\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoint = geometry.getFlatMidpoint();\n            this.drawText_(flatMidpoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n     * and uses the current style.\n     *\n     * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiLineString = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        var geometryExtent = geometry.getExtent();\n        if (!intersects(this.extent_, geometryExtent)) {\n            return;\n        }\n        if (this.strokeState_) {\n            this.setContextStrokeState_(this.strokeState_);\n            var context = this.context_;\n            var flatCoordinates = geometry.getFlatCoordinates();\n            var offset = 0;\n            var ends = /** @type {Array<number>} */ (geometry.getEnds());\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = ends.length; i < ii; ++i) {\n                offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n            }\n            context.stroke();\n        }\n        if (this.text_ !== '') {\n            var flatMidpoints = geometry.getFlatMidpoints();\n            this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n        }\n    };\n    /**\n     * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n     * the current style.\n     *\n     * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            context.beginPath();\n            this.drawRings_(geometry.getOrientedFlatCoordinates(), 0, \n            /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoint = geometry.getFlatInteriorPoint();\n            this.drawText_(flatInteriorPoint, 0, 2, 2);\n        }\n    };\n    /**\n     * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n     * uses the current style.\n     * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n     */\n    CanvasImmediateRenderer.prototype.drawMultiPolygon = function (geometry) {\n        if (this.squaredTolerance_) {\n            geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n        }\n        if (!intersects(this.extent_, geometry.getExtent())) {\n            return;\n        }\n        if (this.strokeState_ || this.fillState_) {\n            if (this.fillState_) {\n                this.setContextFillState_(this.fillState_);\n            }\n            if (this.strokeState_) {\n                this.setContextStrokeState_(this.strokeState_);\n            }\n            var context = this.context_;\n            var flatCoordinates = geometry.getOrientedFlatCoordinates();\n            var offset = 0;\n            var endss = geometry.getEndss();\n            var stride = geometry.getStride();\n            context.beginPath();\n            for (var i = 0, ii = endss.length; i < ii; ++i) {\n                var ends = endss[i];\n                offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n            }\n            if (this.fillState_) {\n                context.fill();\n            }\n            if (this.strokeState_) {\n                context.stroke();\n            }\n        }\n        if (this.text_ !== '') {\n            var flatInteriorPoints = geometry.getFlatInteriorPoints();\n            this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextFillState_ = function (fillState) {\n        var context = this.context_;\n        var contextFillState = this.contextFillState_;\n        if (!contextFillState) {\n            context.fillStyle = fillState.fillStyle;\n            this.contextFillState_ = {\n                fillStyle: fillState.fillStyle,\n            };\n        }\n        else {\n            if (contextFillState.fillStyle != fillState.fillStyle) {\n                contextFillState.fillStyle = fillState.fillStyle;\n                context.fillStyle = fillState.fillStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextStrokeState_ = function (strokeState) {\n        var context = this.context_;\n        var contextStrokeState = this.contextStrokeState_;\n        if (!contextStrokeState) {\n            context.lineCap = strokeState.lineCap;\n            if (context.setLineDash) {\n                context.setLineDash(strokeState.lineDash);\n                context.lineDashOffset = strokeState.lineDashOffset;\n            }\n            context.lineJoin = strokeState.lineJoin;\n            context.lineWidth = strokeState.lineWidth;\n            context.miterLimit = strokeState.miterLimit;\n            context.strokeStyle = strokeState.strokeStyle;\n            this.contextStrokeState_ = {\n                lineCap: strokeState.lineCap,\n                lineDash: strokeState.lineDash,\n                lineDashOffset: strokeState.lineDashOffset,\n                lineJoin: strokeState.lineJoin,\n                lineWidth: strokeState.lineWidth,\n                miterLimit: strokeState.miterLimit,\n                strokeStyle: strokeState.strokeStyle,\n            };\n        }\n        else {\n            if (contextStrokeState.lineCap != strokeState.lineCap) {\n                contextStrokeState.lineCap = strokeState.lineCap;\n                context.lineCap = strokeState.lineCap;\n            }\n            if (context.setLineDash) {\n                if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n                    context.setLineDash((contextStrokeState.lineDash = strokeState.lineDash));\n                }\n                if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n                    contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n                    context.lineDashOffset = strokeState.lineDashOffset;\n                }\n            }\n            if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n                contextStrokeState.lineJoin = strokeState.lineJoin;\n                context.lineJoin = strokeState.lineJoin;\n            }\n            if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n                contextStrokeState.lineWidth = strokeState.lineWidth;\n                context.lineWidth = strokeState.lineWidth;\n            }\n            if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n                contextStrokeState.miterLimit = strokeState.miterLimit;\n                context.miterLimit = strokeState.miterLimit;\n            }\n            if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n                contextStrokeState.strokeStyle = strokeState.strokeStyle;\n                context.strokeStyle = strokeState.strokeStyle;\n            }\n        }\n    };\n    /**\n     * @param {import(\"../canvas.js\").TextState} textState Text state.\n     * @private\n     */\n    CanvasImmediateRenderer.prototype.setContextTextState_ = function (textState) {\n        var context = this.context_;\n        var contextTextState = this.contextTextState_;\n        var textAlign = textState.textAlign\n            ? textState.textAlign\n            : defaultTextAlign;\n        if (!contextTextState) {\n            context.font = textState.font;\n            context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            this.contextTextState_ = {\n                font: textState.font,\n                textAlign: textAlign,\n                textBaseline: textState.textBaseline,\n            };\n        }\n        else {\n            if (contextTextState.font != textState.font) {\n                contextTextState.font = textState.font;\n                context.font = textState.font;\n            }\n            if (contextTextState.textAlign != textAlign) {\n                contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n                context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n            }\n            if (contextTextState.textBaseline != textState.textBaseline) {\n                contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n                context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n            }\n        }\n    };\n    /**\n     * Set the fill and stroke style for subsequent draw operations.  To clear\n     * either fill or stroke styles, pass null for the appropriate parameter.\n     *\n     * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    CanvasImmediateRenderer.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) {\n        if (!fillStyle) {\n            this.fillState_ = null;\n        }\n        else {\n            var fillStyleColor = fillStyle.getColor();\n            this.fillState_ = {\n                fillStyle: asColorLike(fillStyleColor ? fillStyleColor : defaultFillStyle),\n            };\n        }\n        if (!strokeStyle) {\n            this.strokeState_ = null;\n        }\n        else {\n            var strokeStyleColor = strokeStyle.getColor();\n            var strokeStyleLineCap = strokeStyle.getLineCap();\n            var strokeStyleLineDash = strokeStyle.getLineDash();\n            var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n            var strokeStyleLineJoin = strokeStyle.getLineJoin();\n            var strokeStyleWidth = strokeStyle.getWidth();\n            var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n            this.strokeState_ = {\n                lineCap: strokeStyleLineCap !== undefined\n                    ? strokeStyleLineCap\n                    : defaultLineCap,\n                lineDash: strokeStyleLineDash ? strokeStyleLineDash : defaultLineDash,\n                lineDashOffset: strokeStyleLineDashOffset\n                    ? strokeStyleLineDashOffset\n                    : defaultLineDashOffset,\n                lineJoin: strokeStyleLineJoin !== undefined\n                    ? strokeStyleLineJoin\n                    : defaultLineJoin,\n                lineWidth: this.pixelRatio_ *\n                    (strokeStyleWidth !== undefined\n                        ? strokeStyleWidth\n                        : defaultLineWidth),\n                miterLimit: strokeStyleMiterLimit !== undefined\n                    ? strokeStyleMiterLimit\n                    : defaultMiterLimit,\n                strokeStyle: asColorLike(strokeStyleColor ? strokeStyleColor : defaultStrokeStyle),\n            };\n        }\n    };\n    /**\n     * Set the image style for subsequent draw operations.  Pass null to remove\n     * the image style.\n     *\n     * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n     */\n    CanvasImmediateRenderer.prototype.setImageStyle = function (imageStyle) {\n        if (!imageStyle) {\n            this.image_ = null;\n        }\n        else {\n            var imageSize = imageStyle.getSize();\n            if (!imageSize) {\n                this.image_ = null;\n            }\n            else {\n                var imageAnchor = imageStyle.getAnchor();\n                // FIXME pixel ratio\n                var imageImage = imageStyle.getImage(1);\n                var imageOrigin = imageStyle.getOrigin();\n                var imageScale = imageStyle.getScaleArray();\n                this.imageAnchorX_ = imageAnchor[0];\n                this.imageAnchorY_ = imageAnchor[1];\n                this.imageHeight_ = imageSize[1];\n                this.image_ = imageImage;\n                this.imageOpacity_ = imageStyle.getOpacity();\n                this.imageOriginX_ = imageOrigin[0];\n                this.imageOriginY_ = imageOrigin[1];\n                this.imageRotateWithView_ = imageStyle.getRotateWithView();\n                this.imageRotation_ = imageStyle.getRotation();\n                this.imageScale_ = [\n                    this.pixelRatio_ * imageScale[0],\n                    this.pixelRatio_ * imageScale[1],\n                ];\n                this.imageWidth_ = imageSize[0];\n            }\n        }\n    };\n    /**\n     * Set the text style for subsequent draw operations.  Pass null to\n     * remove the text style.\n     *\n     * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n     */\n    CanvasImmediateRenderer.prototype.setTextStyle = function (textStyle) {\n        if (!textStyle) {\n            this.text_ = '';\n        }\n        else {\n            var textFillStyle = textStyle.getFill();\n            if (!textFillStyle) {\n                this.textFillState_ = null;\n            }\n            else {\n                var textFillStyleColor = textFillStyle.getColor();\n                this.textFillState_ = {\n                    fillStyle: asColorLike(textFillStyleColor ? textFillStyleColor : defaultFillStyle),\n                };\n            }\n            var textStrokeStyle = textStyle.getStroke();\n            if (!textStrokeStyle) {\n                this.textStrokeState_ = null;\n            }\n            else {\n                var textStrokeStyleColor = textStrokeStyle.getColor();\n                var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n                var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n                var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n                var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n                var textStrokeStyleWidth = textStrokeStyle.getWidth();\n                var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n                this.textStrokeState_ = {\n                    lineCap: textStrokeStyleLineCap !== undefined\n                        ? textStrokeStyleLineCap\n                        : defaultLineCap,\n                    lineDash: textStrokeStyleLineDash\n                        ? textStrokeStyleLineDash\n                        : defaultLineDash,\n                    lineDashOffset: textStrokeStyleLineDashOffset\n                        ? textStrokeStyleLineDashOffset\n                        : defaultLineDashOffset,\n                    lineJoin: textStrokeStyleLineJoin !== undefined\n                        ? textStrokeStyleLineJoin\n                        : defaultLineJoin,\n                    lineWidth: textStrokeStyleWidth !== undefined\n                        ? textStrokeStyleWidth\n                        : defaultLineWidth,\n                    miterLimit: textStrokeStyleMiterLimit !== undefined\n                        ? textStrokeStyleMiterLimit\n                        : defaultMiterLimit,\n                    strokeStyle: asColorLike(textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle),\n                };\n            }\n            var textFont = textStyle.getFont();\n            var textOffsetX = textStyle.getOffsetX();\n            var textOffsetY = textStyle.getOffsetY();\n            var textRotateWithView = textStyle.getRotateWithView();\n            var textRotation = textStyle.getRotation();\n            var textScale = textStyle.getScaleArray();\n            var textText = textStyle.getText();\n            var textTextAlign = textStyle.getTextAlign();\n            var textTextBaseline = textStyle.getTextBaseline();\n            this.textState_ = {\n                font: textFont !== undefined ? textFont : defaultFont,\n                textAlign: textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n                textBaseline: textTextBaseline !== undefined\n                    ? textTextBaseline\n                    : defaultTextBaseline,\n            };\n            this.text_ = textText !== undefined ? textText : '';\n            this.textOffsetX_ =\n                textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n            this.textOffsetY_ =\n                textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n            this.textRotateWithView_ =\n                textRotateWithView !== undefined ? textRotateWithView : false;\n            this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n            this.textScale_ = [\n                this.pixelRatio_ * textScale[0],\n                this.pixelRatio_ * textScale[1],\n            ];\n        }\n    };\n    return CanvasImmediateRenderer;\n}(VectorContext));\nexport default CanvasImmediateRenderer;\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/easing\n */\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n    return Math.pow(t, 3);\n}\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n    return 1 - easeIn(1 - t);\n}\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n    return 3 * t * t - 2 * t * t * t;\n}\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n    return t;\n}\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n    if (t < 0.5) {\n        return inAndOut(2 * t);\n    }\n    else {\n        return 1 - inAndOut(2 * (t - 0.5));\n    }\n}\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/css\n */\n/**\n * @typedef {Object} FontParameters\n * @property {string} style\n * @property {string} variant\n * @property {string} weight\n * @property {string} size\n * @property {string} lineHeight\n * @property {string} family\n * @property {Array<string>} families\n */\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n/**\n * From http://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nvar fontRegEx = new RegExp([\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n].join(''), 'i');\nvar fontRegExMatchIndex = [\n    'style',\n    'variant',\n    'weight',\n    'size',\n    'lineHeight',\n    'family',\n];\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport var getFontParameters = function (fontSpec) {\n    var match = fontSpec.match(fontRegEx);\n    if (!match) {\n        return null;\n    }\n    var style = /** @type {FontParameters} */ ({\n        lineHeight: 'normal',\n        size: '1.2em',\n        style: 'normal',\n        weight: 'normal',\n        variant: 'normal',\n    });\n    for (var i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n        var value = match[i + 1];\n        if (value !== undefined) {\n            style[fontRegExMatchIndex[i]] = value;\n        }\n    }\n    style.families = style.family.split(/,\\s?/);\n    return style;\n};\n//# sourceMappingURL=css.js.map","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar BaseEvent = /** @class */ (function () {\n    /**\n     * @param {string} type Type.\n     */\n    function BaseEvent(type) {\n        /**\n         * @type {boolean}\n         */\n        this.propagationStopped;\n        /**\n         * The event type.\n         * @type {string}\n         * @api\n         */\n        this.type = type;\n        /**\n         * The event target.\n         * @type {Object}\n         * @api\n         */\n        this.target = null;\n    }\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.preventDefault = function () {\n        this.propagationStopped = true;\n    };\n    /**\n     * Stop event propagation.\n     * @api\n     */\n    BaseEvent.prototype.stopPropagation = function () {\n        this.propagationStopped = true;\n    };\n    return BaseEvent;\n}());\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n    evt.stopPropagation();\n}\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n    evt.preventDefault();\n}\nexport default BaseEvent;\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/Disposable\n */\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = /** @class */ (function () {\n    function Disposable() {\n        /**\n         * The object has already been disposed.\n         * @type {boolean}\n         * @protected\n         */\n        this.disposed = false;\n    }\n    /**\n     * Clean up.\n     */\n    Disposable.prototype.dispose = function () {\n        if (!this.disposed) {\n            this.disposed = true;\n            this.disposeInternal();\n        }\n    };\n    /**\n     * Extension point for disposable objects.\n     * @protected\n     */\n    Disposable.prototype.disposeInternal = function () { };\n    return Disposable;\n}());\nexport default Disposable;\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport { WORKER_OFFSCREEN_CANVAS } from '../has.js';\nimport { clear } from '../obj.js';\nimport { createCanvasContext2D } from '../dom.js';\nimport { getFontParameters } from '../css.js';\nimport { toString } from '../transform.js';\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n/**\n * @typedef Label\n * @property {number} width\n * @property {number} height\n * @property {Array<string|number>} contextInstructions\n */\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {import(\"../size.js\").Size} [scale]\n * @property {Array<number>} [padding]\n */\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultFillStyle = '#000';\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport var defaultLineCap = 'round';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport var defaultLineJoin = 'round';\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport var defaultStrokeStyle = '#000';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n/**\n * @type {BaseObject}\n */\nexport var checkedFonts = new BaseObject();\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport var labelCache = new EventTarget();\nlabelCache.setSize = function () {\n    console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n/**\n * @type {string}\n */\nvar measureFont;\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var registerFont = (function () {\n    var retries = 100;\n    var size = '32px ';\n    var referenceFonts = ['monospace', 'serif'];\n    var len = referenceFonts.length;\n    var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n    var interval, referenceWidth;\n    /**\n     * @param {string} fontStyle Css font-style\n     * @param {string} fontWeight Css font-weight\n     * @param {*} fontFamily Css font-family\n     * @return {boolean} Font with style and weight is available\n     */\n    function isAvailable(fontStyle, fontWeight, fontFamily) {\n        var available = true;\n        for (var i = 0; i < len; ++i) {\n            var referenceFont = referenceFonts[i];\n            referenceWidth = measureTextWidth(fontStyle + ' ' + fontWeight + ' ' + size + referenceFont, text);\n            if (fontFamily != referenceFont) {\n                var width = measureTextWidth(fontStyle +\n                    ' ' +\n                    fontWeight +\n                    ' ' +\n                    size +\n                    fontFamily +\n                    ',' +\n                    referenceFont, text);\n                // If width and referenceWidth are the same, then the fallback was used\n                // instead of the font we wanted, so the font is not available.\n                available = available && width != referenceWidth;\n            }\n        }\n        if (available) {\n            return true;\n        }\n        return false;\n    }\n    function check() {\n        var done = true;\n        var fonts = checkedFonts.getKeys();\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            if (checkedFonts.get(font) < retries) {\n                if (isAvailable.apply(this, font.split('\\n'))) {\n                    clear(textHeights);\n                    // Make sure that loaded fonts are picked up by Safari\n                    measureContext = null;\n                    measureFont = undefined;\n                    checkedFonts.set(font, retries);\n                }\n                else {\n                    checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n                    done = false;\n                }\n            }\n        }\n        if (done) {\n            clearInterval(interval);\n            interval = undefined;\n        }\n    }\n    return function (fontSpec) {\n        var font = getFontParameters(fontSpec);\n        if (!font) {\n            return;\n        }\n        var families = font.families;\n        for (var i = 0, ii = families.length; i < ii; ++i) {\n            var family = families[i];\n            var key = font.style + '\\n' + font.weight + '\\n' + family;\n            if (checkedFonts.get(key) === undefined) {\n                checkedFonts.set(key, retries, true);\n                if (!isAvailable(font.style, font.weight, family)) {\n                    checkedFonts.set(key, 0, true);\n                    if (interval === undefined) {\n                        interval = setInterval(check, 32);\n                    }\n                }\n            }\n        }\n    };\n})();\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function () {\n    /**\n     * @type {HTMLDivElement}\n     */\n    var div;\n    var heights = textHeights;\n    return function (fontSpec) {\n        var height = heights[fontSpec];\n        if (height == undefined) {\n            if (WORKER_OFFSCREEN_CANVAS) {\n                var font = getFontParameters(fontSpec);\n                var metrics = measureText(fontSpec, 'Žg');\n                var lineHeight = isNaN(Number(font.lineHeight))\n                    ? 1.2\n                    : Number(font.lineHeight);\n                textHeights[fontSpec] =\n                    lineHeight *\n                        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n            }\n            else {\n                if (!div) {\n                    div = document.createElement('div');\n                    div.innerHTML = 'M';\n                    div.style.margin = '0 !important';\n                    div.style.padding = '0 !important';\n                    div.style.position = 'absolute !important';\n                    div.style.left = '-99999px !important';\n                }\n                div.style.font = fontSpec;\n                document.body.appendChild(div);\n                height = div.offsetHeight;\n                heights[fontSpec] = height;\n                document.body.removeChild(div);\n            }\n        }\n        return height;\n    };\n})();\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n    if (!measureContext) {\n        measureContext = createCanvasContext2D(1, 1);\n    }\n    if (font != measureFont) {\n        measureContext.font = font;\n        measureFont = measureContext.font;\n    }\n    return measureContext.measureText(text);\n}\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n    return measureText(font, text).width;\n}\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n    if (text in cache) {\n        return cache[text];\n    }\n    var width = measureTextWidth(font, text);\n    cache[text] = width;\n    return width;\n}\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n    var numLines = lines.length;\n    var width = 0;\n    for (var i = 0; i < numLines; ++i) {\n        var currentWidth = measureTextWidth(font, lines[i]);\n        width = Math.max(width, currentWidth);\n        widths.push(currentWidth);\n    }\n    return width;\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n    if (rotation !== 0) {\n        context.translate(offsetX, offsetY);\n        context.rotate(rotation);\n        context.translate(-offsetX, -offsetY);\n    }\n}\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(context, transform, opacity, labelOrImage, originX, originY, w, h, x, y, scale) {\n    context.save();\n    if (opacity !== 1) {\n        context.globalAlpha *= opacity;\n    }\n    if (transform) {\n        context.setTransform.apply(context, transform);\n    }\n    if ( /** @type {*} */(labelOrImage).contextInstructions) {\n        // label\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n    }\n    else if (scale[0] < 0 || scale[1] < 0) {\n        // flipped image\n        context.translate(x, y);\n        context.scale(scale[0], scale[1]);\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, 0, 0, w, h);\n    }\n    else {\n        // if image not flipped translate and scale can be avoided\n        context.drawImage(\n        /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (labelOrImage), originX, originY, w, h, x, y, w * scale[0], h * scale[1]);\n    }\n    context.restore();\n}\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n    var contextInstructions = label.contextInstructions;\n    for (var i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n        if (Array.isArray(contextInstructions[i + 1])) {\n            context[contextInstructions[i]].apply(context, contextInstructions[i + 1]);\n        }\n        else {\n            context[contextInstructions[i]] = contextInstructions[i + 1];\n        }\n    }\n}\n/**\n * @type {HTMLCanvasElement}\n * @private\n */\nvar createTransformStringCanvas = null;\n/**\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @return {string} CSS transform.\n */\nexport function createTransformString(transform) {\n    if (WORKER_OFFSCREEN_CANVAS) {\n        return toString(transform);\n    }\n    else {\n        if (!createTransformStringCanvas) {\n            createTransformStringCanvas = createCanvasContext2D(1, 1).canvas;\n        }\n        createTransformStringCanvas.style.transform = toString(transform);\n        return createTransformStringCanvas.style.transform;\n    }\n}\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/layer/Property\n */\n/**\n * @enum {string}\n */\nexport default {\n    OPACITY: 'opacity',\n    VISIBLE: 'visible',\n    EXTENT: 'extent',\n    Z_INDEX: 'zIndex',\n    MAX_RESOLUTION: 'maxResolution',\n    MIN_RESOLUTION: 'minResolution',\n    MAX_ZOOM: 'maxZoom',\n    MIN_ZOOM: 'minZoom',\n    SOURCE: 'source',\n};\n//# sourceMappingURL=Property.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport { assign, isEmpty } from './obj.js';\nimport { getUid } from './util.js';\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nvar ObjectEvent = /** @class */ (function (_super) {\n    __extends(ObjectEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {string} key The property name.\n     * @param {*} oldValue The old value for `key`.\n     */\n    function ObjectEvent(type, key, oldValue) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The name of the property whose value is changing.\n         * @type {string}\n         * @api\n         */\n        _this.key = key;\n        /**\n         * The old value. To get the new value use `e.target.get(e.key)` where\n         * `e` is the event object.\n         * @type {*}\n         * @api\n         */\n        _this.oldValue = oldValue;\n        return _this;\n    }\n    return ObjectEvent;\n}(Event));\nexport { ObjectEvent };\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /** @class */ (function (_super) {\n    __extends(BaseObject, _super);\n    /**\n     * @param {Object<string, *>=} opt_values An object with key-value pairs.\n     */\n    function BaseObject(opt_values) {\n        var _this = _super.call(this) || this;\n        // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n        // the same as the order in which they were created.  This also helps to\n        // ensure that object properties are always added in the same order, which\n        // helps many JavaScript engines generate faster code.\n        getUid(_this);\n        /**\n         * @private\n         * @type {Object<string, *>}\n         */\n        _this.values_ = null;\n        if (opt_values !== undefined) {\n            _this.setProperties(opt_values);\n        }\n        return _this;\n    }\n    /**\n     * Gets a value.\n     * @param {string} key Key name.\n     * @return {*} Value.\n     * @api\n     */\n    BaseObject.prototype.get = function (key) {\n        var value;\n        if (this.values_ && this.values_.hasOwnProperty(key)) {\n            value = this.values_[key];\n        }\n        return value;\n    };\n    /**\n     * Get a list of object property names.\n     * @return {Array<string>} List of property names.\n     * @api\n     */\n    BaseObject.prototype.getKeys = function () {\n        return (this.values_ && Object.keys(this.values_)) || [];\n    };\n    /**\n     * Get an object of all property names and values.\n     * @return {Object<string, *>} Object.\n     * @api\n     */\n    BaseObject.prototype.getProperties = function () {\n        return (this.values_ && assign({}, this.values_)) || {};\n    };\n    /**\n     * @return {boolean} The object has properties.\n     */\n    BaseObject.prototype.hasProperties = function () {\n        return !!this.values_;\n    };\n    /**\n     * @param {string} key Key name.\n     * @param {*} oldValue Old value.\n     */\n    BaseObject.prototype.notify = function (key, oldValue) {\n        var eventType;\n        eventType = getChangeEventType(key);\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n        eventType = ObjectEventType.PROPERTYCHANGE;\n        this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    };\n    /**\n     * Sets a value.\n     * @param {string} key Key name.\n     * @param {*} value Value.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.set = function (key, value, opt_silent) {\n        var values = this.values_ || (this.values_ = {});\n        if (opt_silent) {\n            values[key] = value;\n        }\n        else {\n            var oldValue = values[key];\n            values[key] = value;\n            if (oldValue !== value) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    /**\n     * Sets a collection of key-value pairs.  Note that this changes any existing\n     * properties and adds new ones (it does not remove any existing properties).\n     * @param {Object<string, *>} values Values.\n     * @param {boolean=} opt_silent Update without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.setProperties = function (values, opt_silent) {\n        for (var key in values) {\n            this.set(key, values[key], opt_silent);\n        }\n    };\n    /**\n     * Unsets a property.\n     * @param {string} key Key name.\n     * @param {boolean=} opt_silent Unset without triggering an event.\n     * @api\n     */\n    BaseObject.prototype.unset = function (key, opt_silent) {\n        if (this.values_ && key in this.values_) {\n            var oldValue = this.values_[key];\n            delete this.values_[key];\n            if (isEmpty(this.values_)) {\n                this.values_ = null;\n            }\n            if (!opt_silent) {\n                this.notify(key, oldValue);\n            }\n        }\n    };\n    return BaseObject;\n}(Observable));\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n    return changeEventTypeCache.hasOwnProperty(key)\n        ? changeEventTypeCache[key]\n        : (changeEventTypeCache[key] = 'change:' + key);\n}\nexport default BaseObject;\n//# sourceMappingURL=Object.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LENGTH: 'length',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nvar CollectionEvent = /** @class */ (function (_super) {\n    __extends(CollectionEvent, _super);\n    /**\n     * @param {import(\"./CollectionEventType.js\").default} type Type.\n     * @param {*=} opt_element Element.\n     * @param {number=} opt_index The index of the added or removed element.\n     */\n    function CollectionEvent(type, opt_element, opt_index) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The element that is added to or removed from the collection.\n         * @type {*}\n         * @api\n         */\n        _this.element = opt_element;\n        /**\n         * The index of the added or removed element.\n         * @type {number}\n         * @api\n         */\n        _this.index = opt_index;\n        return _this;\n    }\n    return CollectionEvent;\n}(Event));\nexport { CollectionEvent };\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /** @class */ (function (_super) {\n    __extends(Collection, _super);\n    /**\n     * @param {Array<T>=} opt_array Array.\n     * @param {Options=} opt_options Collection options.\n     */\n    function Collection(opt_array, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.unique_ = !!options.unique;\n        /**\n         * @private\n         * @type {!Array<T>}\n         */\n        _this.array_ = opt_array ? opt_array : [];\n        if (_this.unique_) {\n            for (var i = 0, ii = _this.array_.length; i < ii; ++i) {\n                _this.assertUnique_(_this.array_[i], i);\n            }\n        }\n        _this.updateLength_();\n        return _this;\n    }\n    /**\n     * Remove all elements from the collection.\n     * @api\n     */\n    Collection.prototype.clear = function () {\n        while (this.getLength() > 0) {\n            this.pop();\n        }\n    };\n    /**\n     * Add elements to the collection.  This pushes each item in the provided array\n     * to the end of the collection.\n     * @param {!Array<T>} arr Array.\n     * @return {Collection<T>} This collection.\n     * @api\n     */\n    Collection.prototype.extend = function (arr) {\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            this.push(arr[i]);\n        }\n        return this;\n    };\n    /**\n     * Iterate over each element, calling the provided callback.\n     * @param {function(T, number, Array<T>): *} f The function to call\n     *     for every element. This function takes 3 arguments (the element, the\n     *     index and the array). The return value is ignored.\n     * @api\n     */\n    Collection.prototype.forEach = function (f) {\n        var array = this.array_;\n        for (var i = 0, ii = array.length; i < ii; ++i) {\n            f(array[i], i, array);\n        }\n    };\n    /**\n     * Get a reference to the underlying Array object. Warning: if the array\n     * is mutated, no events will be dispatched by the collection, and the\n     * collection's \"length\" property won't be in sync with the actual length\n     * of the array.\n     * @return {!Array<T>} Array.\n     * @api\n     */\n    Collection.prototype.getArray = function () {\n        return this.array_;\n    };\n    /**\n     * Get the element at the provided index.\n     * @param {number} index Index.\n     * @return {T} Element.\n     * @api\n     */\n    Collection.prototype.item = function (index) {\n        return this.array_[index];\n    };\n    /**\n     * Get the length of this collection.\n     * @return {number} The length of the array.\n     * @observable\n     * @api\n     */\n    Collection.prototype.getLength = function () {\n        return this.get(Property.LENGTH);\n    };\n    /**\n     * Insert an element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.insertAt = function (index, elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        this.array_.splice(index, 0, elem);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n    };\n    /**\n     * Remove the last element of the collection and return it.\n     * Return `undefined` if the collection is empty.\n     * @return {T|undefined} Element.\n     * @api\n     */\n    Collection.prototype.pop = function () {\n        return this.removeAt(this.getLength() - 1);\n    };\n    /**\n     * Insert the provided element at the end of the collection.\n     * @param {T} elem Element.\n     * @return {number} New length of the collection.\n     * @api\n     */\n    Collection.prototype.push = function (elem) {\n        if (this.unique_) {\n            this.assertUnique_(elem);\n        }\n        var n = this.getLength();\n        this.insertAt(n, elem);\n        return this.getLength();\n    };\n    /**\n     * Remove the first occurrence of an element from the collection.\n     * @param {T} elem Element.\n     * @return {T|undefined} The removed element or undefined if none found.\n     * @api\n     */\n    Collection.prototype.remove = function (elem) {\n        var arr = this.array_;\n        for (var i = 0, ii = arr.length; i < ii; ++i) {\n            if (arr[i] === elem) {\n                return this.removeAt(i);\n            }\n        }\n        return undefined;\n    };\n    /**\n     * Remove the element at the provided index and return it.\n     * Return `undefined` if the collection does not contain this index.\n     * @param {number} index Index.\n     * @return {T|undefined} Value.\n     * @api\n     */\n    Collection.prototype.removeAt = function (index) {\n        var prev = this.array_[index];\n        this.array_.splice(index, 1);\n        this.updateLength_();\n        this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n        return prev;\n    };\n    /**\n     * Set the element at the provided index.\n     * @param {number} index Index.\n     * @param {T} elem Element.\n     * @api\n     */\n    Collection.prototype.setAt = function (index, elem) {\n        var n = this.getLength();\n        if (index < n) {\n            if (this.unique_) {\n                this.assertUnique_(elem, index);\n            }\n            var prev = this.array_[index];\n            this.array_[index] = elem;\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n            this.dispatchEvent(new CollectionEvent(CollectionEventType.ADD, elem, index));\n        }\n        else {\n            for (var j = n; j < index; ++j) {\n                this.insertAt(j, undefined);\n            }\n            this.insertAt(index, elem);\n        }\n    };\n    /**\n     * @private\n     */\n    Collection.prototype.updateLength_ = function () {\n        this.set(Property.LENGTH, this.array_.length);\n    };\n    /**\n     * @private\n     * @param {T} elem Element.\n     * @param {number=} opt_except Optional index to ignore.\n     */\n    Collection.prototype.assertUnique_ = function (elem, opt_except) {\n        for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n            if (this.array_[i] === elem && i !== opt_except) {\n                throw new AssertionError(58);\n            }\n        }\n    };\n    return Collection;\n}(BaseObject));\nexport default Collection;\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/colorlike\n */\nimport { toString } from './color.js';\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n    if (Array.isArray(color)) {\n        return toString(color);\n    }\n    else {\n        return color;\n    }\n}\n//# sourceMappingURL=colorlike.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { containsXY, createOrUpdateFromCoordinate } from '../extent.js';\nimport { deflateCoordinate } from './flat/deflate.js';\nimport { squaredDistance as squaredDx } from '../math.js';\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /** @class */ (function (_super) {\n    __extends(Point, _super);\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function Point(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        _this.setCoordinates(coordinates, opt_layout);\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Point} Clone.\n     * @api\n     */\n    Point.prototype.clone = function () {\n        var point = new Point(this.flatCoordinates.slice(), this.layout);\n        return point;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Point.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        var flatCoordinates = this.flatCoordinates;\n        var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n        if (squaredDistance < minSquaredDistance) {\n            var stride = this.stride;\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    };\n    /**\n     * Return the coordinate of the point.\n     * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n     * @api\n     */\n    Point.prototype.getCoordinates = function () {\n        return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n    };\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @protected\n     * @return {import(\"../extent.js\").Extent} extent Extent.\n     */\n    Point.prototype.computeExtent = function (extent) {\n        return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Point.prototype.getType = function () {\n        return GeometryType.POINT;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Point.prototype.intersectsExtent = function (extent) {\n        return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n    };\n    /**\n     * @param {!Array<*>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Point.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 0);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinate(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return Point;\n}(SimpleGeometry));\nexport default Point;\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/GeometryType\n */\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n    POINT: 'Point',\n    LINE_STRING: 'LineString',\n    LINEAR_RING: 'LinearRing',\n    POLYGON: 'Polygon',\n    MULTI_POINT: 'MultiPoint',\n    MULTI_LINE_STRING: 'MultiLineString',\n    MULTI_POLYGON: 'MultiPolygon',\n    GEOMETRY_COLLECTION: 'GeometryCollection',\n    CIRCLE: 'Circle',\n};\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/render/VectorContext\n */\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = /** @class */ (function () {\n    function VectorContext() {\n    }\n    /**\n     * Render a geometry with a custom renderer.\n     *\n     * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {Function} renderer Renderer.\n     */\n    VectorContext.prototype.drawCustom = function (geometry, feature, renderer) { };\n    /**\n     * Render a geometry.\n     *\n     * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n     */\n    VectorContext.prototype.drawGeometry = function (geometry) { };\n    /**\n     * Set the rendering style.\n     *\n     * @param {import(\"../style/Style.js\").default} style The rendering style.\n     */\n    VectorContext.prototype.setStyle = function (style) { };\n    /**\n     * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawCircle = function (circleGeometry, feature) { };\n    /**\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     * @param {import(\"../style/Style.js\").default} style Style.\n     */\n    VectorContext.prototype.drawFeature = function (feature, style) { };\n    /**\n     * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n     * @param {import(\"../Feature.js\").default} feature Feature.\n     */\n    VectorContext.prototype.drawGeometryCollection = function (geometryCollectionGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawLineString = function (lineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiLineString = function (multiLineStringGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPoint = function (multiPointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawMultiPolygon = function (multiPolygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPoint = function (pointGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawPolygon = function (polygonGeometry, feature) { };\n    /**\n     * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     */\n    VectorContext.prototype.drawText = function (geometry, feature) { };\n    /**\n     * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n     * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n     */\n    VectorContext.prototype.setFillStrokeStyle = function (fillStyle, strokeStyle) { };\n    /**\n     * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n     * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n     */\n    VectorContext.prototype.setImageStyle = function (imageStyle, opt_declutterGroup) { };\n    /**\n     * @param {import(\"../style/Text.js\").default} textStyle Text style.\n     * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n     */\n    VectorContext.prototype.setTextStyle = function (textStyle, opt_declutterGroups) { };\n    return VectorContext;\n}());\nexport default VectorContext;\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/proj/Units\n */\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n    DEGREES: 'degrees',\n    FEET: 'ft',\n    METERS: 'm',\n    PIXELS: 'pixels',\n    TILE_PIXELS: 'tile-pixels',\n    USFEET: 'us-ft',\n};\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\nexport default Units;\n//# sourceMappingURL=Units.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport { abstract } from '../util.js';\nimport { get as getProjection } from '../proj.js';\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /** @class */ (function (_super) {\n    __extends(Source, _super);\n    /**\n     * @param {Options} options Source options.\n     */\n    function Source(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../proj/Projection.js\").default}\n         */\n        _this.projection_ = getProjection(options.projection);\n        /**\n         * @private\n         * @type {?Attribution}\n         */\n        _this.attributions_ = adaptAttributions(options.attributions);\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.attributionsCollapsible_ =\n            options.attributionsCollapsible !== undefined\n                ? options.attributionsCollapsible\n                : true;\n        /**\n         * This source is currently loading data. Sources that defer loading to the\n         * map's tile queue never set this to `true`.\n         * @type {boolean}\n         */\n        _this.loading = false;\n        /**\n         * @private\n         * @type {import(\"./State.js\").default}\n         */\n        _this.state_ =\n            options.state !== undefined ? options.state : SourceState.READY;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n        return _this;\n    }\n    /**\n     * Get the attribution function for the source.\n     * @return {?Attribution} Attribution function.\n     */\n    Source.prototype.getAttributions = function () {\n        return this.attributions_;\n    };\n    /**\n     * @return {boolean} Attributions are collapsible.\n     */\n    Source.prototype.getAttributionsCollapsible = function () {\n        return this.attributionsCollapsible_;\n    };\n    /**\n     * Get the projection of the source.\n     * @return {import(\"../proj/Projection.js\").default} Projection.\n     * @api\n     */\n    Source.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * @abstract\n     * @return {Array<number>|undefined} Resolutions.\n     */\n    Source.prototype.getResolutions = function () {\n        return abstract();\n    };\n    /**\n     * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n     * @return {import(\"./State.js\").default} State.\n     * @api\n     */\n    Source.prototype.getState = function () {\n        return this.state_;\n    };\n    /**\n     * @return {boolean|undefined} Wrap X.\n     */\n    Source.prototype.getWrapX = function () {\n        return this.wrapX_;\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    Source.prototype.getContextOptions = function () {\n        return undefined;\n    };\n    /**\n     * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n     * @api\n     */\n    Source.prototype.refresh = function () {\n        this.changed();\n    };\n    /**\n     * Set the attributions of the source.\n     * @param {AttributionLike|undefined} attributions Attributions.\n     *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n     *     or `undefined`.\n     * @api\n     */\n    Source.prototype.setAttributions = function (attributions) {\n        this.attributions_ = adaptAttributions(attributions);\n        this.changed();\n    };\n    /**\n     * Set the state of the source.\n     * @param {import(\"./State.js\").default} state State.\n     */\n    Source.prototype.setState = function (state) {\n        this.state_ = state;\n        this.changed();\n    };\n    return Source;\n}(BaseObject));\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n    if (!attributionLike) {\n        return null;\n    }\n    if (Array.isArray(attributionLike)) {\n        return function (frameState) {\n            return attributionLike;\n        };\n    }\n    if (typeof attributionLike === 'function') {\n        return attributionLike;\n    }\n    return function (frameState) {\n        return [attributionLike];\n    };\n}\nexport default Source;\n//# sourceMappingURL=Source.js.map"],"sourceRoot":""}