{"version":3,"sources":["webpack:///./node_modules/ol/tilegrid/common.js","webpack:///./node_modules/ol/tilegrid.js","webpack:///./node_modules/ol/tilecoord.js","webpack:///./src/components/viMap/images/standardMap.svg","webpack:///./node_modules/ol/interaction/DoubleClickZoom.js","webpack:///./node_modules/ol/events/condition.js","webpack:///./node_modules/ol/interaction/DragPan.js","webpack:///./node_modules/ol/interaction/DragRotate.js","webpack:///./node_modules/ol/render/Box.js","webpack:///./node_modules/ol/interaction/DragBox.js","webpack:///./node_modules/ol/interaction/DragZoom.js","webpack:///./node_modules/ol/events/KeyCode.js","webpack:///./node_modules/ol/interaction/KeyboardPan.js","webpack:///./node_modules/ol/interaction/KeyboardZoom.js","webpack:///./node_modules/ol/Kinetic.js","webpack:///./node_modules/ol/interaction/MouseWheelZoom.js","webpack:///./node_modules/ol/interaction/PinchRotate.js","webpack:///./node_modules/ol/interaction/PinchZoom.js","webpack:///./node_modules/ol/interaction.js","webpack:///./src/components/viMap/index.vue?d743","webpack:///./src/components/viMap/images/satelliteMap.svg","webpack:///./node_modules/ol/layer/TileProperty.js","webpack:///./node_modules/ol/layer/BaseTile.js","webpack:///./node_modules/ol/renderer/canvas/TileLayer.js","webpack:///./node_modules/ol/layer/Tile.js","webpack:///./node_modules/ol/geom/flat/closest.js","webpack:///./node_modules/ol/geom/flat/area.js","webpack:///./node_modules/ol/geom/LinearRing.js","webpack:///./node_modules/ol/geom/flat/contains.js","webpack:///./node_modules/ol/geom/flat/interiorpoint.js","webpack:///./node_modules/ol/geom/flat/segments.js","webpack:///./node_modules/ol/geom/flat/intersectsextent.js","webpack:///./node_modules/ol/geom/flat/reverse.js","webpack:///./node_modules/ol/geom/flat/orient.js","webpack:///./node_modules/ol/geom/Polygon.js","webpack:///./node_modules/ol/render.js","webpack:///./node_modules/ol/renderer/Map.js","webpack:///./node_modules/ol/renderer/Composite.js","webpack:///./node_modules/ol/layer/Group.js","webpack:///./node_modules/ol/MapEvent.js","webpack:///./node_modules/ol/MapBrowserEvent.js","webpack:///./node_modules/ol/pointer/EventType.js","webpack:///./node_modules/ol/MapBrowserEventHandler.js","webpack:///./node_modules/ol/MapProperty.js","webpack:///./node_modules/ol/structs/PriorityQueue.js","webpack:///./node_modules/ol/TileQueue.js","webpack:///./node_modules/ol/PluggableMap.js","webpack:///./node_modules/ol/control/Control.js","webpack:///./node_modules/ol/control/Attribution.js","webpack:///./node_modules/ol/control/Rotate.js","webpack:///./node_modules/ol/control/Zoom.js","webpack:///./node_modules/ol/control.js","webpack:///./node_modules/ol/Map.js","webpack:///./node_modules/ol/tilegrid/TileGrid.js","webpack:///./node_modules/ol/rotationconstraint.js","webpack:///./node_modules/ol/ViewProperty.js","webpack:///./node_modules/ol/centerconstraint.js","webpack:///./node_modules/ol/resolutionconstraint.js","webpack:///./node_modules/ol/View.js","webpack:///./node_modules/ol/TileState.js","webpack:///./src/components/viMap/index.vue","webpack:///./node_modules/ol/Tile.js","webpack:///./node_modules/ol/ImageTile.js","webpack:///./node_modules/ol/reproj.js","webpack:///./node_modules/ol/reproj/common.js","webpack:///./node_modules/ol/reproj/Triangulation.js","webpack:///./node_modules/ol/source/common.js","webpack:///./node_modules/ol/reproj/Tile.js","webpack:///./node_modules/ol/structs/LRUCache.js","webpack:///./node_modules/ol/TileCache.js","webpack:///./node_modules/ol/source/TileEventType.js","webpack:///./node_modules/ol/source/Tile.js","webpack:///./node_modules/ol/tileurlfunction.js","webpack:///./node_modules/ol/source/UrlTile.js","webpack:///./node_modules/ol/source/TileImage.js","webpack:///./node_modules/ol/source/XYZ.js","webpack:///./src/components/viMap/index.vue?f0fa","webpack:///./node_modules/ol/TileRange.js"],"names":["DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","getForProjection","projection","tileGrid","getDefaultTileGrid","createForProjection","setDefaultTileGrid","wrapX","tileCoord","z","center","getTileCoordCenter","projectionExtent","extentFromProjection","worldWidth","worldsAway","Math","ceil","getTileCoordForCoordAndZ","createForExtent","extent","opt_maxZoom","opt_tileSize","opt_corner","corner","undefined","TOP_LEFT","resolutions","resolutionsFromExtent","origin","tileSize","createXYZ","opt_options","xyzOptions","getExtent","gridOptions","minZoom","maxZoom","maxResolution","opt_maxResolution","height","width","max","length","Array","pow","half","DEGREES","getMetersPerUnit","createOrUpdate","x","y","opt_tileCoord","getKeyZXY","getKey","fromKey","key","split","map","Number","hash","withinExtentAndZ","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","containsXY","module","exports","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","prototype","create","_super","DoubleClickZoom","_this","call","options","delta_","delta","duration_","duration","handleEvent","mapBrowserEvent","stopEvent","type","MapBrowserEventType","DBLCLICK","browserEvent","anchor","coordinate","shiftKey","view","getView","preventDefault","Interaction","var_args","conditions","arguments","event","pass","i","ii","altShiftKeysOnly","originalEvent","altKey","metaKey","ctrlKey","target","getTargetElement","contains","document","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","button","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","pointerType","primaryAction","isPrimary","DragPan","stopDown","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","handleDragEvent","getMap","beginInteraction","targetPointers","centroid","update","getResolution","getRotation","adjustCenterInternal","begin","handleUpEvent","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","dest","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","easing","endInteraction","handleDownEvent","getAnimating","cancelAnimations","Pointer","DragRotate","lastAngle_","getConstraints","rotation","size","getSize","offset","pixel","theta","atan2","adjustRotationInternal","RenderBox","className","geometry_","element_","createElement","style","position","pointerEvents","map_","startPixel_","endPixel_","disposeInternal","setMap","render_","startPixel","endPixel","px","left","min","top","abs","getOverlayContainer","removeChild","appendChild","setPixels","createOrUpdateGeometry","pixels","coordinates","slice","setCoordinates","Polygon","getGeometry","Disposable","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","Event","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","dispatchEvent","DragZoom","out_","out","mapExtent","calculateExtentInternal","boxPixelExtent","factor","getResolutionForExtentInternal","resolution","getConstrainedResolution","LEFT","UP","RIGHT","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","EventType","KEYDOWN","keyEvent","keyCode","KeyCode","mapUnitsDelta","deltaX","deltaY","KeyboardZoom","KEYPRESS","charCode","charCodeAt","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","push","Date","now","lastIndex","firstIndex","dx","dy","sqrt","Mode","TRACKPAD","WHEEL","MouseWheelZoom","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","getConstrainResolution","clearTimeout","setTimeout","bind","adjustZoom","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","clientY","clientX","viewportPosition","getViewport","getBoundingClientRect","render","handlingDownUpSequence","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","defaults","interactions","Collection","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","baseOptions","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","get","TileProperty","set","getUseInterimTilesOnError","Layer","BaseTile","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","TileRange","isDrawableTile","tile","getLayer","tileState","getState","TileState","LOADED","EMPTY","ERROR","getTile","frameState","pixelRatio","viewState","tileSource","getSource","setState","getInterimTile","loadedTileCallback","tiles","zoom","prepareFrame","renderFrame","layerState","layerStatesArray","layerIndex","viewResolution","viewCenter","sourceRevision","getRevision","getTileGridForProjection","getZForResolution","zDirection","tileResolution","layerExtent","tilePixelRatio","getTilePixelRatio","round","canvasExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","minX","maxX","minY","maxY","uid","toString","inTransition","indexOf","getAlpha","time","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","useContainer","opacity","context","canvas","inversePixelTransform","tempTransform","containerReused","clearRect","clipUnrotated","getContextOptions","preRender","clips","clipZs","currentClip","zs","keys","sort","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentResolution","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","w","h","transition","save","i_1","clip","beginPath","moveTo","lineTo","drawTileImage","restore","updateUsedTiles","usedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","transform","container","gutter","image","getTileImage","tileAlpha","alpha","alphaChanged","globalAlpha","drawImage","animate","endTransition","getImage","canExpireCache","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","opt_tileCallback","wantedTiles","tileQueue","tileCount","IDLE","isKeyQueued","enqueue","useTile","updateCacheSize","TileLayer","createRenderer","assignClosest","flatCoordinates","offset1","offset2","stride","closestPoint","x1","y1","t","maxSquaredDelta","x2","y2","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","isRing","minSquaredDistance","opt_tmpPoint","squaredDistance","tmpPoint","NaN","index","assignClosestArrayPoint","twiceArea","area","LinearRing","opt_layout","maxDeltaRevision_","isArray","setFlatCoordinates","clone","layout","closestPointXY","getArea","getCoordinates","inflate","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","GeometryLayout","XY","getType","GeometryType","LINEAR_RING","intersectsExtent","setLayout","deflate","changed","SimpleGeometry","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","opt_dest","intersections","r","rr","pointX","maxSegmentLength","Infinity","segmentLength","isNaN","forEach","callback","ret","point1","point2","intersectsLineString","coordinatesExtent","intersectsLinearRing","intersectsLinearRingArray","tmp","linearRingIsClockwise","firstVertexRepeated","iMinVertex","findCornerVertex","iPreviousVertex","iNextVertex","aX","aY","bX","bY","cX","cY","determinant","minXAtMinY","linearRingsAreOriented","opt_right","right","isClockwise","orientLinearRings","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getFlatCoordinates","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","Point","XYM","getLinearRingCount","getLinearRing","getLinearRings","linearRings","simplifiedEnds","POLYGON","fromExtent","renderDeclutterItems","declutterTree","clear","items","declutterItems","item","zIndexItems","renderDeclutter","MapRenderer","declutterTree_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","managed","feature","layer","translatedCoordinate","offsets","canWrapX","declutteredFeatures","layerStates","numLayers","all","entry","value","tmpCoord","j","hasRenderer","layerRenderer","getRenderer","source","getWrapX","callback_1","forEachLayerAtPixel","hasFeatureAtCoordinate","hasFeature","scheduleExpireIconCache","expireIconCache","expire","CompositeMapRenderer","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","zIndex","insertBefore","firstChild","children_","renderedVisible_","hasListener","event_1","parentNode","PRECOMPOSE","a","previousElement","sourceState","READY","UNDEFINED","element","POSTCOMPOSE","display","data","getDataAtPixel","Composite","Property","LAYERS","LayerGroup","layers","layersListenerKeys_","listenerKeys_","addEventListener","handleLayersChanged_","unique","setLayers","handleLayerChange_","getLayers","id","CollectionEventType","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","layersArray","getArray","CHANGE","collectionEvent","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","pos","ownLayerState","getLayerState","visible","minResolution","getSourceState","Base","MapEvent","opt_frameState","MapBrowserEvent","opt_dragging","pixel_","coordinate_","dragging","defineProperty","getEventPixel","enumerable","configurable","getCoordinateFromPixel","stopPropagation","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","passive","emulateClick_","newEvent","CLICK","SINGLECLICK","updateActivePointers_","pointerId","handlePointerUp_","propagationStopped","isMouseActionButton_","handlePointerMove_","getRootNode","isMoving_","POINTERDRAG","defaultPrevented","removeEventListener","LAYERGROUP","SIZE","TARGET","VIEW","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","pop","siftUp_","elementKey","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","n","TileQueue","tilePriorityFunction","tileChangeCallback","apply","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","state","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","getTilePriority","tileCenter","log","PluggableMap","optionsInternal","createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","controls","overlays_","overlays","overlayIdIndex_","renderer_","handleResize_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","setProperties","values","control","interaction","addOverlayInternal_","overlay","getId","Error","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","setTarget","forEachFeatureAtPixel","getFeaturesAtPixel","features","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","eventPosition","changedTouches","getTarget","getElementById","getProjection","getOverlayById","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getOverlayContainerStopEvent","opt_type","handleMapBrowserEvent","eventType","rootNode","elementFromPoint","documentElement","interactionsArray","getActive","cont","handlePostRender","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","RENDERCOMPLETE","resolveConstraints","targetElement","CONTEXTMENU","RESIZE","dispose","updateSize","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","layerGroup","isRendered","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","remove","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","moveStart","MapEventType","MOVESTART","idle","MOVEEND","POSTRENDER","setLayerGroup","setSize","setView","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","parseInt","setViewportSize","View","Control","target_","listenerKeys","mapEvent","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","jj","updateElement_","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","add","callResetNorth_","resetNorth","autoHide_","autoHide","rotation_","resetNorth_","PI","setRotation","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","setZoom","zoomControl","zoomOptions","rotateControl","rotate","rotateOptions","attributionControl","attribution","attributionOptions","Map","tmpTileCoord","TileGrid","zoomFactor","resolutions_","origins","zoomFactor_","origin_","origins_","tileSizes_","tileSizes","tileSize_","extent_","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","opt_extent","tileCoordExtent","floor","getOrigin","getResolutions","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","scale","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","opt_direction","fullTileRanges","disable","none","createSnapToN","opt_isMoving","createSnapToZero","opt_tolerance","tolerance","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","viewWidth","viewHeight","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createSnapToResolutions","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","capped","createSnapToPower","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","cancelAnchor_","applyOptions_","properties","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","minZoom_","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setCenterInternal","setResolution","options_","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","start","series","animation","complete","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","more","seriesComplete","elapsed","fraction","progress","x0","y0","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","opt_rotation","opt_size","getCenter","ViewProperty","opt_hints","calculateExtent","getMaxResolution","getMinResolution","getZoomForResolution","setMaxZoom","setMinZoom","setConstrainResolution","enabled","getResolutionForExtent","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","logPower","nearest","baseLevel","fit","geometryOrExtent","geometry","CIRCLE","userProjection","fitInternal","padding","coords","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","getStride","rotX","rotY","centerRotX","centerRotY","centerX","centerY","centerOn","centerOnInternal","adjustCenter","deltaCoordinates","setCenter","adjustResolution","opt_anchor","isMoving","adjustRotation","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","endInteractionInternal","opt_targetResolution","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","Units","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","LOADING","class","_createElementVNode","src","_imports_0","alt","_hoisted_4","_hoisted_5","_imports_1","_hoisted_7","_hoisted_8","_createElementBlock","_hoisted_1","ref","$data","_hoisted_3","onClick","_cache","$event","$options","changeMap","_normalizeClass","active","activeIndex","_renderSlot","_ctx","$slots","Tile","interimTile","transition_","transitionStarts_","release","refreshInterimChain","prev","getTileCoord","ImageTile","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","handleImageError_","unlistenImage_","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","ctx","fillStyle","fillRect","brokenDiagonalRendering_","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","sourceProj","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","c","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","arr","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isFinite","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","IMAGE_SMOOTHING_DISABLED","imageSmoothingEnabled","msImageSmoothingEnabled","drawTestTriangle","u1","v1","u2","v2","closePath","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","getContext","globalCompositeOperation","getImageData","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","translate","strokeStyle","lineWidth","stroke","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","leftToLoad_1","sourceListenKey_1","e","unlistenSources_","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","f","value_","key_","newer","older","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","replace","TileCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","TileSource","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tileCache","cacheSize","tmpSize","tileOptions","getTileCacheForProjection","forEachLoadedTile","loaded","setKey","getTileGrid","thisProj","getTileCoordForTileUrlFunction","opt_projection","refresh","Source","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","getHeight","createFromTemplates","templates","len","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","url","urls","match","exec","startCharCode","stopCharCode","String","fromCharCode","stop_1","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","join","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","usedTileCache","getGutter","JSON","stringify","projKey","createTile_","urlTileCoord","tileUrl","sourceProjection","cache","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","name","webConfig","parse","sessionStorage","getItem","mapConfig","random","erd","methods","setVisible","initMap","defaultZoom","$emit","resize","mounted","elementResizeDetector","listenTo","$refs","beforeUnmount","uninstall","__exports__","containsTileRange","equals","extend","getWidth","intersects"],"mappings":"kHAAA,oEAOO,IAAIA,EAAmB,GAKnBC,EAAoB,K,oCCZ/B,gOAeO,SAASC,EAAiBC,GAC7B,IAAIC,EAAWD,EAAWE,qBAK1B,OAJKD,IACDA,EAAWE,EAAoBH,GAC/BA,EAAWI,mBAAmBH,IAE3BA,EAQJ,SAASI,EAAMJ,EAAUK,EAAWN,GACvC,IAAIO,EAAID,EAAU,GACdE,EAASP,EAASQ,mBAAmBH,GACrCI,EAAmBC,EAAqBX,GAC5C,GAAK,eAAmBU,EAAkBF,GAOtC,OAAOF,EANP,IAAIM,EAAa,eAASF,GACtBG,EAAaC,KAAKC,MAAML,EAAiB,GAAKF,EAAO,IAAMI,GAE/D,OADAJ,EAAO,IAAMI,EAAaC,EACnBZ,EAASe,yBAAyBR,EAAQD,GAelD,SAASU,EAAgBC,EAAQC,EAAaC,EAAcC,GAC/D,IAAIC,OAAwBC,IAAfF,EAA2BA,EAAa,OAAOG,SACxDC,EAAcC,EAAsBR,EAAQC,EAAaC,GAC7D,OAAO,IAAI,OAAS,CAChBF,OAAQA,EACRS,OAAQ,eAAUT,EAAQI,GAC1BG,YAAaA,EACbG,SAAUR,IAoBX,SAASS,EAAUC,GACtB,IAAIC,EAAaD,GAAe,GAC5BZ,EAASa,EAAWb,QAAU,eAAc,aAAac,YACzDC,EAAc,CACdf,OAAQA,EACRgB,QAASH,EAAWG,QACpBN,SAAUG,EAAWH,SACrBH,YAAaC,EAAsBR,EAAQa,EAAWI,QAASJ,EAAWH,SAAUG,EAAWK,gBAEnG,OAAO,IAAI,OAASH,GAYxB,SAASP,EAAsBR,EAAQC,EAAaC,EAAciB,GAU9D,IATA,IAAIF,OAA0BZ,IAAhBJ,EAA4BA,EAAc,OACpDmB,EAAS,eAAUpB,GACnBqB,EAAQ,eAASrB,GACjBU,EAAW,oBAAwBL,IAAjBH,EAA6BA,EAAe,QAC9DgB,EAAgBC,EAAoB,EAClCA,EACAvB,KAAK0B,IAAID,EAAQX,EAAS,GAAIU,EAASV,EAAS,IAClDa,EAASN,EAAU,EACnBV,EAAc,IAAIiB,MAAMD,GACnBlC,EAAI,EAAGA,EAAIkC,IAAUlC,EAC1BkB,EAAYlB,GAAK6B,EAAgBtB,KAAK6B,IAAI,EAAGpC,GAEjD,OAAOkB,EAWJ,SAAStB,EAAoBH,EAAYmB,EAAaC,EAAcC,GACvE,IAAIH,EAASP,EAAqBX,GAClC,OAAOiB,EAAgBC,EAAQC,EAAaC,EAAcC,GAQvD,SAASV,EAAqBX,GACjCA,EAAa,eAAcA,GAC3B,IAAIkB,EAASlB,EAAWgC,YACxB,IAAKd,EAAQ,CACT,IAAI0B,EAAQ,IAAM,OAAgB,OAAMC,SAAY7C,EAAW8C,mBAC/D5B,EAAS,gBAAgB0B,GAAOA,EAAMA,EAAMA,GAEhD,OAAO1B,I,oCC7HJ,SAAS6B,EAAexC,EAAGyC,EAAGC,EAAGC,GACpC,YAAsB3B,IAAlB2B,GACAA,EAAc,GAAK3C,EACnB2C,EAAc,GAAKF,EACnBE,EAAc,GAAKD,EACZC,GAGA,CAAC3C,EAAGyC,EAAGC,GASf,SAASE,EAAU5C,EAAGyC,EAAGC,GAC5B,OAAO1C,EAAI,IAAMyC,EAAI,IAAMC,EAOxB,SAASG,EAAO9C,GACnB,OAAO6C,EAAU7C,EAAU,GAAIA,EAAU,GAAIA,EAAU,IAOpD,SAAS+C,EAAQC,GACpB,OAAOA,EAAIC,MAAM,KAAKC,IAAIC,QAMvB,SAASC,EAAKpD,GACjB,OAAQA,EAAU,IAAMA,EAAU,IAAMA,EAAU,GAO/C,SAASqD,EAAiBrD,EAAWL,GACxC,IAAIM,EAAID,EAAU,GACd0C,EAAI1C,EAAU,GACd2C,EAAI3C,EAAU,GAClB,GAAIL,EAAS2D,aAAerD,GAAKA,EAAIN,EAAS4D,aAC1C,OAAO,EAEX,IACIC,EADA5C,EAASjB,EAAS+B,YAQtB,OAFI8B,EAJC5C,EAIWjB,EAAS8D,0BAA0B7C,EAAQX,GAH3CN,EAAS+D,iBAAiBzD,IAKrCuD,GAIMA,EAAUG,WAAWjB,EAAGC,GAnFvC,6M,uBCAAiB,EAAOC,QAAU,IAA0B,uC,+GCAvCC,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA4BxC,EAAiC,SAAUK,GAK3C,SAASC,EAAgBrD,GACrB,IAAIsD,EAAQF,EAAOG,KAAKP,OAASA,KAC7BQ,EAAUxD,GAA4B,GAW1C,OANAsD,EAAMG,OAASD,EAAQE,MAAQF,EAAQE,MAAQ,EAK/CJ,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAC/DN,EAsBX,OAvCAhB,EAAUe,EAAiBD,GAyB3BC,EAAgBH,UAAUW,YAAc,SAAUC,GAC9C,IAAIC,GAAY,EAChB,GAAID,EAAgBE,MAAQC,EAAA,KAAoBC,SAAU,CACtD,IAAIC,EAA0CL,EAA6B,cACvEpC,EAAMoC,EAAgBpC,IACtB0C,EAASN,EAAgBO,WACzBX,EAAQS,EAAaG,UAAYtB,KAAKS,OAAST,KAAKS,OACpDc,EAAO7C,EAAI8C,UACf,eAAYD,EAAMb,EAAOU,EAAQpB,KAAKW,WACtCG,EAAgBW,iBAChBV,GAAY,EAEhB,OAAQA,GAELV,EAxCyB,CAyClCqB,EAAA,MACa,I,gDCpDR,SAAS,EAAIC,GAChB,IAAIC,EAAaC,UAKjB,OAAO,SAAUC,GAEb,IADA,IAAIC,GAAO,EACFC,EAAI,EAAGC,EAAKL,EAAWjE,OAAQqE,EAAIC,IAAMD,EAE9C,GADAD,EAAOA,GAAQH,EAAWI,GAAGF,IACxBC,EACD,MAGR,OAAOA,GAWR,IAcIG,EAAmB,SAAUpB,GACpC,IAAIqB,EAAoErB,EAA6B,cACrG,OAAQqB,EAAcC,UAChBD,EAAcE,SAAWF,EAAcG,UACzCH,EAAcb,UAUX,EAAQ,SAAUQ,GACzB,OAAOA,EAAMS,OAAOC,mBAAmBC,SAASC,SAASC,gBAQlDC,EAAoB,SAAUd,GACrC,OAAOA,EAAMpD,IAAI8D,mBAAmBK,aAAa,aAC3C,EAAMf,IAULgB,EAAS,OAoBTC,EAAoB,SAAUjC,GACrC,IAAIqB,EAA2CrB,EAA6B,cAC5E,OAA+B,GAAxBqB,EAAca,UAAiB,QAAU,QAAOb,EAAcG,UAiD9DW,GAxCQ,OAwCS,SAAUnC,GAClC,IAAIqB,EAAoErB,EAA6B,cACrG,OAASqB,EAAcC,UACjBD,EAAcE,SAAWF,EAAcG,WACxCH,EAAcb,WAyBZ4B,EAAe,SAAUpC,GAChC,IAAIqB,EAAoErB,EAA6B,cACrG,OAASqB,EAAcC,UACjBD,EAAcE,SAAWF,EAAcG,UACzCH,EAAcb,UAUX6B,EAAoB,SAAUrC,GACrC,IAAIqB,EAAoErB,EAA6B,cACjGsC,EAAkCjB,EAAoB,OAAEiB,QAC5D,MAAmB,UAAZA,GAAmC,WAAZA,GAAoC,aAAZA,GAS/CC,EAAY,SAAUvC,GAC7B,IAAIwC,EAAmE,EAClEnB,cAGL,OAFA,oBAAwB1F,IAAjB6G,EAA4B,IAEA,SAA5BA,EAAaC,aAuCbC,EAAgB,SAAU1C,GACjC,IAAIwC,EAAmE,EAClEnB,cAEL,OADA,oBAAwB1F,IAAjB6G,EAA4B,IAC5BA,EAAaG,WAAqC,IAAxBH,EAAaN,Q,wBC1Q9C,EAAwC,WACxC,IAAIzD,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAmCxC,EAAyB,SAAUK,GAKnC,SAASsD,EAAQ1G,GACb,IAAIsD,EAAQF,EAAOG,KAAKP,KAAM,CAC1B2D,SAAU,UACR3D,KACFQ,EAAUxD,GAA4B,GAK1CsD,EAAMsD,SAAWpD,EAAQqD,QAIzBvD,EAAMwD,aAAe,KAIrBxD,EAAMyD,mBAINzD,EAAM0D,UAAW,EACjB,IAAIC,EAAYzD,EAAQyD,UAClBzD,EAAQyD,UACR,EAAIhB,EAAgBO,GAa1B,OARAlD,EAAM4D,WAAa1D,EAAQ2D,YACrB,EAAIvB,EAAmBqB,GACvBA,EAKN3D,EAAM8D,YAAa,EACZ9D,EAwGX,OAjJA,EAAUoD,EAAStD,GA+CnBsD,EAAQxD,UAAUmE,gBAAkB,SAAUvD,GACrCd,KAAKgE,WACNhE,KAAKgE,UAAW,EAChBhE,KAAKsE,SAAS9C,UAAU+C,oBAE5B,IAAIC,EAAiBxE,KAAKwE,eACtBC,EAAW,eAAqBD,GACpC,GAAIA,EAAe7G,QAAUqC,KAAK+D,oBAI9B,GAHI/D,KAAK4D,UACL5D,KAAK4D,SAASc,OAAOD,EAAS,GAAIA,EAAS,IAE3CzE,KAAK8D,aAAc,CACnB,IAAIpD,EAAQ,CACRV,KAAK8D,aAAa,GAAKW,EAAS,GAChCA,EAAS,GAAKzE,KAAK8D,aAAa,IAEhCpF,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UACf,eAAgBd,EAAOa,EAAKoD,iBAC5B,eAAiBjE,EAAOa,EAAKqD,eAC7BrD,EAAKsD,qBAAqBnE,SAGzBV,KAAK4D,UAGV5D,KAAK4D,SAASkB,QAElB9E,KAAK8D,aAAeW,EACpBzE,KAAK+D,mBAAqBS,EAAe7G,OACzCmD,EAAgBqB,cAAcV,kBAOlCiC,EAAQxD,UAAU6E,cAAgB,SAAUjE,GACxC,IAAIpC,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UACf,GAAmC,IAA/BxB,KAAKwE,eAAe7G,OAAc,CAClC,IAAKqC,KAAKoE,YAAcpE,KAAK4D,UAAY5D,KAAK4D,SAASoB,MAAO,CAC1D,IAAIC,EAAWjF,KAAK4D,SAASsB,cACzBC,EAAQnF,KAAK4D,SAASwB,WACtB1J,EAAS6F,EAAK8D,oBACdC,EAAW5G,EAAI6G,+BAA+B7J,GAC9C8J,EAAO9G,EAAI+G,+BAA+B,CAC1CH,EAAS,GAAKL,EAAWjJ,KAAK0J,IAAIP,GAClCG,EAAS,GAAKL,EAAWjJ,KAAK2J,IAAIR,KAEtC5D,EAAKqE,gBAAgB,CACjBlK,OAAQ6F,EAAKsE,qBAAqBL,GAClC5E,SAAU,IACVkF,OAAQ,SAOhB,OAJI9F,KAAKgE,WACLhE,KAAKgE,UAAW,EAChBzC,EAAKwE,mBAEF,EASP,OANI/F,KAAK4D,UAGL5D,KAAK4D,SAASkB,QAElB9E,KAAK8D,aAAe,MACb,GAQfJ,EAAQxD,UAAU8F,gBAAkB,SAAUlF,GAC1C,GAAId,KAAKwE,eAAe7G,OAAS,GAAKqC,KAAKkE,WAAWpD,GAAkB,CACpE,IAAIpC,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UAYf,OAXAxB,KAAK8D,aAAe,KAEhBvC,EAAK0E,gBACL1E,EAAK2E,mBAELlG,KAAK4D,UACL5D,KAAK4D,SAASkB,QAIlB9E,KAAKoE,WAAapE,KAAKwE,eAAe7G,OAAS,GACxC,EAGP,OAAO,GAGR+F,EAlJiB,CAmJ1ByC,EAAA,MACa,I,YCvLX,EAAwC,WACxC,IAAI5G,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAqCxC,EAA4B,SAAUK,GAKtC,SAASgG,EAAWpJ,GAChB,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GAmB1C,OAlBAsD,EAAQF,EAAOG,KAAKP,KAAM,CACtB2D,SAAU,UACR3D,KAKNM,EAAM4D,WAAa1D,EAAQyD,UAAYzD,EAAQyD,UAAY/B,EAK3D5B,EAAM+F,gBAAa5J,EAKnB6D,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAC/DN,EA0DX,OAnFA,EAAU8F,EAAYhG,GA+BtBgG,EAAWlG,UAAUmE,gBAAkB,SAAUvD,GAC7C,GAAKuC,EAAUvC,GAAf,CAGA,IAAIpC,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UACf,GAAID,EAAK+E,iBAAiBC,WAAa,OAAvC,CAGA,IAAIC,EAAO9H,EAAI+H,UACXC,EAAS5F,EAAgB6F,MACzBC,EAAQ5K,KAAK6K,MAAML,EAAK,GAAK,EAAIE,EAAO,GAAIA,EAAO,GAAKF,EAAK,GAAK,GACtE,QAAwB/J,IAApBuD,KAAKqG,WAA0B,CAC/B,IAAI3F,EAAQkG,EAAQ5G,KAAKqG,WACzB9E,EAAKuF,wBAAwBpG,GAEjCV,KAAKqG,WAAaO,KAOtBR,EAAWlG,UAAU6E,cAAgB,SAAUjE,GAC3C,IAAKuC,EAAUvC,GACX,OAAO,EAEX,IAAIpC,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UAEf,OADAD,EAAKwE,eAAe/F,KAAKW,YAClB,GAOXyF,EAAWlG,UAAU8F,gBAAkB,SAAUlF,GAC7C,IAAKuC,EAAUvC,GACX,OAAO,EAEX,GAAIiC,EAAkBjC,IAClBd,KAAKkE,WAAWpD,GAAkB,CAClC,IAAIpC,EAAMoC,EAAgBpC,IAG1B,OAFAA,EAAI8C,UAAU+C,mBACdvE,KAAKqG,gBAAa5J,GACX,EAGP,OAAO,GAGR2J,EApFoB,CAqF7BD,EAAA,MACa,I,oCCxHX,EAAwC,WACxC,IAAI5G,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAexC,EAA2B,SAAUK,GAKrC,SAAS2G,EAAUC,GACf,IAAI1G,EAAQF,EAAOG,KAAKP,OAASA,KA6BjC,OAxBAM,EAAM2G,UAAY,KAKlB3G,EAAM4G,SAAWxE,SAASyE,cAAc,OACxC7G,EAAM4G,SAASE,MAAMC,SAAW,WAChC/G,EAAM4G,SAASE,MAAME,cAAgB,OACrChH,EAAM4G,SAASF,UAAY,UAAYA,EAKvC1G,EAAMiH,KAAO,KAKbjH,EAAMkH,YAAc,KAKpBlH,EAAMmH,UAAY,KACXnH,EA4EX,OA9GA,EAAUyG,EAAW3G,GAuCrB2G,EAAU7G,UAAUwH,gBAAkB,WAClC1H,KAAK2H,OAAO,OAKhBZ,EAAU7G,UAAU0H,QAAU,WAC1B,IAAIC,EAAa7H,KAAKwH,YAClBM,EAAW9H,KAAKyH,UAChBM,EAAK,KACLX,EAAQpH,KAAKkH,SAASE,MAC1BA,EAAMY,KAAOhM,KAAKiM,IAAIJ,EAAW,GAAIC,EAAS,IAAMC,EACpDX,EAAMc,IAAMlM,KAAKiM,IAAIJ,EAAW,GAAIC,EAAS,IAAMC,EACnDX,EAAM3J,MAAQzB,KAAKmM,IAAIL,EAAS,GAAKD,EAAW,IAAME,EACtDX,EAAM5J,OAASxB,KAAKmM,IAAIL,EAAS,GAAKD,EAAW,IAAME,GAK3DhB,EAAU7G,UAAUyH,OAAS,SAAUjJ,GACnC,GAAIsB,KAAKuH,KAAM,CACXvH,KAAKuH,KAAKa,sBAAsBC,YAAYrI,KAAKkH,UACjD,IAAIE,EAAQpH,KAAKkH,SAASE,MAC1BA,EAAMY,KAAO,UACbZ,EAAMc,IAAM,UACZd,EAAM3J,MAAQ,UACd2J,EAAM5J,OAAS,UAEnBwC,KAAKuH,KAAO7I,EACRsB,KAAKuH,MACLvH,KAAKuH,KAAKa,sBAAsBE,YAAYtI,KAAKkH,WAOzDH,EAAU7G,UAAUqI,UAAY,SAAUV,EAAYC,GAClD9H,KAAKwH,YAAcK,EACnB7H,KAAKyH,UAAYK,EACjB9H,KAAKwI,yBACLxI,KAAK4H,WAKTb,EAAU7G,UAAUsI,uBAAyB,WACzC,IAAIX,EAAa7H,KAAKwH,YAClBM,EAAW9H,KAAKyH,UAChBgB,EAAS,CACTZ,EACA,CAACA,EAAW,GAAIC,EAAS,IACzBA,EACA,CAACA,EAAS,GAAID,EAAW,KAEzBa,EAAcD,EAAO/J,IAAIsB,KAAKuH,KAAK9B,+BAAgCzF,KAAKuH,MAE5EmB,EAAY,GAAKA,EAAY,GAAGC,QAC3B3I,KAAKiH,UAINjH,KAAKiH,UAAU2B,eAAe,CAACF,IAH/B1I,KAAKiH,UAAY,IAAI4B,EAAA,KAAQ,CAACH,KAStC3B,EAAU7G,UAAU4I,YAAc,WAC9B,OAAO9I,KAAKiH,WAETF,EA/GmB,CAgH5BgC,EAAA,MACa,ICnIX,EAAwC,WACxC,IAAIxJ,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA4CxCiJ,EAAmB,CAMnBC,SAAU,WAMVC,QAAS,UAMTC,OAAQ,UAORC,EAA8B,SAAUhJ,GAOxC,SAASgJ,EAAapI,EAAMK,EAAYP,GACpC,IAAIR,EAAQF,EAAOG,KAAKP,KAAMgB,IAAShB,KAcvC,OAPAM,EAAMe,WAAaA,EAMnBf,EAAMQ,gBAAkBA,EACjBR,EAEX,OAvBA,EAAU8I,EAAchJ,GAuBjBgJ,EAxBsB,CAyB/BC,EAAA,MAaE,EAAyB,SAAUjJ,GAKnC,SAASkJ,EAAQtM,GACb,IAAIsD,EAAQF,EAAOG,KAAKP,OAASA,KAC7BQ,EAAUxD,GAA4B,GA+B1C,OA1BAsD,EAAMiJ,KAAO,IAAI,EAAU/I,EAAQwG,WAAa,cAKhD1G,EAAMkJ,cAA+B/M,IAApB+D,EAAQiJ,QAAwBjJ,EAAQiJ,QAAU,GAC/DjJ,EAAQkJ,WACRpJ,EAAMoJ,SAAWlJ,EAAQkJ,UAM7BpJ,EAAMkH,YAAc,KAKpBlH,EAAM4D,WAAa1D,EAAQyD,UAAYzD,EAAQyD,UAAYlB,EAK3DzC,EAAMqJ,iBAAmBnJ,EAAQoJ,gBAC3BpJ,EAAQoJ,gBACRtJ,EAAMuJ,uBACLvJ,EAmEX,OAxGA,EAAUgJ,EAASlJ,GAgDnBkJ,EAAQpJ,UAAU2J,uBAAyB,SAAU/I,EAAiB+G,EAAYC,GAC9E,IAAIrK,EAAQqK,EAAS,GAAKD,EAAW,GACjCrK,EAASsK,EAAS,GAAKD,EAAW,GACtC,OAAOpK,EAAQA,EAAQD,EAASA,GAAUwC,KAAKwJ,UAOnDF,EAAQpJ,UAAU4I,YAAc,WAC5B,OAAO9I,KAAKuJ,KAAKT,eAMrBQ,EAAQpJ,UAAUmE,gBAAkB,SAAUvD,GAC1Cd,KAAKuJ,KAAKhB,UAAUvI,KAAKwH,YAAa1G,EAAgB6F,OACtD3G,KAAK8J,cAAc,IAAIV,EAAaJ,EAAiBE,QAASpI,EAAgBO,WAAYP,KAO9FwI,EAAQpJ,UAAU6E,cAAgB,SAAUjE,GAMxC,OALAd,KAAKuJ,KAAK5B,OAAO,MACb3H,KAAK2J,iBAAiB7I,EAAiBd,KAAKwH,YAAa1G,EAAgB6F,SACzE3G,KAAK0J,SAAS5I,GACdd,KAAK8J,cAAc,IAAIV,EAAaJ,EAAiBG,OAAQrI,EAAgBO,WAAYP,MAEtF,GAOXwI,EAAQpJ,UAAU8F,gBAAkB,SAAUlF,GAC1C,QAAId,KAAKkE,WAAWpD,KAChBd,KAAKwH,YAAc1G,EAAgB6F,MACnC3G,KAAKuJ,KAAK5B,OAAO7G,EAAgBpC,KACjCsB,KAAKuJ,KAAKhB,UAAUvI,KAAKwH,YAAaxH,KAAKwH,aAC3CxH,KAAK8J,cAAc,IAAIV,EAAaJ,EAAiBC,SAAUnI,EAAgBO,WAAYP,KACpF,IAUfwI,EAAQpJ,UAAUwJ,SAAW,SAAU5H,KAChCwH,EAzGiB,CA0G1BnD,EAAA,MACa,I,YCtNX,EAAwC,WACxC,IAAI5G,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA2CxC,EAA0B,SAAUK,GAKpC,SAAS2J,EAAS/M,GACd,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GACtCiH,EAAYzD,EAAQyD,UAAYzD,EAAQyD,UAAYf,EAgBxD,OAfA5C,EAAQF,EAAOG,KAAKP,KAAM,CACtBiE,UAAWA,EACX+C,UAAWxG,EAAQwG,WAAa,cAChCyC,QAASjJ,EAAQiJ,WACfzJ,KAKNM,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAKtEN,EAAM0J,UAAuBvN,IAAhB+D,EAAQyJ,KAAoBzJ,EAAQyJ,IAC1C3J,EA8BX,OArDA,EAAUyJ,EAAU3J,GA6BpB2J,EAAS7J,UAAUwJ,SAAW,SAAU5H,GACpC,IAAIpD,EAAMsB,KAAKsE,SACX/C,EAAqD7C,EAAI8C,UACzDgF,EAAkD9H,EAAI+H,UACtDrK,EAAS4D,KAAK8I,cAAc5L,YAChC,GAAI8C,KAAKgK,KAAM,CACX,IAAIE,EAAY3I,EAAK4I,wBAAwB3D,GACzC4D,EAAiB,eAA8B,CAC/C1L,EAAI6G,+BAA+B,eAAcnJ,IACjDsC,EAAI6G,+BAA+B,eAAYnJ,MAE/CiO,EAAS9I,EAAK+I,+BAA+BF,EAAgB5D,GACjE,eAAgB0D,EAAW,EAAIG,GAC/BjO,EAAS8N,EAEb,IAAIK,EAAahJ,EAAKiJ,yBAAyBjJ,EAAK+I,+BAA+BlO,EAAQoK,IACvF9K,EAAS6F,EAAKsE,qBAAqB,eAAUzJ,GAASmO,GAC1DhJ,EAAKqE,gBAAgB,CACjB2E,WAAYA,EACZ7O,OAAQA,EACRkF,SAAUZ,KAAKW,UACfmF,OAAQ,UAGTiE,EAtDkB,CAuD3B,GACa,I,YC5FA,GACXU,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,ICXN,EAAwC,WACxC,IAAIrL,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA6CxC,EAA6B,SAAUK,GAKvC,SAASyK,EAAY7N,GACjB,IAAIsD,EAAQF,EAAOG,KAAKP,OAASA,KAC7BQ,EAAUxD,GAAe,GA4B7B,OAtBAsD,EAAMwK,kBAAoB,SAAUhK,GAChC,OAAQmC,EAAenC,IAAoBqC,EAAkBrC,IAMjER,EAAM4D,gBACoBzH,IAAtB+D,EAAQyD,UACFzD,EAAQyD,UACR3D,EAAMwK,kBAKhBxK,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAKtEN,EAAMyK,iBACqBtO,IAAvB+D,EAAQwK,WAA2BxK,EAAQwK,WAAa,IACrD1K,EA6CX,OA/EA,EAAUuK,EAAazK,GA4CvByK,EAAY3K,UAAUW,YAAc,SAAUC,GAC1C,IAAIC,GAAY,EAChB,GAAID,EAAgBE,MAAQiK,EAAA,KAAUC,QAAS,CAC3C,IAAIC,EAAyCrK,EAA6B,cACtEsK,EAAUD,EAASC,QACvB,GAAIpL,KAAKkE,WAAWpD,KACfsK,GAAWC,EAAQT,MAChBQ,GAAWC,EAAQZ,MACnBW,GAAWC,EAAQV,OACnBS,GAAWC,EAAQX,IAAK,CAC5B,IAAIhM,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UACX8J,EAAgB/J,EAAKoD,gBAAkB3E,KAAK+K,YAC5CQ,EAAS,EAAGC,EAAS,EACrBJ,GAAWC,EAAQT,KACnBY,GAAUF,EAELF,GAAWC,EAAQZ,KACxBc,GAAUD,EAELF,GAAWC,EAAQV,MACxBY,EAASD,EAGTE,EAASF,EAEb,IAAI5K,EAAQ,CAAC6K,EAAQC,GACrB,eAAiB9K,EAAOa,EAAKqD,eAC7B,eAAIrD,EAAMb,EAAOV,KAAKW,WACtBG,EAAgBW,iBAChBV,GAAY,GAGpB,OAAQA,GAEL8J,EAhFqB,CAiF9BnJ,EAAA,MACa,IC/HX,EAAwC,WACxC,IAAInC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAyCxC,GAA8B,SAAUK,GAKxC,SAASqL,EAAazO,GAClB,IAAIsD,EAAQF,EAAOG,KAAKP,OAASA,KAC7BQ,EAAUxD,GAA4B,GAgB1C,OAXAsD,EAAM4D,WAAa1D,EAAQyD,UAAYzD,EAAQyD,UAAYd,EAK3D7C,EAAMG,OAASD,EAAQE,MAAQF,EAAQE,MAAQ,EAK/CJ,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAC/DN,EA4BX,OAlDA,EAAUmL,EAAcrL,GAgCxBqL,EAAavL,UAAUW,YAAc,SAAUC,GAC3C,IAAIC,GAAY,EAChB,GAAID,EAAgBE,MAAQiK,EAAA,KAAUC,SAClCpK,EAAgBE,MAAQiK,EAAA,KAAUS,SAAU,CAC5C,IAAIP,EAAyCrK,EAA6B,cACtE6K,EAAWR,EAASQ,SACxB,GAAI3L,KAAKkE,WAAWpD,KACf6K,GAAY,IAAIC,WAAW,IAAMD,GAAY,IAAIC,WAAW,IAAK,CAClE,IAAIlN,EAAMoC,EAAgBpC,IACtBgC,EAAQiL,GAAY,IAAIC,WAAW,GAAK5L,KAAKS,QAAUT,KAAKS,OAC5Dc,EAAO7C,EAAI8C,UACf,eAAYD,EAAMb,OAAOjE,EAAWuD,KAAKW,WACzCG,EAAgBW,iBAChBV,GAAY,GAGpB,OAAQA,GAEL0K,EAnDsB,CAoD/B/J,EAAA,MACa,MCrFXmK,GAAyB,WAOzB,SAASA,EAAQC,EAAOC,EAAaC,GAKjChM,KAAKiM,OAASH,EAKd9L,KAAKkM,aAAeH,EAKpB/L,KAAKmM,OAASH,EAKdhM,KAAKoM,QAAU,GAKfpM,KAAKqM,OAAS,EAKdrM,KAAKsM,iBAAmB,EA+D5B,OA1DAT,EAAQ3L,UAAU4E,MAAQ,WACtB9E,KAAKoM,QAAQzO,OAAS,EACtBqC,KAAKqM,OAAS,EACdrM,KAAKsM,iBAAmB,GAM5BT,EAAQ3L,UAAUwE,OAAS,SAAUxG,EAAGC,GACpC6B,KAAKoM,QAAQG,KAAKrO,EAAGC,EAAGqO,KAAKC,QAKjCZ,EAAQ3L,UAAU8E,IAAM,WACpB,GAAIhF,KAAKoM,QAAQzO,OAAS,EAGtB,OAAO,EAEX,IAAIqO,EAAQQ,KAAKC,MAAQzM,KAAKmM,OAC1BO,EAAY1M,KAAKoM,QAAQzO,OAAS,EACtC,GAAIqC,KAAKoM,QAAQM,EAAY,GAAKV,EAG9B,OAAO,EAGX,IAAIW,EAAaD,EAAY,EAC7B,MAAOC,EAAa,GAAK3M,KAAKoM,QAAQO,EAAa,GAAKX,EACpDW,GAAc,EAElB,IAAI/L,EAAWZ,KAAKoM,QAAQM,EAAY,GAAK1M,KAAKoM,QAAQO,EAAa,GAIvE,GAAI/L,EAAW,IAAO,GAClB,OAAO,EAEX,IAAIgM,EAAK5M,KAAKoM,QAAQM,GAAa1M,KAAKoM,QAAQO,GAC5CE,EAAK7M,KAAKoM,QAAQM,EAAY,GAAK1M,KAAKoM,QAAQO,EAAa,GAGjE,OAFA3M,KAAKqM,OAASrQ,KAAK6K,MAAMgG,EAAID,GAC7B5M,KAAKsM,iBAAmBtQ,KAAK8Q,KAAKF,EAAKA,EAAKC,EAAKA,GAAMjM,EAChDZ,KAAKsM,iBAAmBtM,KAAKkM,cAKxCL,EAAQ3L,UAAUgF,YAAc,WAC5B,OAAQlF,KAAKkM,aAAelM,KAAKsM,kBAAoBtM,KAAKiM,QAK9DJ,EAAQ3L,UAAUkF,SAAW,WACzB,OAAOpF,KAAKqM,QAETR,EApGiB,GAsGb,M,aC/GX,GAAwC,WACxC,IAAItM,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAwBjCgN,GAAO,CACdC,SAAU,WACVC,MAAO,SAyBP,GAAgC,SAAU7M,GAK1C,SAAS8M,EAAelQ,GACpB,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GAC1CsD,EAAQF,EAAOG,KAAKP,KACyC,IAAcA,KAK3EM,EAAM6M,YAAc,EAKpB7M,EAAM8M,WAAa,EAKnB9M,EAAM+M,eAAiC5Q,IAArB+D,EAAQ8M,SAAyB9M,EAAQ8M,SAAW,EAKtEhN,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAKtEN,EAAMiN,cAA+B9Q,IAApB+D,EAAQgN,QAAwBhN,EAAQgN,QAAU,GAKnElN,EAAMmN,gBACoBhR,IAAtB+D,EAAQkN,WAA0BlN,EAAQkN,UAK9CpN,EAAMqN,0BAC8BlR,IAAhC+D,EAAQoN,qBACFpN,EAAQoN,oBAElB,IAAI3J,EAAYzD,EAAQyD,UAAYzD,EAAQyD,UAAYnB,EA4CxD,OAvCAxC,EAAM4D,WAAa1D,EAAQ2D,YACrB,EAAIvB,EAAmBqB,GACvBA,EAKN3D,EAAMuN,YAAc,KAKpBvN,EAAMwN,gBAAarR,EAKnB6D,EAAMyN,WAKNzN,EAAM0N,WAAQvR,EAMd6D,EAAM2N,kBAAoB,IAI1B3N,EAAM4N,mBAMN5N,EAAM6N,cAAgB,IACf7N,EA+GX,OA3MA,GAAU4M,EAAgB9M,GAiG1B8M,EAAehN,UAAUkO,gBAAkB,WACvCpO,KAAKkO,wBAAqBzR,EAC1B,IAAI8E,EAAOvB,KAAKsE,SAAS9C,UACzBD,EAAKwE,oBAAetJ,EAAWuD,KAAKoN,WAAcpN,KAAKoN,WAAa,EAAI,GAAK,EAAK,EAAGpN,KAAK6N,cAQ9FX,EAAehN,UAAUW,YAAc,SAAUC,GAC7C,IAAKd,KAAKkE,WAAWpD,GACjB,OAAO,EAEX,IAAIE,EAAOF,EAAgBE,KAC3B,GAAIA,IAASiK,EAAA,KAAUgC,MACnB,OAAO,EAEXnM,EAAgBW,iBAChB,IAOIf,EAPAhC,EAAMoC,EAAgBpC,IACtB2P,EAAwCvN,EAA6B,cAgBzE,GAfId,KAAKyN,aACLzN,KAAK6N,YAAc/M,EAAgBO,YAKnCP,EAAgBE,MAAQiK,EAAA,KAAUgC,QAClCvM,EAAQ2N,EAAW7C,OACf,QAAW6C,EAAWC,YAAcC,WAAWC,kBAC/C9N,GAAS,QAET2N,EAAWC,YAAcC,WAAWE,iBACpC/N,GAAS,KAGH,IAAVA,EACA,OAAO,EAGPV,KAAKoN,WAAa1M,EAEtB,IAAI+L,EAAMD,KAAKC,WACShQ,IAApBuD,KAAK8N,aACL9N,KAAK8N,WAAarB,KAEjBzM,KAAKgO,OAASvB,EAAMzM,KAAK8N,WAAa9N,KAAKiO,qBAC5CjO,KAAKgO,MAAQhS,KAAKmM,IAAIzH,GAAS,EAAIqM,GAAKC,SAAWD,GAAKE,OAE5D,IAAI1L,EAAO7C,EAAI8C,UACf,GAAIxB,KAAKgO,QAAUjB,GAAKC,WAClBzL,EAAKmN,2BAA4B1O,KAAK2N,qBAaxC,OAZI3N,KAAKkO,mBACLS,aAAa3O,KAAKkO,qBAGd3M,EAAK0E,gBACL1E,EAAK2E,mBAET3E,EAAKgD,oBAETvE,KAAKkO,mBAAqBU,WAAW5O,KAAKoO,gBAAgBS,KAAK7O,MAAOA,KAAKuN,UAC3EhM,EAAKuN,YAAYpO,EAAQV,KAAKmO,cAAenO,KAAK6N,aAClD7N,KAAK8N,WAAarB,GACX,EAEXzM,KAAKmN,aAAezM,EACpB,IAAIqO,EAAW/S,KAAK0B,IAAIsC,KAAKuN,UAAYd,EAAMzM,KAAK8N,YAAa,GAGjE,OAFAa,aAAa3O,KAAK+N,YAClB/N,KAAK+N,WAAaa,WAAW5O,KAAKgP,iBAAiBH,KAAK7O,KAAMtB,GAAMqQ,IAC7D,GAMX7B,EAAehN,UAAU8O,iBAAmB,SAAUtQ,GAClD,IAAI6C,EAAO7C,EAAI8C,UACXD,EAAK0E,gBACL1E,EAAK2E,mBAET,IAAIxF,GAAS,gBAAMV,KAAKmN,aAAcnN,KAAKqN,UAAYrN,KAAKmO,cAAenO,KAAKqN,UAAYrN,KAAKmO,eAAiBnO,KAAKmO,eACnH5M,EAAKmN,0BAA4B1O,KAAK2N,wBAEtCjN,EAAQA,EAASA,EAAQ,EAAI,GAAK,EAAK,GAE3C,eAAYa,EAAMb,EAAOV,KAAK6N,YAAa7N,KAAKW,WAChDX,KAAKgO,WAAQvR,EACbuD,KAAKmN,YAAc,EACnBnN,KAAK6N,YAAc,KACnB7N,KAAK8N,gBAAarR,EAClBuD,KAAK+N,gBAAatR,GAQtByQ,EAAehN,UAAU+O,eAAiB,SAAUvB,GAChD1N,KAAKyN,WAAaC,EACbA,IACD1N,KAAK6N,YAAc,OAGpBX,EA5MwB,CA6MjCxL,EAAA,MACa,MCjQX,GAAwC,WACxC,IAAInC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA+BxC,GAA6B,SAAUK,GAKvC,SAAS8O,EAAYlS,GACjB,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GACtCmS,EAA+D,EAmCnE,OAlCKA,EAAexL,WAChBwL,EAAexL,SAAW,QAE9BrD,EAAQF,EAAOG,KAAKP,KAAMmP,IAAmBnP,KAK7CM,EAAM8O,QAAU,KAKhB9O,EAAM+F,gBAAa5J,EAKnB6D,EAAM+O,WAAY,EAKlB/O,EAAMgP,eAAiB,EAKvBhP,EAAMiP,gBAAmC9S,IAAtB+D,EAAQgP,UAA0BhP,EAAQgP,UAAY,GAKzElP,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAC/DN,EA6EX,OAvHA,GAAU4O,EAAa9O,GAgDvB8O,EAAYhP,UAAUmE,gBAAkB,SAAUvD,GAC9C,IAAI2O,EAAgB,EAChBC,EAAS1P,KAAKwE,eAAe,GAC7BmL,EAAS3P,KAAKwE,eAAe,GAE7BW,EAAQnJ,KAAK6K,MAAM8I,EAAOC,QAAUF,EAAOE,QAASD,EAAOE,QAAUH,EAAOG,SAChF,QAAwBpT,IAApBuD,KAAKqG,WAA0B,CAC/B,IAAI3F,EAAQyE,EAAQnF,KAAKqG,WACzBrG,KAAKsP,gBAAkB5O,GAClBV,KAAKqP,WAAarT,KAAKmM,IAAInI,KAAKsP,gBAAkBtP,KAAKuP,aACxDvP,KAAKqP,WAAY,GAErBI,EAAgB/O,EAEpBV,KAAKqG,WAAalB,EAClB,IAAIzG,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UACf,GAAID,EAAK+E,iBAAiBC,WAAa,OAAvC,CAMA,IAAIuJ,EAAmBpR,EAAIqR,cAAcC,wBACrCvL,EAAW,eAAqBzE,KAAKwE,gBACzCC,EAAS,IAAMqL,EAAiB9H,KAChCvD,EAAS,IAAMqL,EAAiB5H,IAChClI,KAAKoP,QAAU1Q,EAAI+G,+BAA+BhB,GAE9CzE,KAAKqP,YACL3Q,EAAIuR,SACJ1O,EAAKuF,uBAAuB2I,EAAezP,KAAKoP,YAQxDF,EAAYhP,UAAU6E,cAAgB,SAAUjE,GAC5C,GAAId,KAAKwE,eAAe7G,OAAS,EAAG,CAChC,IAAIe,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UAEf,OADAD,EAAKwE,eAAe/F,KAAKW,YAClB,EAGP,OAAO,GAQfuO,EAAYhP,UAAU8F,gBAAkB,SAAUlF,GAC9C,GAAId,KAAKwE,eAAe7G,QAAU,EAAG,CACjC,IAAIe,EAAMoC,EAAgBpC,IAQ1B,OAPAsB,KAAKoP,QAAU,KACfpP,KAAKqG,gBAAa5J,EAClBuD,KAAKqP,WAAY,EACjBrP,KAAKsP,eAAiB,EACjBtP,KAAKkQ,wBACNxR,EAAI8C,UAAU+C,oBAEX,EAGP,OAAO,GAGR2K,EAxHqB,CAyH9B/I,EAAA,MACa,MCzJX,GAAwC,WACxC,IAAI5G,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA4BxC,GAA2B,SAAUK,GAKrC,SAAS+P,EAAUnT,GACf,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GACtCmS,EAA+D,EAyBnE,OAxBKA,EAAexL,WAChBwL,EAAexL,SAAW,QAE9BrD,EAAQF,EAAOG,KAAKP,KAAMmP,IAAmBnP,KAK7CM,EAAM8O,QAAU,KAKhB9O,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAKtEN,EAAM8P,mBAAgB3T,EAKtB6D,EAAM+P,gBAAkB,EACjB/P,EAsEX,OAtGA,GAAU6P,EAAW/P,GAsCrB+P,EAAUjQ,UAAUmE,gBAAkB,SAAUvD,GAC5C,IAAIwP,EAAa,EACbZ,EAAS1P,KAAKwE,eAAe,GAC7BmL,EAAS3P,KAAKwE,eAAe,GAC7BoI,EAAK8C,EAAOG,QAAUF,EAAOE,QAC7BhD,EAAK6C,EAAOE,QAAUD,EAAOC,QAE7B3K,EAAWjJ,KAAK8Q,KAAKF,EAAKA,EAAKC,EAAKA,QACbpQ,IAAvBuD,KAAKoQ,gBACLE,EAAatQ,KAAKoQ,cAAgBnL,GAEtCjF,KAAKoQ,cAAgBnL,EACrB,IAAIvG,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UACG,GAAd8O,IACAtQ,KAAKqQ,gBAAkBC,GAG3B,IAAIR,EAAmBpR,EAAIqR,cAAcC,wBACrCvL,EAAW,eAAqBzE,KAAKwE,gBACzCC,EAAS,IAAMqL,EAAiB9H,KAChCvD,EAAS,IAAMqL,EAAiB5H,IAChClI,KAAKoP,QAAU1Q,EAAI+G,+BAA+BhB,GAElD/F,EAAIuR,SACJ1O,EAAKgP,yBAAyBD,EAAYtQ,KAAKoP,UAOnDe,EAAUjQ,UAAU6E,cAAgB,SAAUjE,GAC1C,GAAId,KAAKwE,eAAe7G,OAAS,EAAG,CAChC,IAAIe,EAAMoC,EAAgBpC,IACtB6C,EAAO7C,EAAI8C,UACXgP,EAAYxQ,KAAKqQ,gBAAkB,EAAI,GAAK,EAEhD,OADA9O,EAAKwE,eAAe/F,KAAKW,UAAW6P,IAC7B,EAGP,OAAO,GAQfL,EAAUjQ,UAAU8F,gBAAkB,SAAUlF,GAC5C,GAAId,KAAKwE,eAAe7G,QAAU,EAAG,CACjC,IAAIe,EAAMoC,EAAgBpC,IAO1B,OANAsB,KAAKoP,QAAU,KACfpP,KAAKoQ,mBAAgB3T,EACrBuD,KAAKqQ,gBAAkB,EAClBrQ,KAAKkQ,wBACNxR,EAAI8C,UAAU+C,oBAEX,EAGP,OAAO,GAGR4L,EAvGmB,CAwG5BhK,EAAA,MACa,MCrDR,SAASsK,GAASzT,GACrB,IAAIwD,EAAUxD,GAA4B,GACtC0T,EAAe,IAAIC,EAAA,KACnB9M,EAAU,IAAI,IAAS,KAAO,IAAM,KACpC+M,OAAoDnU,IAA/B+D,EAAQoQ,oBAC3BpQ,EAAQoQ,mBAEVA,GACAF,EAAanE,KAAK,IAAI,GAE1B,IAAIsE,OAA8CpU,IAA5B+D,EAAQqQ,iBAAgCrQ,EAAQqQ,gBAClEA,GACAH,EAAanE,KAAK,IAAI,EAAgB,CAClC7L,MAAOF,EAAQsQ,UACflQ,SAAUJ,EAAQuQ,gBAG1B,IAAIC,OAA8BvU,IAApB+D,EAAQwQ,SAAwBxQ,EAAQwQ,QAClDA,GACAN,EAAanE,KAAK,IAAI,EAAQ,CAC1BpI,YAAa3D,EAAQ2D,YACrBN,QAASA,KAGjB,IAAIoN,OAAsCxU,IAAxB+D,EAAQyQ,aAA4BzQ,EAAQyQ,YAC1DA,GACAP,EAAanE,KAAK,IAAI,IAE1B,IAAI2E,OAAkCzU,IAAtB+D,EAAQ0Q,WAA0B1Q,EAAQ0Q,UACtDA,GACAR,EAAanE,KAAK,IAAI,GAAU,CAC5B3L,SAAUJ,EAAQuQ,gBAG1B,IAAII,OAAgC1U,IAArB+D,EAAQ2Q,UAAyB3Q,EAAQ2Q,SACpDA,IACAT,EAAanE,KAAK,IAAI,GACtBmE,EAAanE,KAAK,IAAI,GAAa,CAC/B7L,MAAOF,EAAQsQ,UACflQ,SAAUJ,EAAQuQ,iBAG1B,IAAIK,OAA4C3U,IAA3B+D,EAAQ4Q,gBAA+B5Q,EAAQ4Q,eAChEA,GACAV,EAAanE,KAAK,IAAI,GAAe,CACjCpI,YAAa3D,EAAQ2D,YACrBvD,SAAUJ,EAAQuQ,gBAG1B,IAAIM,OAA0C5U,IAA1B+D,EAAQ6Q,eAA8B7Q,EAAQ6Q,cAMlE,OALIA,GACAX,EAAanE,KAAK,IAAI,EAAS,CAC3B3L,SAAUJ,EAAQuQ,gBAGnBL,I,oCCvIX,W,uBCAAtR,EAAOC,QAAU,IAA0B,wC,oDCM5B,GACXiS,QAAS,UACTC,2BAA4B,0B,YCR5BjS,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA0DxC,EAA+B,SAAUK,GAKzC,SAASoR,EAAcxU,GACnB,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GACtCyU,EAAc,eAAO,GAAIjR,GAQ7B,cAPOiR,EAAYC,eACZD,EAAYE,uBACnBrR,EAAQF,EAAOG,KAAKP,KAAMyR,IAAgBzR,KAC1CM,EAAMsR,gBAA+BnV,IAApB+D,EAAQkR,QAAwBlR,EAAQkR,QAAU,GACnEpR,EAAMuR,+BAA6DpV,IAAnC+D,EAAQmR,wBAClCnR,EAAQmR,wBAEPrR,EAsCX,OArDAhB,EAAUkS,EAAepR,GAuBzBoR,EAActR,UAAU4R,WAAa,WACjC,OAA8B9R,KAAK+R,IAAIC,EAAaV,UAQxDE,EAActR,UAAU0R,WAAa,SAAUF,GAC3C1R,KAAKiS,IAAID,EAAaV,QAASI,IAQnCF,EAActR,UAAUgS,0BAA4B,WAChD,OAA+BlS,KAAK+R,IAAIC,EAAaT,6BAQzDC,EAActR,UAAU2R,0BAA4B,SAAUF,GAC1D3R,KAAKiS,IAAID,EAAaT,2BAA4BI,IAE/CH,EAtDuB,CAuDhCW,EAAA,MACaC,EAAA,E,4GClHX,EAAwC,WACxC,IAAI7S,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA+BxC,EAAyC,SAAUK,GAKnD,SAASiS,EAAwBC,GAC7B,IAAIhS,EAAQF,EAAOG,KAAKP,KAAMsS,IAActS,KA8C5C,OAzCAM,EAAMiS,eAAgB,EAKtBjS,EAAMkS,gBAAkB,KAKxBlS,EAAMmS,mBAKNnS,EAAMoS,mBAAqB,KAK3BpS,EAAMqS,iBAKNrS,EAAMsS,cAAgB,GAKtBtS,EAAMuS,WAAY,EAKlBvS,EAAMwS,UAAY,iBAKlBxS,EAAMyS,cAAgB,IAAIC,EAAA,KAAU,EAAG,EAAG,EAAG,GACtC1S,EA2ZX,OA9cA,EAAU+R,EAAyBjS,GA0DnCiS,EAAwBnS,UAAU+S,eAAiB,SAAUC,GACzD,IAAIZ,EAAYtS,KAAKmT,WACjBC,EAAYF,EAAKG,WACjB1B,EAAyBW,EAAUJ,4BACvC,OAAQkB,GAAaE,EAAA,KAAUC,QAC3BH,GAAaE,EAAA,KAAUE,OACtBJ,GAAaE,EAAA,KAAUG,QAAU9B,GAS1CU,EAAwBnS,UAAUwT,QAAU,SAAUjY,EAAGyC,EAAGC,EAAGwV,GAC3D,IAAIC,EAAaD,EAAWC,WACxB1Y,EAAayY,EAAWE,UAAU3Y,WAClCoX,EAAYtS,KAAKmT,WACjBW,EAAaxB,EAAUyB,YACvBb,EAAOY,EAAWJ,QAAQjY,EAAGyC,EAAGC,EAAGyV,EAAY1Y,GAcnD,OAbIgY,EAAKG,YAAcC,EAAA,KAAUG,QACxBnB,EAAUJ,4BAINI,EAAUR,aAAe,IAE9B9R,KAAK6S,WAAY,GAJjBK,EAAKc,SAASV,EAAA,KAAUC,SAO3BvT,KAAKiT,eAAeC,KACrBA,EAAOA,EAAKe,kBAETf,GAQXb,EAAwBnS,UAAUgU,mBAAqB,SAAUC,EAAOC,EAAMlB,GAC1E,QAAIlT,KAAKiT,eAAeC,IACb9S,EAAOF,UAAUgU,mBAAmB3T,KAAKP,KAAMmU,EAAOC,EAAMlB,IAS3Eb,EAAwBnS,UAAUmU,aAAe,SAAUV,GACvD,QAAS3T,KAAKmT,WAAWY,aAQ7B1B,EAAwBnS,UAAUoU,YAAc,SAAUX,EAAYpR,GAClE,IAAIgS,EAAaZ,EAAWa,iBAAiBb,EAAWc,YACpDZ,EAAYF,EAAWE,UACvB3Y,EAAa2Y,EAAU3Y,WACvBwZ,EAAiBb,EAAUtJ,WAC3BoK,EAAad,EAAUnY,OACvB6K,EAAWsN,EAAUtN,SACrBqN,EAAaD,EAAWC,WACxBtB,EAAYtS,KAAKmT,WACjBW,EAAaxB,EAAUyB,YACvBa,EAAiBd,EAAWe,cAC5B1Z,EAAW2Y,EAAWgB,yBAAyB5Z,GAC/CO,EAAIN,EAAS4Z,kBAAkBL,EAAgBZ,EAAWkB,YAC1DC,EAAiB9Z,EAASwJ,cAAclJ,GACxCW,EAASuX,EAAWvX,OACpB8Y,EAAcX,EAAWnY,QAAU,eAAemY,EAAWnY,OAAQlB,GACrEga,IACA9Y,EAAS,eAAgBA,EAAQ,eAAemY,EAAWnY,OAAQlB,KAEvE,IAAIia,EAAiBrB,EAAWsB,kBAAkBxB,GAE9CnW,EAAQzB,KAAKqZ,MAAM1B,EAAWnN,KAAK,GAAK2O,GACxC3X,EAASxB,KAAKqZ,MAAM1B,EAAWnN,KAAK,GAAK2O,GAC7C,GAAI5O,EAAU,CACV,IAAIC,EAAOxK,KAAKqZ,MAAMrZ,KAAK8Q,KAAKrP,EAAQA,EAAQD,EAASA,IACzDC,EAAQ+I,EACRhJ,EAASgJ,EAEb,IAAIoG,EAAMqI,EAAiBxX,EAAS,EAAI0X,EACpCtI,EAAMoI,EAAiBzX,EAAU,EAAI2X,EACrCG,EAAe,CACfX,EAAW,GAAK/H,EAChB+H,EAAW,GAAK9H,EAChB8H,EAAW,GAAK/H,EAChB+H,EAAW,GAAK9H,GAEhB7N,EAAY7D,EAAS8D,0BAA0B7C,EAAQX,GAIvD8Z,EAAiB,GACrBA,EAAe9Z,GAAK,GACpB,IAAI+Z,EAAkBxV,KAAKyV,uBAAuB3B,EAAY5Y,EAAYqa,GACtEzC,EAAY9S,KAAK8S,UACjB4C,EAAe1V,KAAK+S,cACxB/S,KAAK6S,WAAY,EACjB,IAAK,IAAI3U,EAAIc,EAAU2W,KAAMzX,GAAKc,EAAU4W,OAAQ1X,EAChD,IAAK,IAAIC,EAAIa,EAAU6W,KAAM1X,GAAKa,EAAU8W,OAAQ3X,EAAG,CACnD,IAAI+U,EAAOlT,KAAK0T,QAAQjY,EAAGyC,EAAGC,EAAGwV,GACjC,GAAI3T,KAAKiT,eAAeC,GAAO,CAC3B,IAAI6C,EAAM,eAAO/V,MACjB,GAAIkT,EAAKG,YAAcC,EAAA,KAAUC,OAAQ,CACrCgC,EAAe9Z,GAAGyX,EAAK1X,UAAUwa,YAAc9C,EAC/C,IAAI+C,EAAe/C,EAAK+C,aAAaF,GAChC/V,KAAK6S,YACLoD,IAAsD,IAAtCjW,KAAK4S,cAAcsD,QAAQhD,KAC5ClT,KAAK6S,WAAY,GAGzB,GAA4C,IAAxCK,EAAKiD,SAASJ,EAAKpC,EAAWyC,MAE9B,SAGR,IAAIC,EAAiBlb,EAASmb,2BAA2BpD,EAAK1X,UAAWka,EAAc5C,GACnFyD,GAAU,EACVF,IACAE,EAAUf,EAAgB/Z,EAAI,EAAG4a,IAEhCE,GACDpb,EAASqb,gCAAgCtD,EAAK1X,UAAWga,EAAiBE,EAAc5C,GAIpG,IAAI2D,EAAcxB,EAAiBP,EAEnC,eAAiB1U,KAAK0W,eAAgB/C,EAAWnN,KAAK,GAAK,EAAGmN,EAAWnN,KAAK,GAAK,EAAG,EAAI2O,EAAgB,EAAIA,EAAgB5O,GAAW9I,EAAQ,GAAID,EAAS,GAC9J,IAAImZ,EAAkB,eAAsB3W,KAAK0W,gBACjD1W,KAAK4W,aAAarU,EAAQoU,EAAiBpC,EAAWsC,SACtD,IAAIC,EAAU9W,KAAK8W,QACfC,EAASD,EAAQC,OACrB,eAAY/W,KAAKgX,sBAAuBhX,KAAK0W,gBAE7C,eAAiB1W,KAAKiX,cAAexZ,EAAQ,EAAGD,EAAS,EAAGiZ,EAAaA,EAAa,GAAIhZ,EAAQ,GAAID,EAAS,GAC3GuZ,EAAOtZ,OAASA,GAASsZ,EAAOvZ,QAAUA,GAC1CuZ,EAAOtZ,MAAQA,EACfsZ,EAAOvZ,OAASA,GAEVwC,KAAKkX,iBACXJ,EAAQK,UAAU,EAAG,EAAG1Z,EAAOD,GAE/B0X,GACAlV,KAAKoX,cAAcN,EAASnD,EAAYuB,GAE5C,eAAO4B,EAAShD,EAAWuD,qBAC3BrX,KAAKsX,UAAUR,EAASnD,GACxB3T,KAAK4S,cAAcjV,OAAS,EAE5B,IAEI4Z,EAAOC,EAAQC,EAFfC,EAAKhY,OAAOiY,KAAKpC,GAAgB7W,IAAIC,QACzC+Y,EAAGE,KAAK,QAEmB,IAAvBrD,EAAWsC,SACT7W,KAAKkX,kBACHpD,EAAW+D,UAAUlE,EAAWE,UAAU3Y,aAI9Cqc,EAAQ,GACRC,EAAS,IAJTE,EAAKA,EAAGI,UAMZ,IAAK,IAAI9V,EAAI0V,EAAG/Z,OAAS,EAAGqE,GAAK,IAAKA,EAAG,CACrC,IAAI+V,EAAWL,EAAG1V,GACdgW,GAAuBlE,EAAWmE,iBAAiBF,EAAUnE,EAAY1Y,GACzEgd,GAAoB/c,EAASwJ,cAAcoT,GAC3CI,GAAeD,GAAoBjD,EACnCmD,GAAOJ,GAAqB,GAAKG,GAAe1B,EAChD4B,GAAOL,GAAqB,GAAKG,GAAe1B,EAChD6B,GAAkBnd,EAASe,yBAAyB,eAAWoZ,GAAeyC,GAC9EQ,GAAmBpd,EAASqd,mBAAmBF,IAC/CG,GAAW,eAAezY,KAAKiX,cAAe,CAC7C9B,GAAkBoD,GAAiB,GAAKjD,EAAa,IAClDL,EACHE,GAAkBG,EAAa,GAAKiD,GAAiB,IAClDtD,IAEJyD,GAAavD,EAAiBrB,EAAW6E,uBAAuBzd,GAChE0d,GAAcrD,EAAewC,GACjC,IAAK,IAAIc,MAAgBD,GAAa,CAC9B1F,EAA4D0F,GAAYC,IAA5E,IACIrd,GAAY0X,EAAK1X,UAEjBsd,GAASL,GAAS,IAAMH,GAAgB,GAAK9c,GAAU,IAAM4c,GAC7DW,GAAQ/c,KAAKqZ,MAAMyD,GAASV,IAC5BY,GAASP,GAAS,IAAMH,GAAgB,GAAK9c,GAAU,IAAM6c,GAC7DY,GAAQjd,KAAKqZ,MAAM2D,GAASX,IAG5Ba,IAFAhb,EAAIlC,KAAKqZ,MAAMyD,IACf3a,EAAInC,KAAKqZ,MAAM2D,IACXD,GAAQ7a,GACZib,GAAIF,GAAQ9a,EACZib,GAAa3d,IAAMsc,EACnB9B,EAAemD,IAA+D,IAAjDlG,EAAKiD,SAAS,eAAOnW,MAAO2T,EAAWyC,MACxE,IAAKH,EACD,GAAIsB,EAAO,CAEPT,EAAQuC,OACR5B,EAAc,CAACvZ,EAAGC,EAAGD,EAAIgb,GAAG/a,EAAGD,EAAIgb,GAAG/a,EAAIgb,GAAGjb,EAAGC,EAAIgb,IACpD,IAAK,IAAIG,GAAM,EAAGrX,GAAKsV,EAAM5Z,OAAQ2b,GAAMrX,KAAMqX,GAC7C,GAAI7d,IAAMsc,GAAYA,EAAWP,EAAO8B,IAAM,CAC1C,IAAIC,GAAOhC,EAAM+B,IACjBxC,EAAQ0C,YAER1C,EAAQ2C,OAAOhC,EAAY,GAAIA,EAAY,IAC3CX,EAAQ4C,OAAOjC,EAAY,GAAIA,EAAY,IAC3CX,EAAQ4C,OAAOjC,EAAY,GAAIA,EAAY,IAC3CX,EAAQ4C,OAAOjC,EAAY,GAAIA,EAAY,IAE3CX,EAAQ2C,OAAOF,GAAK,GAAIA,GAAK,IAC7BzC,EAAQ4C,OAAOH,GAAK,GAAIA,GAAK,IAC7BzC,EAAQ4C,OAAOH,GAAK,GAAIA,GAAK,IAC7BzC,EAAQ4C,OAAOH,GAAK,GAAIA,GAAK,IAC7BzC,EAAQyC,OAGhBhC,EAAMhL,KAAKkL,GACXD,EAAOjL,KAAKwL,QAGZjB,EAAQK,UAAUjZ,EAAGC,EAAG+a,GAAGC,IAGnCnZ,KAAK2Z,cAAczG,EAAMS,EAAYzV,EAAGC,EAAG+a,GAAGC,GAAGT,GAAYU,GAAY7E,EAAWsC,SAChFU,IAAUtB,GACVa,EAAQ8C,UAEZ5Z,KAAK4S,cAAcrG,KAAK2G,GACxBlT,KAAK6Z,gBAAgBlG,EAAWmG,UAAWhG,EAAYZ,IAmB/D,OAhBAlT,KAAK2S,iBAAmBiC,EACxB5U,KAAK+Z,mBAAqB9E,EAC1BjV,KAAKuS,eACAvS,KAAKwS,kBAAoB,eAAOxS,KAAKwS,gBAAiB8C,GAC3DtV,KAAKwS,gBAAkB8C,EACvBtV,KAAKyS,mBAAqBmB,EAC1B5T,KAAK0S,mBAAqBxX,EAC1B8E,KAAKga,kBAAkBrG,EAAYG,EAAY3Y,EAAUyY,EAAY1Y,EAAYkB,EAAQX,EAAG6W,EAAUR,cACtG9R,KAAKia,oBAAoBtG,EAAYG,GACrC9T,KAAKka,WAAWpD,EAASnD,GACrBY,EAAWnY,QACX0a,EAAQ8C,UAERjD,IAAoBI,EAAO3P,MAAM+S,YACjCpD,EAAO3P,MAAM+S,UAAYxD,GAEtB3W,KAAKoa,WAahB/H,EAAwBnS,UAAUyZ,cAAgB,SAAUzG,EAAMS,EAAYzV,EAAGC,EAAG+a,EAAGC,EAAGkB,EAAQjB,EAAYvC,GAC1G,IAAIyD,EAAQta,KAAKua,aAAarH,GAC9B,GAAKoH,EAAL,CAGA,IAAIvE,EAAM,eAAO/V,MACbwa,EAAYpB,EAAalG,EAAKiD,SAASJ,EAAKpC,EAAWyC,MAAQ,EAC/DqE,EAAQ5D,EAAU2D,EAClBE,EAAeD,IAAUza,KAAK8W,QAAQ6D,YACtCD,IACA1a,KAAK8W,QAAQuC,OACbrZ,KAAK8W,QAAQ6D,YAAcF,GAE/Bza,KAAK8W,QAAQ8D,UAAUN,EAAOD,EAAQA,EAAQC,EAAM7c,MAAQ,EAAI4c,EAAQC,EAAM9c,OAAS,EAAI6c,EAAQnc,EAAGC,EAAG+a,EAAGC,GACxGuB,GACA1a,KAAK8W,QAAQ8C,UAEC,IAAdY,EACA7G,EAAWkH,SAAU,EAEhBzB,GACLlG,EAAK4H,cAAc/E,KAM3B1D,EAAwBnS,UAAU6a,SAAW,WACzC,IAAIjE,EAAU9W,KAAK8W,QACnB,OAAOA,EAAUA,EAAQC,OAAS,MAQtC1E,EAAwBnS,UAAUqa,aAAe,SAAUrH,GACvD,OAAOA,EAAK6H,YAOhB1I,EAAwBnS,UAAU+Z,oBAAsB,SAAUtG,EAAYG,GAC1E,GAAIA,EAAWkH,iBAAkB,CAM7B,IAAIC,EAAqB,SAAUnH,EAAYpV,EAAKiV,GAChD,IAAIuH,EAAgB,eAAOpH,GACvBoH,KAAiBvH,EAAWmG,WAC5BhG,EAAWqH,YAAYxH,EAAWE,UAAU3Y,WAAYyY,EAAWmG,UAAUoB,KAEnFrM,KAAK,KAAMiF,GACbH,EAAWyH,oBAAoB7O,KACmC,KAS1E8F,EAAwBnS,UAAU2Z,gBAAkB,SAAUC,EAAWhG,EAAYZ,GAEjF,IAAIgI,EAAgB,eAAOpH,GACrBoH,KAAiBpB,IACnBA,EAAUoB,GAAiB,IAE/BpB,EAAUoB,GAAehI,EAAK5U,WAAY,GAoB9C+T,EAAwBnS,UAAU8Z,kBAAoB,SAAUrG,EAAYG,EAAY3Y,EAAUyY,EAAY1Y,EAAYkB,EAAQ2b,EAAUrG,EAAS2J,GACjJ,IAAIH,EAAgB,eAAOpH,GACrBoH,KAAiBvH,EAAW2H,cAC9B3H,EAAW2H,YAAYJ,GAAiB,IAE5C,IAIIhI,EAAMlU,EAAWiW,EAAgB/W,EAAGC,EAAG1C,EAJvC6f,EAAc3H,EAAW2H,YAAYJ,GACrCK,EAAY5H,EAAW4H,UACvBne,EAAUjC,EAAS2D,aACnB0c,EAAY,EAEhB,IAAK/f,EAAI2B,EAAS3B,GAAKsc,IAAYtc,EAG/B,IAFAuD,EAAY7D,EAAS8D,0BAA0B7C,EAAQX,EAAGuD,GAC1DiW,EAAiB9Z,EAASwJ,cAAclJ,GACnCyC,EAAIc,EAAU2W,KAAMzX,GAAKc,EAAU4W,OAAQ1X,EAC5C,IAAKC,EAAIa,EAAU6W,KAAM1X,GAAKa,EAAU8W,OAAQ3X,EACxC4Z,EAAWtc,GAAKiW,KACd8J,EACFtI,EAAOY,EAAWJ,QAAQjY,EAAGyC,EAAGC,EAAGyV,EAAY1Y,GAC3CgY,EAAKG,YAAcC,EAAA,KAAUmI,OAC7BH,EAAYpI,EAAK5U,WAAY,EACxBid,EAAUG,YAAYxI,EAAK5U,WAC5Bid,EAAUI,QAAQ,CACdzI,EACAgI,EACA/f,EAASQ,mBAAmBuX,EAAK1X,WACjCyZ,UAIaxY,IAArB4e,GACAA,EAAiBnI,IAIrBY,EAAW8H,QAAQngB,EAAGyC,EAAGC,EAAGjD,GAK5C4Y,EAAW+H,gBAAgBL,EAAWtgB,IAEnCmX,EA/ciC,CAgd1C,QAKF,EAAwBnS,UAAUiT,SACnB,QCrfX,EAAwC,WACxC,IAAI5T,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA4BxC,EAA2B,SAAUK,GAKrC,SAAS0b,EAAU9e,GACf,OAAOoD,EAAOG,KAAKP,KAAMhD,IAAgBgD,KAU7C,OAfA,EAAU8b,EAAW1b,GAYrB0b,EAAU5b,UAAU6b,eAAiB,WACjC,OAAO,IAAI,EAAwB/b,OAEhC8b,EAhBmB,CAiB5B1J,GACa,U,mJC9Bf,SAAS4J,EAAcC,EAAiBC,EAASC,EAASC,EAAQle,EAAGC,EAAGke,GACpE,IAII3V,EAJA4V,EAAKL,EAAgBC,GACrBK,EAAKN,EAAgBC,EAAU,GAC/BtP,EAAKqP,EAAgBE,GAAWG,EAChCzP,EAAKoP,EAAgBE,EAAU,GAAKI,EAExC,GAAW,IAAP3P,GAAmB,IAAPC,EACZnG,EAASwV,MAER,CACD,IAAIM,IAAMte,EAAIoe,GAAM1P,GAAMzO,EAAIoe,GAAM1P,IAAOD,EAAKA,EAAKC,EAAKA,GAC1D,GAAI2P,EAAI,EACJ9V,EAASyV,MAER,IAAIK,EAAI,EAAG,CACZ,IAAK,IAAIxa,EAAI,EAAGA,EAAIoa,IAAUpa,EAC1Bqa,EAAara,GAAK,eAAKia,EAAgBC,EAAUla,GAAIia,EAAgBE,EAAUna,GAAIwa,GAGvF,YADAH,EAAa1e,OAASye,GAItB1V,EAASwV,GAGjB,IAASla,EAAI,EAAGA,EAAIoa,IAAUpa,EAC1Bqa,EAAara,GAAKia,EAAgBvV,EAAS1E,GAE/Cqa,EAAa1e,OAASye,EAYnB,SAASK,EAAgBR,EAAiBvV,EAAQ1B,EAAKoX,EAAQ1e,GAClE,IAAI4e,EAAKL,EAAgBvV,GACrB6V,EAAKN,EAAgBvV,EAAS,GAClC,IAAKA,GAAU0V,EAAQ1V,EAAS1B,EAAK0B,GAAU0V,EAAQ,CACnD,IAAIM,EAAKT,EAAgBvV,GACrBiW,EAAKV,EAAgBvV,EAAS,GAC9BkW,EAAe,eAAUN,EAAIC,EAAIG,EAAIC,GACrCC,EAAelf,IACfA,EAAMkf,GAEVN,EAAKI,EACLH,EAAKI,EAET,OAAOjf,EAUJ,SAASmf,EAAqBZ,EAAiBvV,EAAQoW,EAAMV,EAAQ1e,GACxE,IAAK,IAAIsE,EAAI,EAAGC,EAAK6a,EAAKnf,OAAQqE,EAAIC,IAAMD,EAAG,CAC3C,IAAIgD,EAAM8X,EAAK9a,GACftE,EAAM+e,EAAgBR,EAAiBvV,EAAQ1B,EAAKoX,EAAQ1e,GAC5DgJ,EAAS1B,EAEb,OAAOtH,EAgCJ,SAASqf,EAAmBd,EAAiBvV,EAAQ1B,EAAKoX,EAAQ9O,EAAU0P,EAAQ9e,EAAGC,EAAGke,EAAcY,EAAoBC,GAC/H,GAAIxW,GAAU1B,EACV,OAAOiY,EAEX,IAAIjb,EAAGmb,EACP,GAAiB,IAAb7P,EAAgB,CAGhB,GADA6P,EAAkB,eAAUjf,EAAGC,EAAG8d,EAAgBvV,GAASuV,EAAgBvV,EAAS,IAChFyW,EAAkBF,EAAoB,CACtC,IAAKjb,EAAI,EAAGA,EAAIoa,IAAUpa,EACtBqa,EAAara,GAAKia,EAAgBvV,EAAS1E,GAG/C,OADAqa,EAAa1e,OAASye,EACfe,EAGP,OAAOF,EAGf,IAAIG,EAAWF,GAA8B,CAACG,IAAKA,KAC/CC,EAAQ5W,EAAS0V,EACrB,MAAOkB,EAAQtY,EAGX,GAFAgX,EAAcC,EAAiBqB,EAAQlB,EAAQkB,EAAOlB,EAAQle,EAAGC,EAAGif,GACpED,EAAkB,eAAUjf,EAAGC,EAAGif,EAAS,GAAIA,EAAS,IACpDD,EAAkBF,EAAoB,CAEtC,IADAA,EAAqBE,EAChBnb,EAAI,EAAGA,EAAIoa,IAAUpa,EACtBqa,EAAara,GAAKob,EAASpb,GAE/Bqa,EAAa1e,OAASye,EACtBkB,GAASlB,OAaTkB,GACIlB,EACIpgB,KAAK0B,KAAM1B,KAAK8Q,KAAKqQ,GAAmBnhB,KAAK8Q,KAAKmQ,IAC9C3P,EACA,EAAG,GAGvB,GAAI0P,IAEAhB,EAAcC,EAAiBjX,EAAMoX,EAAQ1V,EAAQ0V,EAAQle,EAAGC,EAAGif,GACnED,EAAkB,eAAUjf,EAAGC,EAAGif,EAAS,GAAIA,EAAS,IACpDD,EAAkBF,GAAoB,CAEtC,IADAA,EAAqBE,EAChBnb,EAAI,EAAGA,EAAIoa,IAAUpa,EACtBqa,EAAara,GAAKob,EAASpb,GAE/Bqa,EAAa1e,OAASye,EAG9B,OAAOa,EAgBJ,SAASM,EAAwBtB,EAAiBvV,EAAQoW,EAAMV,EAAQ9O,EAAU0P,EAAQ9e,EAAGC,EAAGke,EAAcY,EAAoBC,GAErI,IADA,IAAIE,EAAWF,GAA8B,CAACG,IAAKA,KAC1Crb,EAAI,EAAGC,EAAK6a,EAAKnf,OAAQqE,EAAIC,IAAMD,EAAG,CAC3C,IAAIgD,EAAM8X,EAAK9a,GACfib,EAAqBF,EAAmBd,EAAiBvV,EAAQ1B,EAAKoX,EAAQ9O,EAAU0P,EAAQ9e,EAAGC,EAAGke,EAAcY,EAAoBG,GACxI1W,EAAS1B,EAEb,OAAOiY,E,oDChMJ,SAAS,EAAWhB,EAAiBvV,EAAQ1B,EAAKoX,GAIrD,IAHA,IAAIoB,EAAY,EACZlB,EAAKL,EAAgBjX,EAAMoX,GAC3BG,EAAKN,EAAgBjX,EAAMoX,EAAS,GACjC1V,EAAS1B,EAAK0B,GAAU0V,EAAQ,CACnC,IAAIM,EAAKT,EAAgBvV,GACrBiW,EAAKV,EAAgBvV,EAAS,GAClC8W,GAAajB,EAAKG,EAAKJ,EAAKK,EAC5BL,EAAKI,EACLH,EAAKI,EAET,OAAOa,EAAY,EAShB,SAAS,EAAYvB,EAAiBvV,EAAQoW,EAAMV,GAEvD,IADA,IAAIqB,EAAO,EACFzb,EAAI,EAAGC,EAAK6a,EAAKnf,OAAQqE,EAAIC,IAAMD,EAAG,CAC3C,IAAIgD,EAAM8X,EAAK9a,GACfyb,GAAQ,EAAWxB,EAAiBvV,EAAQ1B,EAAKoX,GACjD1V,EAAS1B,EAEb,OAAOyY,ECrCX,IAAIne,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAgCxC,EAA4B,SAAUK,GAOtC,SAASsd,EAAWhV,EAAaiV,GAC7B,IAAIrd,EAAQF,EAAOG,KAAKP,OAASA,KAmBjC,OAdAM,EAAM+M,WAAa,EAKnB/M,EAAMsd,mBAAqB,OACRnhB,IAAfkhB,GAA6B/f,MAAMigB,QAAQnV,EAAY,IAKvDpI,EAAMsI,eACsD,EAAe+U,GAL3Erd,EAAMwd,mBAAmBH,EACI,GAM1Brd,EAoFX,OA9GAhB,EAAUoe,EAAYtd,GAiCtBsd,EAAWxd,UAAU6d,MAAQ,WACzB,OAAO,IAAIL,EAAW1d,KAAKic,gBAAgBtT,QAAS3I,KAAKge,SAS7DN,EAAWxd,UAAU+d,eAAiB,SAAU/f,EAAGC,EAAGke,EAAcY,GAChE,OAAIA,EAAqB,eAAyBjd,KAAK9C,YAAagB,EAAGC,GAC5D8e,GAEPjd,KAAK4d,mBAAqB5d,KAAK6U,gBAC/B7U,KAAKqN,UAAYrR,KAAK8Q,KAAK2P,EAAgBzc,KAAKic,gBAAiB,EAAGjc,KAAKic,gBAAgBte,OAAQqC,KAAKoc,OAAQ,IAC9Gpc,KAAK4d,kBAAoB5d,KAAK6U,eAE3BkI,EAAmB/c,KAAKic,gBAAiB,EAAGjc,KAAKic,gBAAgBte,OAAQqC,KAAKoc,OAAQpc,KAAKqN,WAAW,EAAMnP,EAAGC,EAAGke,EAAcY,KAO3IS,EAAWxd,UAAUge,QAAU,WAC3B,OAAO,EAAele,KAAKic,gBAAiB,EAAGjc,KAAKic,gBAAgBte,OAAQqC,KAAKoc,SAOrFsB,EAAWxd,UAAUie,eAAiB,WAClC,OAAO,OAAAC,EAAA,MAAmBpe,KAAKic,gBAAiB,EAAGjc,KAAKic,gBAAgBte,OAAQqC,KAAKoc,SAOzFsB,EAAWxd,UAAUme,8BAAgC,SAAUC,GAC3D,IAAIC,EAA4B,GAEhC,OADAA,EAA0B5gB,OAAS,eAAeqC,KAAKic,gBAAiB,EAAGjc,KAAKic,gBAAgBte,OAAQqC,KAAKoc,OAAQkC,EAAkBC,EAA2B,GAC3J,IAAIb,EAAWa,EAA2BC,EAAA,KAAeC,KAOpEf,EAAWxd,UAAUwe,QAAU,WAC3B,OAAOC,EAAA,KAAaC,aAQxBlB,EAAWxd,UAAU2e,iBAAmB,SAAUziB,GAC9C,OAAO,GAQXshB,EAAWxd,UAAU0I,eAAiB,SAAUF,EAAaiV,GACzD3d,KAAK8e,UAAUnB,EAAYjV,EAAa,GACnC1I,KAAKic,kBACNjc,KAAKic,gBAAkB,IAE3Bjc,KAAKic,gBAAgBte,OAAS,OAAAohB,EAAA,MAAmB/e,KAAKic,gBAAiB,EAAGvT,EAAa1I,KAAKoc,QAC5Fpc,KAAKgf,WAEFtB,EA/GoB,CAgH7BuB,EAAA,MACa,I,wBCrIR,SAASC,EAAyBjD,EAAiBvV,EAAQ1B,EAAKoX,EAAQhgB,GAC3E,IAAI+iB,EAAU,eAAc/iB,GAK5B,SAAUiF,GACN,OAAQ+d,EAAqBnD,EAAiBvV,EAAQ1B,EAAKoX,EAAQ/a,EAAW,GAAIA,EAAW,OAEjG,OAAQ8d,EAWL,SAASC,EAAqBnD,EAAiBvV,EAAQ1B,EAAKoX,EAAQle,EAAGC,GAW1E,IAHA,IAAIkhB,EAAK,EACL/C,EAAKL,EAAgBjX,EAAMoX,GAC3BG,EAAKN,EAAgBjX,EAAMoX,EAAS,GACjC1V,EAAS1B,EAAK0B,GAAU0V,EAAQ,CACnC,IAAIM,EAAKT,EAAgBvV,GACrBiW,EAAKV,EAAgBvV,EAAS,GAC9B6V,GAAMpe,EACFwe,EAAKxe,IAAMue,EAAKJ,IAAOne,EAAIoe,IAAOre,EAAIoe,IAAOK,EAAKJ,GAAM,GACxD8C,IAGC1C,GAAMxe,IAAMue,EAAKJ,IAAOne,EAAIoe,IAAOre,EAAIoe,IAAOK,EAAKJ,GAAM,GAC9D8C,IAEJ/C,EAAKI,EACLH,EAAKI,EAET,OAAc,IAAP0C,EAWJ,SAASC,EAAsBrD,EAAiBvV,EAAQoW,EAAMV,EAAQle,EAAGC,GAC5E,GAAoB,IAAhB2e,EAAKnf,OACL,OAAO,EAEX,IAAKyhB,EAAqBnD,EAAiBvV,EAAQoW,EAAK,GAAIV,EAAQle,EAAGC,GACnE,OAAO,EAEX,IAAK,IAAI6D,EAAI,EAAGC,EAAK6a,EAAKnf,OAAQqE,EAAIC,IAAMD,EACxC,GAAIod,EAAqBnD,EAAiBa,EAAK9a,EAAI,GAAI8a,EAAK9a,GAAIoa,EAAQle,EAAGC,GACvE,OAAO,EAGf,OAAO,EC9DJ,SAASohB,EAAwBtD,EAAiBvV,EAAQoW,EAAMV,EAAQoD,EAAaC,EAAmBC,GAM3G,IALA,IAAI1d,EAAGC,EAAI/D,EAAGoe,EAAII,EAAIH,EAAII,EACtBxe,EAAIqhB,EAAYC,EAAoB,GAEpCE,EAAgB,GAEXC,EAAI,EAAGC,EAAK/C,EAAKnf,OAAQiiB,EAAIC,IAAMD,EAAG,CAC3C,IAAI5a,EAAM8X,EAAK8C,GAGf,IAFAtD,EAAKL,EAAgBjX,EAAMoX,GAC3BG,EAAKN,EAAgBjX,EAAMoX,EAAS,GAC/Bpa,EAAI0E,EAAQ1E,EAAIgD,EAAKhD,GAAKoa,EAC3BM,EAAKT,EAAgBja,GACrB2a,EAAKV,EAAgBja,EAAI,IACpB7D,GAAKoe,GAAMI,GAAMxe,GAAOoe,GAAMpe,GAAKA,GAAKwe,KACzCze,GAAMC,EAAIoe,IAAOI,EAAKJ,IAAQG,EAAKJ,GAAMA,EACzCqD,EAAcpT,KAAKrO,IAEvBoe,EAAKI,EACLH,EAAKI,EAKb,IAAImD,EAASzC,IACT0C,GAAoBC,IAGxB,IAFAL,EAAc/H,KAAK,QACnB0E,EAAKqD,EAAc,GACd3d,EAAI,EAAGC,EAAK0d,EAAchiB,OAAQqE,EAAIC,IAAMD,EAAG,CAChD0a,EAAKiD,EAAc3d,GACnB,IAAIie,EAAgBjkB,KAAKmM,IAAIuU,EAAKJ,GAC9B2D,EAAgBF,IAChB7hB,GAAKoe,EAAKI,GAAM,EACZ4C,EAAsBrD,EAAiBvV,EAAQoW,EAAMV,EAAQle,EAAGC,KAChE2hB,EAAS5hB,EACT6hB,EAAmBE,IAG3B3D,EAAKI,EAOT,OALIwD,MAAMJ,KAGNA,EAASN,EAAYC,IAErBC,GACAA,EAASnT,KAAKuT,EAAQ3hB,EAAG4hB,GAClBL,GAGA,CAACI,EAAQ3hB,EAAG4hB,GCnDpB,SAASI,EAAQlE,EAAiBvV,EAAQ1B,EAAKoX,EAAQgE,GAI1D,IAHA,IAEIC,EAFAC,EAAS,CAACrE,EAAgBvV,GAASuV,EAAgBvV,EAAS,IAC5D6Z,EAAS,GAEN7Z,EAAS0V,EAASpX,EAAK0B,GAAU0V,EAAQ,CAI5C,GAHAmE,EAAO,GAAKtE,EAAgBvV,EAAS0V,GACrCmE,EAAO,GAAKtE,EAAgBvV,EAAS0V,EAAS,GAC9CiE,EAAMD,EAASE,EAAQC,GACnBF,EACA,OAAOA,EAEXC,EAAO,GAAKC,EAAO,GACnBD,EAAO,GAAKC,EAAO,GAEvB,OAAO,EChBJ,SAASC,EAAqBvE,EAAiBvV,EAAQ1B,EAAKoX,EAAQhgB,GACvE,IAAIqkB,EAAoB,eAAsB,iBAAexE,EAAiBvV,EAAQ1B,EAAKoX,GAC3F,QAAK,eAAWhgB,EAAQqkB,OAGpB,eAAerkB,EAAQqkB,KAGvBA,EAAkB,IAAMrkB,EAAO,IAAMqkB,EAAkB,IAAMrkB,EAAO,KAGpEqkB,EAAkB,IAAMrkB,EAAO,IAAMqkB,EAAkB,IAAMrkB,EAAO,IAGjE+jB,EAAelE,EAAiBvV,EAAQ1B,EAAKoX,GAOpD,SAAUkE,EAAQC,GACd,OAAO,eAAkBnkB,EAAQkkB,EAAQC,SA4B1C,SAASG,EAAqBzE,EAAiBvV,EAAQ1B,EAAKoX,EAAQhgB,GACvE,QAAIokB,EAAqBvE,EAAiBvV,EAAQ1B,EAAKoX,EAAQhgB,OAG3DgjB,EAAqBnD,EAAiBvV,EAAQ1B,EAAKoX,EAAQhgB,EAAO,GAAIA,EAAO,QAG7EgjB,EAAqBnD,EAAiBvV,EAAQ1B,EAAKoX,EAAQhgB,EAAO,GAAIA,EAAO,QAG7EgjB,EAAqBnD,EAAiBvV,EAAQ1B,EAAKoX,EAAQhgB,EAAO,GAAIA,EAAO,OAG7EgjB,EAAqBnD,EAAiBvV,EAAQ1B,EAAKoX,EAAQhgB,EAAO,GAAIA,EAAO,OAa9E,SAASukB,EAA0B1E,EAAiBvV,EAAQoW,EAAMV,EAAQhgB,GAC7E,IAAKskB,EAAqBzE,EAAiBvV,EAAQoW,EAAK,GAAIV,EAAQhgB,GAChE,OAAO,EAEX,GAAoB,IAAhB0gB,EAAKnf,OACL,OAAO,EAEX,IAAK,IAAIqE,EAAI,EAAGC,EAAK6a,EAAKnf,OAAQqE,EAAIC,IAAMD,EACxC,GAAIkd,EAAyBjD,EAAiBa,EAAK9a,EAAI,GAAI8a,EAAK9a,GAAIoa,EAAQhgB,KACnEokB,EAAqBvE,EAAiBa,EAAK9a,EAAI,GAAI8a,EAAK9a,GAAIoa,EAAQhgB,GACrE,OAAO,EAInB,OAAO,EC/FJ,SAAS,EAAY6f,EAAiBvV,EAAQ1B,EAAKoX,GACtD,MAAO1V,EAAS1B,EAAMoX,EAAQ,CAC1B,IAAK,IAAIpa,EAAI,EAAGA,EAAIoa,IAAUpa,EAAG,CAC7B,IAAI4e,EAAM3E,EAAgBvV,EAAS1E,GACnCia,EAAgBvV,EAAS1E,GAAKia,EAAgBjX,EAAMoX,EAASpa,GAC7Dia,EAAgBjX,EAAMoX,EAASpa,GAAK4e,EAExCla,GAAU0V,EACVpX,GAAOoX,GCHR,SAASyE,EAAsB5E,EAAiBvV,EAAQ1B,EAAKoX,GAIhE,IADA,IAAI0E,GAAsB,EACjB9e,EAAI,EAAGA,EAAIoa,IAAUpa,EAC1B,GAAIia,EAAgBvV,EAAS1E,KAAOia,EAAgBjX,EAAMoX,EAASpa,GAAI,CACnE8e,GAAsB,EACtB,MAGJA,IACA9b,GAAOoX,GAEX,IAAI2E,EAAaC,EAAiB/E,EAAiBvV,EAAQ1B,EAAKoX,GAK5D6E,EAAkBF,EAAa3E,EAC/B6E,EAAkBva,IAClBua,EAAkBjc,EAAMoX,GAE5B,IAAI8E,EAAcH,EAAa3E,EAC3B8E,GAAelc,IACfkc,EAAcxa,GAElB,IAAIya,EAAKlF,EAAgBgF,GACrBG,EAAKnF,EAAgBgF,EAAkB,GACvCI,EAAKpF,EAAgB8E,GACrBO,EAAKrF,EAAgB8E,EAAa,GAClCQ,EAAKtF,EAAgBiF,GACrBM,EAAKvF,EAAgBiF,EAAc,GACnCO,EAAcJ,EAAKG,EAAKL,EAAKG,EAAKF,EAAKG,GAAMH,EAAKC,EAAKC,EAAKC,EAAKJ,EAAKK,GAC1E,OAAOC,EAAc,EAIzB,SAAST,EAAiB/E,EAAiBvV,EAAQ1B,EAAKoX,GAIpD,IAHA,IAAI2E,GAAc,EACdlL,EAAOmK,IACP0B,EAAa1B,IACRhe,EAAI0E,EAAQ1E,EAAIgD,EAAKhD,GAAKoa,EAAQ,CACvC,IAAIle,EAAI+d,EAAgBja,GACpB7D,EAAI8d,EAAgBja,EAAI,GACxB7D,EAAI0X,IAGJ1X,GAAK0X,GACD3X,GAAKwjB,IAKbX,EAAa/e,EACb6T,EAAO1X,EACPujB,EAAaxjB,IAEjB,OAAO6iB,EAeJ,SAASY,EAAuB1F,EAAiBvV,EAAQoW,EAAMV,EAAQwF,GAE1E,IADA,IAAIC,OAAsBplB,IAAdmlB,GAA0BA,EAC7B5f,EAAI,EAAGC,EAAK6a,EAAKnf,OAAQqE,EAAIC,IAAMD,EAAG,CAC3C,IAAIgD,EAAM8X,EAAK9a,GACX8f,EAAcjB,EAAsB5E,EAAiBvV,EAAQ1B,EAAKoX,GACtE,GAAU,IAANpa,GACA,GAAK6f,GAASC,IAAkBD,IAAUC,EACtC,OAAO,OAIX,GAAKD,IAAUC,IAAkBD,GAASC,EACtC,OAAO,EAGfpb,EAAS1B,EAEb,OAAO,EAwCJ,SAAS+c,EAAkB9F,EAAiBvV,EAAQoW,EAAMV,EAAQwF,GAErE,IADA,IAAIC,OAAsBplB,IAAdmlB,GAA0BA,EAC7B5f,EAAI,EAAGC,EAAK6a,EAAKnf,OAAQqE,EAAIC,IAAMD,EAAG,CAC3C,IAAIgD,EAAM8X,EAAK9a,GACX8f,EAAcjB,EAAsB5E,EAAiBvV,EAAQ1B,EAAKoX,GAClEtE,EAAgB,IAAN9V,EACP6f,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,EACxChK,GACA,EAAmBmE,EAAiBvV,EAAQ1B,EAAKoX,GAErD1V,EAAS1B,EAEb,OAAO0B,E,cC5JP,EAAwC,WACxC,IAAInH,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAwCxC,EAAyB,SAAUK,GAanC,SAASyI,EAAQH,EAAaiV,EAAYqE,GACtC,IAAI1hB,EAAQF,EAAOG,KAAKP,OAASA,KA6CjC,OAxCAM,EAAM2hB,MAAQ,GAKd3hB,EAAM4hB,4BAA8B,EAKpC5hB,EAAM6hB,mBAAqB,KAK3B7hB,EAAM+M,WAAa,EAKnB/M,EAAMsd,mBAAqB,EAK3Btd,EAAM8hB,mBAAqB,EAK3B9hB,EAAM+hB,yBAA2B,UACd5lB,IAAfkhB,GAA4BqE,GAC5B1hB,EAAMwd,mBAAmBH,EACI,GAC7Brd,EAAM2hB,MAAQD,GAGd1hB,EAAMsI,eAC6D,EAAe+U,GAE/Erd,EAqNX,OA/QA,EAAUuI,EAASzI,GAiEnByI,EAAQ3I,UAAUoiB,iBAAmB,SAAUC,GACtCviB,KAAKic,gBAIN,eAAOjc,KAAKic,gBAAiBsG,EAAWC,sBAHxCxiB,KAAKic,gBAAkBsG,EAAWC,qBAAqB7Z,QAK3D3I,KAAKiiB,MAAM1V,KAAKvM,KAAKic,gBAAgBte,QACrCqC,KAAKgf,WAOTnW,EAAQ3I,UAAU6d,MAAQ,WACtB,OAAO,IAAIlV,EAAQ7I,KAAKic,gBAAgBtT,QAAS3I,KAAKge,OAAQhe,KAAKiiB,MAAMtZ,UAS7EE,EAAQ3I,UAAU+d,eAAiB,SAAU/f,EAAGC,EAAGke,EAAcY,GAC7D,OAAIA,EAAqB,eAAyBjd,KAAK9C,YAAagB,EAAGC,GAC5D8e,GAEPjd,KAAK4d,mBAAqB5d,KAAK6U,gBAC/B7U,KAAKqN,UAAYrR,KAAK8Q,KAAK+P,EAAqB7c,KAAKic,gBAAiB,EAAGjc,KAAKiiB,MAAOjiB,KAAKoc,OAAQ,IAClGpc,KAAK4d,kBAAoB5d,KAAK6U,eAE3B0I,EAAwBvd,KAAKic,gBAAiB,EAAGjc,KAAKiiB,MAAOjiB,KAAKoc,OAAQpc,KAAKqN,WAAW,EAAMnP,EAAGC,EAAGke,EAAcY,KAO/HpU,EAAQ3I,UAAUf,WAAa,SAAUjB,EAAGC,GACxC,OAAOmhB,EAAsBtf,KAAKyiB,6BAA8B,EAAGziB,KAAKiiB,MAAOjiB,KAAKoc,OAAQle,EAAGC,IAOnG0K,EAAQ3I,UAAUge,QAAU,WACxB,OAAO,EAAgBle,KAAKyiB,6BAA8B,EAAGziB,KAAKiiB,MAAOjiB,KAAKoc,SAelFvT,EAAQ3I,UAAUie,eAAiB,SAAUyD,GACzC,IAAI3F,EAQJ,YAPkBxf,IAAdmlB,GACA3F,EAAkBjc,KAAKyiB,6BAA6B9Z,QACpDoZ,EAAkB9F,EAAiB,EAAGjc,KAAKiiB,MAAOjiB,KAAKoc,OAAQwF,IAG/D3F,EAAkBjc,KAAKic,gBAEpB,OAAAmC,EAAA,MAAwBnC,EAAiB,EAAGjc,KAAKiiB,MAAOjiB,KAAKoc,SAKxEvT,EAAQ3I,UAAUwiB,QAAU,WACxB,OAAO1iB,KAAKiiB,OAKhBpZ,EAAQ3I,UAAUyiB,qBAAuB,WACrC,GAAI3iB,KAAKkiB,4BAA8BliB,KAAK6U,cAAe,CACvD,IAAI+N,EAAa,eAAU5iB,KAAK9C,aAChC8C,KAAKmiB,mBAAqB5C,EAAwBvf,KAAKyiB,6BAA8B,EAAGziB,KAAKiiB,MAAOjiB,KAAKoc,OAAQwG,EAAY,GAC7H5iB,KAAKkiB,2BAA6BliB,KAAK6U,cAE3C,OAAO7U,KAAKmiB,oBAQhBtZ,EAAQ3I,UAAU2iB,iBAAmB,WACjC,OAAO,IAAIC,EAAA,KAAM9iB,KAAK2iB,uBAAwBnE,EAAA,KAAeuE,MASjEla,EAAQ3I,UAAU8iB,mBAAqB,WACnC,OAAOhjB,KAAKiiB,MAAMtkB,QAYtBkL,EAAQ3I,UAAU+iB,cAAgB,SAAU3F,GACxC,OAAIA,EAAQ,GAAKtd,KAAKiiB,MAAMtkB,QAAU2f,EAC3B,KAEJ,IAAI,EAAWtd,KAAKic,gBAAgBtT,MAAgB,IAAV2U,EAAc,EAAItd,KAAKiiB,MAAM3E,EAAQ,GAAItd,KAAKiiB,MAAM3E,IAAStd,KAAKge,SAOvHnV,EAAQ3I,UAAUgjB,eAAiB,WAM/B,IALA,IAAIlF,EAAShe,KAAKge,OACd/B,EAAkBjc,KAAKic,gBACvBa,EAAO9c,KAAKiiB,MACZkB,EAAc,GACdzc,EAAS,EACJ1E,EAAI,EAAGC,EAAK6a,EAAKnf,OAAQqE,EAAIC,IAAMD,EAAG,CAC3C,IAAIgD,EAAM8X,EAAK9a,GACXugB,EAAa,IAAI,EAAWtG,EAAgBtT,MAAMjC,EAAQ1B,GAAMgZ,GACpEmF,EAAY5W,KAAKgW,GACjB7b,EAAS1B,EAEb,OAAOme,GAKXta,EAAQ3I,UAAUuiB,2BAA6B,WAC3C,GAAIziB,KAAKoiB,mBAAqBpiB,KAAK6U,cAAe,CAC9C,IAAIoH,EAAkBjc,KAAKic,gBACvB0F,EAAuB1F,EAAiB,EAAGjc,KAAKiiB,MAAOjiB,KAAKoc,QAC5Dpc,KAAKqiB,yBAA2BpG,GAGhCjc,KAAKqiB,yBAA2BpG,EAAgBtT,QAChD3I,KAAKqiB,yBAAyB1kB,OAASokB,EAAkB/hB,KAAKqiB,yBAA0B,EAAGriB,KAAKiiB,MAAOjiB,KAAKoc,SAEhHpc,KAAKoiB,kBAAoBpiB,KAAK6U,cAElC,OAAO7U,KAAKqiB,0BAOhBxZ,EAAQ3I,UAAUme,8BAAgC,SAAUC,GACxD,IAAIC,EAA4B,GAC5B6E,EAAiB,GAErB,OADA7E,EAA0B5gB,OAAS,eAAcqC,KAAKic,gBAAiB,EAAGjc,KAAKiiB,MAAOjiB,KAAKoc,OAAQpgB,KAAK8Q,KAAKwR,GAAmBC,EAA2B,EAAG6E,GACvJ,IAAIva,EAAQ0V,EAA2BC,EAAA,KAAeC,GAAI2E,IAOrEva,EAAQ3I,UAAUwe,QAAU,WACxB,OAAOC,EAAA,KAAa0E,SAQxBxa,EAAQ3I,UAAU2e,iBAAmB,SAAUziB,GAC3C,OAAOukB,EAA0B3gB,KAAKyiB,6BAA8B,EAAGziB,KAAKiiB,MAAOjiB,KAAKoc,OAAQhgB,IAQpGyM,EAAQ3I,UAAU0I,eAAiB,SAAUF,EAAaiV,GACtD3d,KAAK8e,UAAUnB,EAAYjV,EAAa,GACnC1I,KAAKic,kBACNjc,KAAKic,gBAAkB,IAE3B,IAAIa,EAAO,OAAAiC,EAAA,MAAwB/e,KAAKic,gBAAiB,EAAGvT,EAAa1I,KAAKoc,OAAQpc,KAAKiiB,OAC3FjiB,KAAKic,gBAAgBte,OAAyB,IAAhBmf,EAAKnf,OAAe,EAAImf,EAAKA,EAAKnf,OAAS,GACzEqC,KAAKgf,WAEFnW,EAhRiB,CAiR1BoW,EAAA,MACa,SA+BR,SAASqE,EAAWlnB,GACvB,IAAIuZ,EAAOvZ,EAAO,GACdyZ,EAAOzZ,EAAO,GACdwZ,EAAOxZ,EAAO,GACd0Z,EAAO1Z,EAAO,GACd6f,EAAkB,CAClBtG,EACAE,EACAF,EACAG,EACAF,EACAE,EACAF,EACAC,EACAF,EACAE,GAEJ,OAAO,IAAI,EAAQoG,EAAiBuC,EAAA,KAAeC,GAAI,CACnDxC,EAAgBte,W,4KC/PjB,SAAS4lB,EAAqB5P,EAAY6P,GACzCA,GACAA,EAAcC,QAGlB,IADA,IAAIC,EAAQ/P,EAAWgQ,eACdloB,EAAIioB,EAAM/lB,OAAS,EAAGlC,GAAK,IAAKA,EAGrC,IAFA,IAAImoB,EAAOF,EAAMjoB,GACbooB,EAAcD,EAAKF,MACd1hB,EAAI,EAAGC,EAAK4hB,EAAYlmB,OAAQqE,EAAIC,EAAID,GAAK,EAClDwhB,EAAgBK,EAAY7hB,GAAG8hB,gBAAgBD,EAAY7hB,EAAI,GAAI6hB,EAAY7hB,EAAI,GAAI4hB,EAAK/M,QAAS2M,GAI7G,OADAE,EAAM/lB,OAAS,EACR6lB,E,gBCzHPlkB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA4BxC,EAA6B,SAAUK,GAKvC,SAAS2jB,EAAYrlB,GACjB,IAAI4B,EAAQF,EAAOG,KAAKP,OAASA,KAUjC,OALAM,EAAMiH,KAAO7I,EAIb4B,EAAM0jB,eAAiB,KAChB1jB,EAoJX,OAnKAhB,EAAUykB,EAAa3jB,GAsBvB2jB,EAAY7jB,UAAU+jB,oBAAsB,SAAUjjB,EAAM2S,GACxD,kBAMJoQ,EAAY7jB,UAAUgkB,oBAAsB,SAAUvQ,GAClD,IAAIE,EAAYF,EAAWE,UACvBsQ,EAA6BxQ,EAAWwQ,2BACxCC,EAA6BzQ,EAAWyQ,2BAC5C,eAAiBD,EAA4BxQ,EAAWnN,KAAK,GAAK,EAAGmN,EAAWnN,KAAK,GAAK,EAAG,EAAIqN,EAAUtJ,YAAa,EAAIsJ,EAAUtJ,YAAasJ,EAAUtN,UAAWsN,EAAUnY,OAAO,IAAKmY,EAAUnY,OAAO,IAC/M,eAAY0oB,EAA4BD,IAkB5CJ,EAAY7jB,UAAUmkB,2BAA6B,SAAUhjB,EAAYsS,EAAY2Q,EAAcC,EAAcnE,EAAUoE,EAASC,EAAaC,GAC7I,IAAIC,EACA9Q,EAAYF,EAAWE,UAO3B,SAASwQ,EAA2BO,EAASC,EAASC,GAClD,OAAO1E,EAAS7f,KAAKikB,EAASK,EAASD,EAAUE,EAAQ,MAE7D,IAAI5pB,EAAa2Y,EAAU3Y,WACvB6pB,EAAuB,eAAM1jB,EAAWsH,QAASzN,GACjD8pB,EAAU,CAAC,CAAC,EAAG,IACnB,GAAI9pB,EAAW+pB,YAAcV,EAAc,CACvC,IAAI3oB,EAAmBV,EAAWgC,YAC9BpB,EAAa,eAASF,GAC1BopB,EAAQzY,KAAK,EAAEzQ,EAAY,GAAI,CAACA,EAAY,IAEhD,IAEIopB,EAFAC,EAAcxR,EAAWa,iBACzB4Q,EAAYD,EAAYxnB,OAExBqC,KAAKgkB,iBACLkB,EAAsBllB,KAAKgkB,eAAeqB,MAAM3mB,KAAI,SAAU4mB,GAC1D,OAAOA,EAAMC,UAIrB,IADA,IAAIC,EAAW,GACNxjB,EAAI,EAAGA,EAAIgjB,EAAQrnB,OAAQqE,IAChC,IAAK,IAAIyjB,EAAIL,EAAY,EAAGK,GAAK,IAAKA,EAAG,CACrC,IAAIlR,EAAa4Q,EAAYM,GACzBX,EAA4DvQ,EAAgB,MAChF,GAAIuQ,EAAMY,eACN,eAAOnR,EAAYV,IACnB4Q,EAAYlkB,KAAKmkB,EAAUI,GAAQ,CACnC,IAAIa,EAAgBb,EAAMc,cACtBC,EAASf,EAAM/Q,YACnB,GAAI4R,GAAiBE,EAAQ,CACzB,IAAInd,EAAcmd,EAAOC,WACnBf,EACA1jB,EACF0kB,EAAa1B,EAA2BxV,KAAK,KAAM0F,EAAWqQ,SAClEY,EAAS,GAAK9c,EAAY,GAAKsc,EAAQhjB,GAAG,GAC1CwjB,EAAS,GAAK9c,EAAY,GAAKsc,EAAQhjB,GAAG,GAC1C2iB,EAASgB,EAActB,2BAA2BmB,EAAU7R,EAAY2Q,EAAcyB,EAAYb,GAEtG,GAAIP,EACA,OAAOA,KAqB3BZ,EAAY7jB,UAAU8lB,oBAAsB,SAAUrf,EAAOgN,EAAY2Q,EAAclE,EAAUqE,GAC7F,OAAO,kBAeXV,EAAY7jB,UAAU+lB,uBAAyB,SAAU5kB,EAAYsS,EAAY2Q,EAAcC,EAAcE,EAAaD,GACtH,IAAI0B,EAAalmB,KAAKqkB,2BAA2BhjB,EAAYsS,EAAY2Q,EAAcC,EAAc,OAAMvkB,KAAMykB,EAAaD,GAC9H,YAAsB/nB,IAAfypB,GAKXnC,EAAY7jB,UAAUoE,OAAS,WAC3B,OAAOtE,KAAKuH,MAMhBwc,EAAY7jB,UAAUoU,YAAc,SAAUX,GAC1C3T,KAAKgkB,eAAiBT,EAAqB5P,EAAY3T,KAAKgkB,iBAMhED,EAAY7jB,UAAUimB,wBAA0B,SAAUxS,GAClD,OAAeqH,kBACfrH,EAAWyH,oBAAoB7O,KAAK6Z,IAGrCrC,EApKqB,CAqK9Bhb,EAAA,MAKF,SAASqd,EAAgB1nB,EAAKiV,GAC1B,OAAe0S,SAEJ,Q,gGCzMX,EAAwC,WACxC,IAAI9mB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA+BxC,EAAsC,SAAUK,GAKhD,SAASkmB,EAAqB5nB,GAC1B,IAAI4B,EAAQF,EAAOG,KAAKP,KAAMtB,IAAQsB,KAItCM,EAAMimB,uBAAyB,eAAO,OAAcC,EAAA,KAAgBC,eAAgB/nB,EAAIgoB,WAAW7X,KAAKnQ,IAKxG4B,EAAM4G,SAAWxE,SAASyE,cAAc,OACxC,IAAIC,EAAQ9G,EAAM4G,SAASE,MAC3BA,EAAMC,SAAW,WACjBD,EAAM3J,MAAQ,OACd2J,EAAM5J,OAAS,OACf4J,EAAMuf,OAAS,IACfrmB,EAAM4G,SAASF,UAAY,OAAqB,aAChD,IAAIoT,EAAY1b,EAAIqR,cAYpB,OAXAqK,EAAUwM,aAAatmB,EAAM4G,SAAUkT,EAAUyM,YAAc,MAK/DvmB,EAAMwmB,UAAY,GAKlBxmB,EAAMymB,kBAAmB,EAClBzmB,EAoGX,OArIA,EAAUgmB,EAAsBlmB,GAuChCkmB,EAAqBpmB,UAAU+jB,oBAAsB,SAAUjjB,EAAM2S,GACjE,IAAIjV,EAAMsB,KAAKsE,SACf,GAAI5F,EAAIsoB,YAAYhmB,GAAO,CACvB,IAAIimB,EAAU,IAAI,OAAYjmB,OAAMvE,EAAWkX,GAC/CjV,EAAIoL,cAAcmd,KAG1BX,EAAqBpmB,UAAUwH,gBAAkB,WAC7C,eAAc1H,KAAKumB,wBACnBvmB,KAAKkH,SAASggB,WAAW7e,YAAYrI,KAAKkH,UAC1C9G,EAAOF,UAAUwH,gBAAgBnH,KAAKP,OAM1CsmB,EAAqBpmB,UAAUoU,YAAc,SAAUX,GACnD,GAAKA,EAAL,CAOA3T,KAAKkkB,oBAAoBvQ,GACzB3T,KAAKikB,oBAAoB,OAAgBkD,WAAYxT,GACrD,IAAIa,EAAmBb,EAAWa,iBAAiBoD,MAAK,SAAUwP,EAAG3nB,GACjE,OAAO2nB,EAAET,OAASlnB,EAAEknB,UAEpB9S,EAAYF,EAAWE,UAC3B7T,KAAK8mB,UAAUnpB,OAAS,EAExB,IADA,IAAI0pB,EAAkB,KACbrlB,EAAI,EAAGC,EAAKuS,EAAiB7W,OAAQqE,EAAIC,IAAMD,EAAG,CACvD,IAAIuS,EAAaC,EAAiBxS,GAElC,GADA2R,EAAWc,WAAazS,EACnB,eAAOuS,EAAYV,KACnBU,EAAW+S,aAAe,OAAYC,OACnChT,EAAW+S,aAAe,OAAYE,WAF9C,CAKA,IAAI1C,EAAQvQ,EAAWuQ,MACnB2C,EAAU3C,EAAM7U,OAAO0D,EAAY0T,GAClCI,GAGDA,IAAYJ,IACZrnB,KAAK8mB,UAAUva,KAAKkb,GACpBJ,EAAkBI,IAG1BrnB,EAAOF,UAAUoU,YAAY/T,KAAKP,KAAM2T,GACxC,eAAgB3T,KAAKkH,SAAUlH,KAAK8mB,WACpC9mB,KAAKikB,oBAAoB,OAAgByD,YAAa/T,GACjD3T,KAAK+mB,mBACN/mB,KAAKkH,SAASE,MAAMugB,QAAU,GAC9B3nB,KAAK+mB,kBAAmB,GAE5B/mB,KAAKmmB,wBAAwBxS,QAvCrB3T,KAAK+mB,mBACL/mB,KAAKkH,SAASE,MAAMugB,QAAU,OAC9B3nB,KAAK+mB,kBAAmB,IAoDpCT,EAAqBpmB,UAAU8lB,oBAAsB,SAAUrf,EAAOgN,EAAY2Q,EAAclE,EAAUqE,GAItG,IAHA,IAAI5Q,EAAYF,EAAWE,UACvBsR,EAAcxR,EAAWa,iBACzB4Q,EAAYD,EAAYxnB,OACnBqE,EAAIojB,EAAY,EAAGpjB,GAAK,IAAKA,EAAG,CACrC,IAAIuS,EAAa4Q,EAAYnjB,GACzB8iB,EAAQvQ,EAAWuQ,MACvB,GAAIA,EAAMY,eACN,eAAOnR,EAAYV,IACnB4Q,EAAYK,GAAQ,CACpB,IAAIa,EAAgBb,EAAMc,cACtBgC,EAAOjC,EAAckC,eAAelhB,EAAOgN,EAAY2Q,GAC3D,GAAIsD,EAAM,CACN,IAAIjD,EAASvE,EAAS0E,EAAO8C,GAC7B,GAAIjD,EACA,OAAOA,MAOpB2B,EAtI8B,CAuIvC,GACawB,EAAA,E,oFCvKX,EAAwC,WACxC,IAAIvoB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAwDxCgoB,EAAW,CACXC,OAAQ,UAUR,EAA4B,SAAU5nB,GAKtC,SAAS6nB,EAAWjrB,GAChB,IAAIsD,EAAQN,KACRQ,EAAUxD,GAAe,GACzByU,EAAsC,cAAD,CAAQ,GAAIjR,UAC9CiR,EAAYyW,OACnB,IAAIA,EAAS1nB,EAAQ0nB,OAyBrB,OAxBA5nB,EAAQF,EAAOG,KAAKP,KAAMyR,IAAgBzR,KAK1CM,EAAM6nB,oBAAsB,GAK5B7nB,EAAM8nB,cAAgB,GACtB9nB,EAAM+nB,iBAAiB,eAAmBN,EAASC,QAAS1nB,EAAMgoB,sBAC9DJ,EACItqB,MAAMigB,QAAQqK,GACdA,EAAS,IAAIvX,EAAA,KAAWuX,EAAOvf,QAAS,CAAE4f,QAAQ,IAGlD,eAAuD,oBAAvB,EAAiB,SAAkB,IAIvEL,EAAS,IAAIvX,EAAA,UAAWlU,EAAW,CAAE8rB,QAAQ,IAEjDjoB,EAAMkoB,UAAUN,GACT5nB,EA0HX,OA5JA,EAAU2nB,EAAY7nB,GAuCtB6nB,EAAW/nB,UAAUuoB,mBAAqB,WACtCzoB,KAAKgf,WAKTiJ,EAAW/nB,UAAUooB,qBAAuB,WACxCtoB,KAAKmoB,oBAAoBhI,QAAQ,QACjCngB,KAAKmoB,oBAAoBxqB,OAAS,EAClC,IAAIuqB,EAASloB,KAAK0oB,YAElB,IAAK,IAAIC,KADT3oB,KAAKmoB,oBAAoB5b,KAAK,eAAO2b,EAAQU,EAAA,KAAoBC,IAAK7oB,KAAK8oB,iBAAkB9oB,MAAO,eAAOkoB,EAAQU,EAAA,KAAoBG,OAAQ/oB,KAAKgpB,oBAAqBhpB,OAC1JA,KAAKooB,cAChBpoB,KAAKooB,cAAcO,GAAIxI,QAAQ,QAEnC,eAAMngB,KAAKooB,eAEX,IADA,IAAIa,EAAcf,EAAOgB,WAChBlnB,EAAI,EAAGC,EAAKgnB,EAAYtrB,OAAQqE,EAAIC,EAAID,IAAK,CAClD,IAAI8iB,EAAQmE,EAAYjnB,GACxBhC,KAAKooB,cAAc,eAAOtD,IAAU,CAChC,eAAOA,EAAO0B,EAAA,KAAgBC,eAAgBzmB,KAAKyoB,mBAAoBzoB,MACvE,eAAO8kB,EAAO,OAAUqE,OAAQnpB,KAAKyoB,mBAAoBzoB,OAGjEA,KAAKgf,WAMTiJ,EAAW/nB,UAAU4oB,iBAAmB,SAAUM,GAC9C,IAAItE,EAAoDsE,EAAuB,QAC/EppB,KAAKooB,cAAc,eAAOtD,IAAU,CAChC,eAAOA,EAAO0B,EAAA,KAAgBC,eAAgBzmB,KAAKyoB,mBAAoBzoB,MACvE,eAAO8kB,EAAO,OAAUqE,OAAQnpB,KAAKyoB,mBAAoBzoB,OAE7DA,KAAKgf,WAMTiJ,EAAW/nB,UAAU8oB,oBAAsB,SAAUI,GACjD,IAAItE,EAAoDsE,EAAuB,QAC3E5qB,EAAM,eAAOsmB,GACjB9kB,KAAKooB,cAAc5pB,GAAK2hB,QAAQ,eACzBngB,KAAKooB,cAAc5pB,GAC1BwB,KAAKgf,WAUTiJ,EAAW/nB,UAAUwoB,UAAY,WAC7B,OAAwF1oB,KAAK+R,IAAIgW,EAASC,SAU9GC,EAAW/nB,UAAUsoB,UAAY,SAAUN,GACvCloB,KAAKiS,IAAI8V,EAASC,OAAQE,IAM9BD,EAAW/nB,UAAUmpB,eAAiB,SAAUC,GAC5C,IAAIC,OAAsB9sB,IAAd6sB,EAA0BA,EAAY,GAIlD,OAHAtpB,KAAK0oB,YAAYvI,SAAQ,SAAU2E,GAC/BA,EAAMuE,eAAeE,MAElBA,GAMXtB,EAAW/nB,UAAUspB,oBAAsB,SAAUC,GACjD,IAAIC,OAAwBjtB,IAAfgtB,EAA2BA,EAAa,GACjDE,EAAMD,EAAO/rB,OACjBqC,KAAK0oB,YAAYvI,SAAQ,SAAU2E,GAC/BA,EAAM0E,oBAAoBE,MAG9B,IADA,IAAIE,EAAgB5pB,KAAK6pB,gBAChB7nB,EAAI2nB,EAAK1nB,EAAKynB,EAAO/rB,OAAQqE,EAAIC,EAAID,IAAK,CAC/C,IAAIuS,EAAamV,EAAO1nB,GACxBuS,EAAWsC,SAAW+S,EAAc/S,QACpCtC,EAAWuV,QAAUvV,EAAWuV,SAAWF,EAAcE,QACzDvV,EAAWjX,cAAgBtB,KAAKiM,IAAIsM,EAAWjX,cAAessB,EAActsB,eAC5EiX,EAAWwV,cAAgB/tB,KAAK0B,IAAI6W,EAAWwV,cAAeH,EAAcG,eAC5ExV,EAAWnX,QAAUpB,KAAK0B,IAAI6W,EAAWnX,QAASwsB,EAAcxsB,SAChEmX,EAAWlX,QAAUrB,KAAKiM,IAAIsM,EAAWlX,QAASusB,EAAcvsB,cACnCZ,IAAzBmtB,EAAcxtB,cACYK,IAAtB8X,EAAWnY,OACXmY,EAAWnY,OAAS,eAAgBmY,EAAWnY,OAAQwtB,EAAcxtB,QAGrEmY,EAAWnY,OAASwtB,EAAcxtB,QAI9C,OAAOstB,GAKXzB,EAAW/nB,UAAU8pB,eAAiB,WAClC,OAAO,OAAYzC,OAEhBU,EA7JoB,CA8J7BgC,EAAA,MACa,I,YClOX,EAAwC,WACxC,IAAI1qB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAsBxCmqB,EAA0B,SAAU9pB,GAOpC,SAAS8pB,EAASlpB,EAAMtC,EAAKyrB,GACzB,IAAI7pB,EAAQF,EAAOG,KAAKP,KAAMgB,IAAShB,KAavC,OAPAM,EAAM5B,IAAMA,EAMZ4B,EAAMqT,gBAAgClX,IAAnB0tB,EAA+BA,EAAiB,KAC5D7pB,EAEX,OAtBA,EAAU4pB,EAAU9pB,GAsBb8pB,EAvBkB,CAwB3B,QACa,IC/CX,EAAwC,WACxC,IAAI3qB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAuBxCqqB,EAAiC,SAAUhqB,GAS3C,SAASgqB,EAAgBppB,EAAMtC,EAAKyD,EAAekoB,EAAcF,GAC7D,IAAI7pB,EAAQF,EAAOG,KAAKP,KAAMgB,EAAMtC,EAAKyrB,IAAmBnqB,KA0B5D,OAnBAM,EAAM6B,cAAgBA,EAKtB7B,EAAMgqB,OAAS,KAKfhqB,EAAMiqB,YAAc,KAQpBjqB,EAAMkqB,cAA4B/tB,IAAjB4tB,GAA6BA,EACvC/pB,EAyDX,OA5FA,EAAU8pB,EAAiBhqB,GAqC3BV,OAAO+qB,eAAeL,EAAgBlqB,UAAW,QAAS,CAMtD6R,IAAK,WAID,OAHK/R,KAAKsqB,SACNtqB,KAAKsqB,OAAStqB,KAAKtB,IAAIgsB,cAAc1qB,KAAKmC,gBAEvCnC,KAAKsqB,QAEhBrY,IAAK,SAAUtL,GACX3G,KAAKsqB,OAAS3jB,GAElBgkB,YAAY,EACZC,cAAc,IAElBlrB,OAAO+qB,eAAeL,EAAgBlqB,UAAW,aAAc,CAO3D6R,IAAK,WAID,OAHK/R,KAAKuqB,cACNvqB,KAAKuqB,YAAcvqB,KAAKtB,IAAImsB,uBAAuB7qB,KAAK2G,QAErD3G,KAAKuqB,aAEhBtY,IAAK,SAAU5Q,GACXrB,KAAKuqB,YAAclpB,GAEvBspB,YAAY,EACZC,cAAc,IAOlBR,EAAgBlqB,UAAUuB,eAAiB,WACvCrB,EAAOF,UAAUuB,eAAelB,KAAKP,MACrCA,KAAKmC,cAAcV,kBAOvB2oB,EAAgBlqB,UAAU4qB,gBAAkB,WACxC1qB,EAAOF,UAAU4qB,gBAAgBvqB,KAAKP,MACtCA,KAAKmC,cAAc2oB,mBAEhBV,EA7FyB,CA8FlC,GACa,I,wBC/GA,GACXW,YAAa,cACbC,YAAa,cACbC,UAAW,YACXC,YAAa,cACbC,WAAY,aACZC,aAAc,eACdC,aAAc,eACdC,cAAe,iBCZf,EAAwC,WACxC,IAAI/rB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAoBxC,EAAwC,SAAUK,GAMlD,SAASmrB,EAAuB7sB,EAAK8sB,GACjC,IAAIlrB,EAAQF,EAAOG,KAAKP,KAAMtB,IAAQsB,KAMtCM,EAAMiH,KAAO7I,EAKb4B,EAAMmrB,gBAKNnrB,EAAMorB,WAAY,EAKlBprB,EAAMqrB,kBAAoB,GAK1BrrB,EAAMsrB,eAAiBJ,EACjBA,EAAgB,OAChB,OAONlrB,EAAMurB,MAAQ,KACd,IAAIpE,EAAUnnB,EAAMiH,KAAKwI,cAgCzB,OA3BAzP,EAAMwrB,gBAAkB,EAKxBxrB,EAAMyrB,gBAAkB,GACxBzrB,EAAM4G,SAAWugB,EAKjBnnB,EAAM0rB,wBAA0B,eAAOvE,EAAS,EAAiBuD,YAAa1qB,EAAM2rB,mBAAoB3rB,GAKxGA,EAAM4rB,0BAKN5rB,EAAM6rB,oBAAsB,eAAO1E,EAAS,EAAiBsD,YAAazqB,EAAM8rB,YAAa9rB,GAI7FA,EAAM+rB,sBAAwB/rB,EAAMgsB,iBAAiBzd,KAAKvO,GAC1DA,EAAM4G,SAASmhB,iBAAiB,OAAUkE,UAAWjsB,EAAM+rB,wBAAuB,QAA0B,CAAEG,SAAS,IAChHlsB,EAyLX,OAnQA,EAAUirB,EAAwBnrB,GAiFlCmrB,EAAuBrrB,UAAUusB,cAAgB,SAAUnpB,GACvD,IAAIopB,EAAW,IAAI,EAAgBzrB,EAAA,KAAoB0rB,MAAO3sB,KAAKuH,KAAMjE,GACzEtD,KAAK8J,cAAc4iB,QACUjwB,IAAzBuD,KAAKyrB,iBAEL9c,aAAa3O,KAAKyrB,iBAClBzrB,KAAKyrB,qBAAkBhvB,EACvBiwB,EAAW,IAAI,EAAgBzrB,EAAA,KAAoBC,SAAUlB,KAAKuH,KAAMjE,GACxEtD,KAAK8J,cAAc4iB,IAInB1sB,KAAKyrB,gBAAkB7c,WAAW,WAC9B5O,KAAKyrB,qBAAkBhvB,EACvB,IAAIiwB,EAAW,IAAI,EAAgBzrB,EAAA,KAAoB2rB,YAAa5sB,KAAKuH,KAAMjE,GAC/EtD,KAAK8J,cAAc4iB,IACrB7d,KAAK7O,MAAO,MAUtBurB,EAAuBrrB,UAAU2sB,sBAAwB,SAAUvpB,GAC/D,IAAIxB,EAAQwB,EACRxB,EAAMd,MAAQC,EAAA,KAAoBgqB,WAClCnpB,EAAMd,MAAQC,EAAA,KAAoBqqB,qBAC3BtrB,KAAK+rB,gBAAgBjqB,EAAMgrB,WAE7BhrB,EAAMd,MAAQC,EAAA,KAAoB+pB,cACvChrB,KAAK+rB,gBAAgBjqB,EAAMgrB,YAAa,GAE5C9sB,KAAK8rB,gBAAkBpsB,OAAOiY,KAAK3X,KAAK+rB,iBAAiBpuB,QAO7D4tB,EAAuBrrB,UAAU6sB,iBAAmB,SAAUzpB,GAC1DtD,KAAK6sB,sBAAsBvpB,GAC3B,IAAIopB,EAAW,IAAI,EAAgBzrB,EAAA,KAAoBgqB,UAAWjrB,KAAKuH,KAAMjE,GAC7EtD,KAAK8J,cAAc4iB,GAOdA,EAASM,oBACThtB,KAAK0rB,YACN1rB,KAAKitB,qBAAqB3pB,IAC1BtD,KAAKysB,cAAczsB,KAAK6rB,OAEC,IAAzB7rB,KAAK8rB,kBACL9rB,KAAK2rB,kBAAkBxL,QAAQ,QAC/BngB,KAAK2rB,kBAAkBhuB,OAAS,EAChCqC,KAAK0rB,WAAY,EACjB1rB,KAAK6rB,MAAQ,OASrBN,EAAuBrrB,UAAU+sB,qBAAuB,SAAU3pB,GAC9D,OAA+B,IAAxBA,EAAaN,QAOxBuoB,EAAuBrrB,UAAU+rB,mBAAqB,SAAU3oB,GAC5DtD,KAAK6sB,sBAAsBvpB,GAC3B,IAAIopB,EAAW,IAAI,EAAgBzrB,EAAA,KAAoB+pB,YAAahrB,KAAKuH,KAAMjE,GAC/EtD,KAAK8J,cAAc4iB,GACnB1sB,KAAK6rB,MAAQvoB,EACyB,IAAlCtD,KAAK2rB,kBAAkBhuB,SACvBqC,KAAK2rB,kBAAkBpf,KAAK,eAAO7J,SAAUzB,EAAA,KAAoB8pB,YAAa/qB,KAAKktB,mBAAoBltB,MAAO,eAAO0C,SAAUzB,EAAA,KAAoBgqB,UAAWjrB,KAAK+sB,iBAAkB/sB,MAcrL,eAAOA,KAAKkH,SAAUjG,EAAA,KAAoBqqB,cAAetrB,KAAK+sB,iBAAkB/sB,OAC5EA,KAAKkH,SAASimB,aACdntB,KAAKkH,SAASimB,gBAAkBzqB,UAChC1C,KAAK2rB,kBAAkBpf,KAAK,eAAOvM,KAAKkH,SAASimB,cAAelsB,EAAA,KAAoBgqB,UAAWjrB,KAAK+sB,iBAAkB/sB,SASlIurB,EAAuBrrB,UAAUgtB,mBAAqB,SAAU5pB,GAI5D,GAAItD,KAAKotB,UAAU9pB,GAAe,CAC9BtD,KAAK0rB,WAAY,EACjB,IAAIgB,EAAW,IAAI,EAAgBzrB,EAAA,KAAoBosB,YAAartB,KAAKuH,KAAMjE,EAActD,KAAK0rB,WAClG1rB,KAAK8J,cAAc4iB,KAU3BnB,EAAuBrrB,UAAUksB,YAAc,SAAU9oB,GACrDtD,KAAKksB,0BAA4B5oB,EACjC,IAAIknB,KAAcxqB,KAAK6rB,QAAS7rB,KAAKotB,UAAU9pB,IAC/CtD,KAAK8J,cAAc,IAAI,EAAgBxG,EAAatC,KAAMhB,KAAKuH,KAAMjE,EAAcknB,KAUvFe,EAAuBrrB,UAAUosB,iBAAmB,SAAUxqB,GAGrD9B,KAAKksB,4BACNlsB,KAAKksB,0BAA0BoB,kBAC/BxrB,EAAML,kBASd8pB,EAAuBrrB,UAAUktB,UAAY,SAAU9pB,GACnD,OAAQtD,KAAK0rB,WACT1vB,KAAKmM,IAAI7E,EAAauM,QAAU7P,KAAK6rB,MAAMhc,SACvC7P,KAAK4rB,gBACT5vB,KAAKmM,IAAI7E,EAAasM,QAAU5P,KAAK6rB,MAAMjc,SAAW5P,KAAK4rB,gBAKnEL,EAAuBrrB,UAAUwH,gBAAkB,WAC3C1H,KAAKmsB,sBACL,eAAcnsB,KAAKmsB,qBACnBnsB,KAAKmsB,oBAAsB,MAE/BnsB,KAAKkH,SAASqmB,oBAAoB,OAAUhB,UAAWvsB,KAAKqsB,uBACxDrsB,KAAKgsB,0BACL,eAAchsB,KAAKgsB,yBACnBhsB,KAAKgsB,wBAA0B,MAEnChsB,KAAK2rB,kBAAkBxL,QAAQ,QAC/BngB,KAAK2rB,kBAAkBhuB,OAAS,EAChCqC,KAAKkH,SAAW,KAChB9G,EAAOF,UAAUwH,gBAAgBnH,KAAKP,OAEnCurB,EApQgC,CAqQzC,QACa,I,YCvRA,IACXiC,WAAY,aACZC,KAAM,OACNC,OAAQ,SACRC,KAAM,QCFCC,GAAO5N,IAad,GAA+B,WAK/B,SAAS6N,EAAcC,EAAkBC,GAKrC/tB,KAAKguB,kBAAoBF,EAKzB9tB,KAAKiuB,aAAeF,EAKpB/tB,KAAKkuB,UAAY,GAKjBluB,KAAKmuB,YAAc,GAKnBnuB,KAAKouB,gBAAkB,GAyL3B,OApLAP,EAAc3tB,UAAUujB,MAAQ,WAC5BzjB,KAAKkuB,UAAUvwB,OAAS,EACxBqC,KAAKmuB,YAAYxwB,OAAS,EAC1B,eAAMqC,KAAKouB,kBAMfP,EAAc3tB,UAAUmuB,QAAU,WAC9B,IAAIC,EAAWtuB,KAAKkuB,UAChBK,EAAavuB,KAAKmuB,YAClB1G,EAAU6G,EAAS,GACA,GAAnBA,EAAS3wB,QACT2wB,EAAS3wB,OAAS,EAClB4wB,EAAW5wB,OAAS,IAGpB2wB,EAAS,GAAKA,EAASE,MACvBD,EAAW,GAAKA,EAAWC,MAC3BxuB,KAAKyuB,QAAQ,IAEjB,IAAIC,EAAa1uB,KAAKiuB,aAAaxG,GAEnC,cADOznB,KAAKouB,gBAAgBM,GACrBjH,GAOXoG,EAAc3tB,UAAUyb,QAAU,SAAU8L,GACxC,iBAASznB,KAAKiuB,aAAaxG,KAAYznB,KAAKouB,iBAAkB,IAC9D,IAAIO,EAAW3uB,KAAKguB,kBAAkBvG,GACtC,OAAIkH,GAAYf,KACZ5tB,KAAKkuB,UAAU3hB,KAAKkb,GACpBznB,KAAKmuB,YAAY5hB,KAAKoiB,GACtB3uB,KAAKouB,gBAAgBpuB,KAAKiuB,aAAaxG,KAAY,EACnDznB,KAAK4uB,UAAU,EAAG5uB,KAAKkuB,UAAUvwB,OAAS,IACnC,IAOfkwB,EAAc3tB,UAAU2uB,SAAW,WAC/B,OAAO7uB,KAAKkuB,UAAUvwB,QAQ1BkwB,EAAc3tB,UAAU4uB,mBAAqB,SAAUxR,GACnD,OAAe,EAARA,EAAY,GAQvBuQ,EAAc3tB,UAAU6uB,oBAAsB,SAAUzR,GACpD,OAAe,EAARA,EAAY,GAQvBuQ,EAAc3tB,UAAU8uB,gBAAkB,SAAU1R,GAChD,OAAQA,EAAQ,GAAM,GAM1BuQ,EAAc3tB,UAAU+uB,SAAW,WAC/B,IAAIjtB,EACJ,IAAKA,GAAKhC,KAAKkuB,UAAUvwB,QAAU,GAAK,EAAGqE,GAAK,EAAGA,IAC/ChC,KAAKyuB,QAAQzsB,IAMrB6rB,EAAc3tB,UAAUgvB,QAAU,WAC9B,OAAiC,IAA1BlvB,KAAKkuB,UAAUvwB,QAM1BkwB,EAAc3tB,UAAUwb,YAAc,SAAUld,GAC5C,OAAOA,KAAOwB,KAAKouB,iBAMvBP,EAAc3tB,UAAUivB,SAAW,SAAU1H,GACzC,OAAOznB,KAAK0b,YAAY1b,KAAKiuB,aAAaxG,KAM9CoG,EAAc3tB,UAAUuuB,QAAU,SAAUnR,GACxC,IAAIgR,EAAWtuB,KAAKkuB,UAChBK,EAAavuB,KAAKmuB,YAClBiB,EAAQd,EAAS3wB,OACjB8pB,EAAU6G,EAAShR,GACnBqR,EAAWJ,EAAWjR,GACtB+R,EAAa/R,EACjB,MAAOA,EAAQ8R,GAAS,EAAG,CACvB,IAAIE,EAAStvB,KAAK8uB,mBAAmBxR,GACjCiS,EAASvvB,KAAK+uB,oBAAoBzR,GAClCkS,EAAoBD,EAASH,GAASb,EAAWgB,GAAUhB,EAAWe,GACpEC,EACAD,EACNhB,EAAShR,GAASgR,EAASkB,GAC3BjB,EAAWjR,GAASiR,EAAWiB,GAC/BlS,EAAQkS,EAEZlB,EAAShR,GAASmK,EAClB8G,EAAWjR,GAASqR,EACpB3uB,KAAK4uB,UAAUS,EAAY/R,IAO/BuQ,EAAc3tB,UAAU0uB,UAAY,SAAUS,EAAY/R,GACtD,IAAIgR,EAAWtuB,KAAKkuB,UAChBK,EAAavuB,KAAKmuB,YAClB1G,EAAU6G,EAAShR,GACnBqR,EAAWJ,EAAWjR,GAC1B,MAAOA,EAAQ+R,EAAY,CACvB,IAAII,EAAczvB,KAAKgvB,gBAAgB1R,GACvC,KAAIiR,EAAWkB,GAAed,GAM1B,MALAL,EAAShR,GAASgR,EAASmB,GAC3BlB,EAAWjR,GAASiR,EAAWkB,GAC/BnS,EAAQmS,EAMhBnB,EAAShR,GAASmK,EAClB8G,EAAWjR,GAASqR,GAKxBd,EAAc3tB,UAAUwvB,aAAe,WACnC,IAKIjI,EAASzlB,EAAG2sB,EALZb,EAAmB9tB,KAAKguB,kBACxBM,EAAWtuB,KAAKkuB,UAChBK,EAAavuB,KAAKmuB,YAClB7Q,EAAQ,EACRqS,EAAIrB,EAAS3wB,OAEjB,IAAKqE,EAAI,EAAGA,EAAI2tB,IAAK3tB,EACjBylB,EAAU6G,EAAStsB,GACnB2sB,EAAWb,EAAiBrG,GACxBkH,GAAYf,UACL5tB,KAAKouB,gBAAgBpuB,KAAKiuB,aAAaxG,KAG9C8G,EAAWjR,GAASqR,EACpBL,EAAShR,KAAWmK,GAG5B6G,EAAS3wB,OAAS2f,EAClBiR,EAAW5wB,OAAS2f,EACpBtd,KAAKivB,YAEFpB,EAvNuB,GAyNnB,M,aC9OX,GAAwC,WACxC,IAAItuB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAsBxC,GAA2B,SAAUK,GAMrC,SAASwvB,EAAUC,EAAsBC,GACrC,IAAIxvB,EAAQF,EAAOG,KAAKP,MAKxB,SAAUynB,GACN,OAAOoI,EAAqBE,MAAM,KAAMtI,MAM5C,SAAUA,GACN,OAAmDA,EAAQ,GAAInpB,aAC7D0B,KAkBN,OAhBAM,EAAM0vB,uBAAyB1vB,EAAM2vB,iBAAiBphB,KAAKvO,GAK3DA,EAAM4vB,oBAAsBJ,EAK5BxvB,EAAM6vB,cAAgB,EAKtB7vB,EAAM8vB,kBAAoB,GACnB9vB,EA4DX,OAlGA,GAAUsvB,EAAWxvB,GA4CrBwvB,EAAU1vB,UAAUyb,QAAU,SAAU8L,GACpC,IAAI4I,EAAQjwB,EAAOF,UAAUyb,QAAQpb,KAAKP,KAAMynB,GAChD,GAAI4I,EAAO,CACP,IAAInd,EAAOuU,EAAQ,GACnBvU,EAAKmV,iBAAiB,OAAUc,OAAQnpB,KAAKgwB,wBAEjD,OAAOK,GAKXT,EAAU1vB,UAAUowB,gBAAkB,WAClC,OAAOtwB,KAAKmwB,eAMhBP,EAAU1vB,UAAU+vB,iBAAmB,SAAUnuB,GAC7C,IAAIoR,EAAmDpR,EAAY,OAC/DyuB,EAAQrd,EAAKG,WACjB,GAAKH,EAAKsd,MAAQD,IAAUjd,GAAA,KAAUC,QAClCgd,IAAUjd,GAAA,KAAUG,OACpB8c,IAAUjd,GAAA,KAAUE,MAAO,CAC3BN,EAAKqa,oBAAoB,OAAUpE,OAAQnpB,KAAKgwB,wBAChD,IAAIS,EAAUvd,EAAK5U,SACfmyB,KAAWzwB,KAAKowB,2BACTpwB,KAAKowB,kBAAkBK,KAC5BzwB,KAAKmwB,eAEXnwB,KAAKkwB,wBAObN,EAAU1vB,UAAUwwB,cAAgB,SAAUC,EAAiBC,GAC3D,IACIL,EAAOrd,EAAMud,EADbI,EAAW,EAEf,MAAO7wB,KAAKmwB,cAAgBQ,GACxBE,EAAWD,GACX5wB,KAAK6uB,WAAa,EAClB3b,EAAmDlT,KAAKquB,UAAU,GAClEoC,EAAUvd,EAAK5U,SACfiyB,EAAQrd,EAAKG,WACTkd,IAAUjd,GAAA,KAAUmI,MAAUgV,KAAWzwB,KAAKowB,oBAC9CpwB,KAAKowB,kBAAkBK,IAAW,IAChCzwB,KAAKmwB,gBACLU,EACF3d,EAAK4d,SAIVlB,EAnGmB,CAoG5B,IACa,MASR,SAASmB,GAAgBpd,EAAYT,EAAMgI,EAAe8V,EAAY/b,GAGzE,IAAKtB,KAAgBuH,KAAiBvH,EAAW2H,aAC7C,OAAOsS,GAEX,IAAKja,EAAW2H,YAAYJ,GAAehI,EAAK5U,UAC5C,OAAOsvB,GAQX,IAAIlyB,EAASiY,EAAWE,UAAUnY,OAC9B6P,EAASylB,EAAW,GAAKt1B,EAAO,GAChC8P,EAASwlB,EAAW,GAAKt1B,EAAO,GACpC,OAAQ,MAAQM,KAAKi1B,IAAIhc,GACrBjZ,KAAK8Q,KAAKvB,EAASA,EAASC,EAASA,GAAUyJ,E,2CCvJnD,GAAwC,WACxC,IAAI1V,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA2IxC,GAA8B,SAAUK,GAKxC,SAAS8wB,EAAa1wB,GAClB,IAAIF,EAAQF,EAAOG,KAAKP,OAASA,KAC7BmxB,EAAkBC,GAAsB5wB,GAmP5C,OAjPAF,EAAM+wB,yBAA2B/wB,EAAMgxB,mBAAmBziB,KAAKvO,GAK/DA,EAAMixB,sBAC0B90B,IAA5B+D,EAAQgxB,gBAAgChxB,EAAQgxB,gBAAkB,GAKtElxB,EAAMmxB,iBACqBh1B,IAAvB+D,EAAQoT,WACFpT,EAAQoT,WACR,OAKVtT,EAAMoxB,yBAKNpxB,EAAMqxB,mBAINrxB,EAAMsxB,gBAAkB,WACpB5xB,KAAK2xB,wBAAqBl1B,EAC1BuD,KAAK6xB,aAAarlB,KAAKC,QACzBoC,KAAKvO,GAKPA,EAAMwxB,4BAA8B,iBAKpCxxB,EAAMyxB,4BAA8B,iBAKpCzxB,EAAM0xB,YAAc,EAKpB1xB,EAAM2xB,YAAc,KAMpB3xB,EAAM4xB,gBAAkB,KAKxB5xB,EAAM6xB,yBAA2B,KAKjC7xB,EAAM8xB,uBAAyB,KAK/B9xB,EAAM+xB,gCAAkC,KAKxC/xB,EAAMgyB,UAAY5vB,SAASyE,cAAc,OACzC7G,EAAMgyB,UAAUtrB,UACZ,eAAiB,iBAAkBurB,OAAS,YAAc,IAC9DjyB,EAAMgyB,UAAUlrB,MAAMC,SAAW,WACjC/G,EAAMgyB,UAAUlrB,MAAMorB,SAAW,SACjClyB,EAAMgyB,UAAUlrB,MAAM3J,MAAQ,OAC9B6C,EAAMgyB,UAAUlrB,MAAM5J,OAAS,OAK/B8C,EAAMmyB,kBAAoB/vB,SAASyE,cAAc,OACjD7G,EAAMmyB,kBAAkBrrB,MAAMC,SAAW,WACzC/G,EAAMmyB,kBAAkBrrB,MAAMuf,OAAS,IACvCrmB,EAAMmyB,kBAAkBrrB,MAAM3J,MAAQ,OACtC6C,EAAMmyB,kBAAkBrrB,MAAM5J,OAAS,OACvC8C,EAAMmyB,kBAAkBrrB,MAAME,cAAgB,OAC9ChH,EAAMmyB,kBAAkBzrB,UAAY,sBACpC1G,EAAMgyB,UAAUhqB,YAAYhI,EAAMmyB,mBAKlCnyB,EAAMoyB,2BAA6BhwB,SAASyE,cAAc,OAC1D7G,EAAMoyB,2BAA2BtrB,MAAMC,SAAW,WAClD/G,EAAMoyB,2BAA2BtrB,MAAMuf,OAAS,IAChDrmB,EAAMoyB,2BAA2BtrB,MAAM3J,MAAQ,OAC/C6C,EAAMoyB,2BAA2BtrB,MAAM5J,OAAS,OAChD8C,EAAMoyB,2BAA2BtrB,MAAME,cAAgB,OACvDhH,EAAMoyB,2BAA2B1rB,UAAY,gCAC7C1G,EAAMgyB,UAAUhqB,YAAYhI,EAAMoyB,4BAKlCpyB,EAAMqyB,wBAA0B,KAKhCryB,EAAMsrB,eAAiBprB,EAAQgrB,cAK/BlrB,EAAMsyB,qBAAuBzB,EAAgB0B,oBAK7CvyB,EAAMwyB,gBAAkB,KAKxBxyB,EAAMyyB,SAAW5B,EAAgB4B,UAAY,IAAIpiB,EAAA,KAKjDrQ,EAAMoQ,aAAeygB,EAAgBzgB,cAAgB,IAAIC,EAAA,KAKzDrQ,EAAM0yB,UAAY7B,EAAgB8B,SAMlC3yB,EAAM4yB,gBAAkB,GAKxB5yB,EAAM6yB,UAAY,KAKlB7yB,EAAM8yB,cAKN9yB,EAAM+yB,qBAAuB,GAK7B/yB,EAAMgzB,WAAa,IAAI,GAAUhzB,EAAMywB,gBAAgBliB,KAAKvO,GAAQA,EAAMizB,kBAAkB1kB,KAAKvO,IACjGA,EAAM+nB,iBAAiB,eAAmBmL,GAAYhG,YAAaltB,EAAMmzB,0BACzEnzB,EAAM+nB,iBAAiB,eAAmBmL,GAAY7F,MAAOrtB,EAAMozB,oBACnEpzB,EAAM+nB,iBAAiB,eAAmBmL,GAAY/F,MAAOntB,EAAMqzB,oBACnErzB,EAAM+nB,iBAAiB,eAAmBmL,GAAY9F,QAASptB,EAAMszB,sBAGrEtzB,EAAMuzB,cAAc1C,EAAgB2C,QACpCxzB,EAAMyyB,SAAS5S,QAKf,SAAU4T,GACNA,EAAQpsB,OAAO3H,OACjB6O,KAAKvO,IACPA,EAAMyyB,SAAS1K,iBAAiBO,EAAA,KAAoBC,IAIpD,SAAU/mB,GACNA,EAAM2lB,QAAQ9f,OAAO3H,OACvB6O,KAAKvO,IACPA,EAAMyyB,SAAS1K,iBAAiBO,EAAA,KAAoBG,OAIpD,SAAUjnB,GACNA,EAAM2lB,QAAQ9f,OAAO,OACvBkH,KAAKvO,IACPA,EAAMoQ,aAAayP,QAKnB,SAAU6T,GACNA,EAAYrsB,OAAO3H,OACrB6O,KAAKvO,IACPA,EAAMoQ,aAAa2X,iBAAiBO,EAAA,KAAoBC,IAIxD,SAAU/mB,GACNA,EAAM2lB,QAAQ9f,OAAO3H,OACvB6O,KAAKvO,IACPA,EAAMoQ,aAAa2X,iBAAiBO,EAAA,KAAoBG,OAIxD,SAAUjnB,GACNA,EAAM2lB,QAAQ9f,OAAO,OACvBkH,KAAKvO,IACPA,EAAM0yB,UAAU7S,QAAQ7f,EAAM2zB,oBAAoBplB,KAAKvO,IACvDA,EAAM0yB,UAAU3K,iBAAiBO,EAAA,KAAoBC,IAIrD,SAAU/mB,GACN9B,KAAKi0B,oBAC0CnyB,EAAa,UAC9D+M,KAAKvO,IACPA,EAAM0yB,UAAU3K,iBAAiBO,EAAA,KAAoBG,OAIrD,SAAUjnB,GACN,IAAIoyB,EAAyDpyB,EAAa,QACtE6mB,EAAKuL,EAAQC,aACN13B,IAAPksB,UACO3oB,KAAKkzB,gBAAgBvK,EAAG3S,YAEnClU,EAAM2lB,QAAQ9f,OAAO,OACvBkH,KAAKvO,IACAA,EAq2BX,OA9lCA,GAAU4wB,EAAc9wB,GA+PxB8wB,EAAahxB,UAAU6b,eAAiB,WACpC,MAAM,IAAIqY,MAAM,oDAOpBlD,EAAahxB,UAAUm0B,WAAa,SAAUN,GAC1C/zB,KAAKs0B,cAAc/nB,KAAKwnB,IAW5B7C,EAAahxB,UAAUq0B,eAAiB,SAAUP,GAC9Ch0B,KAAKw0B,kBAAkBjoB,KAAKynB,IAShC9C,EAAahxB,UAAUu0B,SAAW,SAAU3P,GACxC,IAAIoD,EAASloB,KAAK00B,gBAAgBhM,YAClCR,EAAO3b,KAAKuY,IAOhBoM,EAAahxB,UAAUy0B,WAAa,SAAUT,GAC1Cl0B,KAAK40B,cAAcroB,KAAK2nB,IAO5BhD,EAAahxB,UAAU+zB,oBAAsB,SAAUC,GACnD,IAAIvL,EAAKuL,EAAQC,aACN13B,IAAPksB,IACA3oB,KAAKkzB,gBAAgBvK,EAAG3S,YAAcke,GAE1CA,EAAQvsB,OAAO3H,OAMnBkxB,EAAahxB,UAAUwH,gBAAkB,WACrC1H,KAAK60B,UAAU,MACfz0B,EAAOF,UAAUwH,gBAAgBnH,KAAKP,OAqB1CkxB,EAAahxB,UAAU40B,sBAAwB,SAAUnuB,EAAOyZ,EAAUpjB,GACtE,GAAKgD,KAAKiyB,YAAV,CAGA,IAAI5wB,EAAarB,KAAKyF,+BAA+BkB,GACrD3J,OAA8BP,IAAhBO,EAA4BA,EAAc,GACxD,IAAIsnB,OAA4C7nB,IAA7BO,EAAYsnB,aACzBtnB,EAAYsnB,aAAetkB,KAAKiyB,YAAYre,WAC5C,EACF6Q,OAA0ChoB,IAA5BO,EAAYynB,YAA4BznB,EAAYynB,YAAc,OAChFF,GAA4C,IAA7BvnB,EAAYunB,aAC/B,OAAOvkB,KAAKmzB,UAAU9O,2BAA2BhjB,EAAYrB,KAAKiyB,YAAa3N,EAAcC,EAAcnE,EAAU,KAAMqE,EAAa,QAU5IyM,EAAahxB,UAAU60B,mBAAqB,SAAUpuB,EAAO3J,GACzD,IAAIg4B,EAAW,GAIf,OAHAh1B,KAAK80B,sBAAsBnuB,GAAO,SAAUke,GACxCmQ,EAASzoB,KAAKsY,KACf7nB,GACIg4B,GAuBX9D,EAAahxB,UAAU8lB,oBAAsB,SAAUrf,EAAOyZ,EAAUpjB,GACpE,GAAKgD,KAAKiyB,YAAV,CAGA,IAAIzxB,EAAUxD,GAAe,GACzBsnB,OAAwC7nB,IAAzB+D,EAAQ8jB,aACrB9jB,EAAQ8jB,aAAetkB,KAAKiyB,YAAYre,WACxC,EACF6Q,EAAcjkB,EAAQikB,aAAe,OACzC,OAAOzkB,KAAKmzB,UAAUnN,oBAAoBrf,EAAO3G,KAAKiyB,YAAa3N,EAAclE,EAAUqE,KAU/FyM,EAAahxB,UAAU+0B,kBAAoB,SAAUtuB,EAAO3J,GACxD,IAAKgD,KAAKiyB,YACN,OAAO,EAEX,IAAI5wB,EAAarB,KAAKyF,+BAA+BkB,GACrD3J,OAA8BP,IAAhBO,EAA4BA,EAAc,GACxD,IAAIynB,OAA0ChoB,IAA5BO,EAAYynB,YAA4BznB,EAAYynB,YAAc,OAChFH,OAA4C7nB,IAA7BO,EAAYsnB,aACzBtnB,EAAYsnB,aAAetkB,KAAKiyB,YAAYre,WAC5C,EACF2Q,GAA4C,IAA7BvnB,EAAYunB,aAC/B,OAAOvkB,KAAKmzB,UAAUlN,uBAAuB5kB,EAAYrB,KAAKiyB,YAAa3N,EAAcC,EAAcE,EAAa,OAQxHyM,EAAahxB,UAAUg1B,mBAAqB,SAAUpzB,GAClD,OAAO9B,KAAK6qB,uBAAuB7qB,KAAK0qB,cAAc5oB,KAO1DovB,EAAahxB,UAAUi1B,2BAA6B,SAAUrzB,GAC1D,OAAO9B,KAAKyF,+BAA+BzF,KAAK0qB,cAAc5oB,KAQlEovB,EAAahxB,UAAUwqB,cAAgB,SAAU5oB,GAC7C,IAAIgO,EAAmB9P,KAAKsyB,UAAUtiB,wBAClColB,EAEJ,mBAAoBtzB,EACY,EAAQuzB,eAAe,GACvB,EAChC,MAAO,CACHD,EAAcvlB,QAAUC,EAAiB9H,KACzCotB,EAAcxlB,QAAUE,EAAiB5H,MAYjDgpB,EAAahxB,UAAUo1B,UAAY,WAC/B,OAAoDt1B,KAAK+R,IAAIyhB,GAAY9F,SAS7EwD,EAAahxB,UAAUsC,iBAAmB,WACtC,IAAID,EAASvC,KAAKs1B,YAClB,YAAe74B,IAAX8F,EACyB,kBAAXA,EACRG,SAAS6yB,eAAehzB,GACxBA,EAGC,MAUf2uB,EAAahxB,UAAU2qB,uBAAyB,SAAUlkB,GACtD,OAAO,eAAiB3G,KAAKyF,+BAA+BkB,GAAQ3G,KAAKwB,UAAUg0B,kBAQvFtE,EAAahxB,UAAUuF,+BAAiC,SAAUkB,GAC9D,IAAIgN,EAAa3T,KAAKiyB,YACtB,OAAKte,EAIM,eAAeA,EAAWyQ,2BAA4Bzd,EAAMgC,SAH5D,MAYfuoB,EAAahxB,UAAUo0B,YAAc,WACjC,OAAOt0B,KAAK+yB,UAQhB7B,EAAahxB,UAAU00B,YAAc,WACjC,OAAO50B,KAAKgzB,WAUhB9B,EAAahxB,UAAUu1B,eAAiB,SAAU9M,GAC9C,IAAIuL,EAAUl0B,KAAKkzB,gBAAgBvK,EAAG3S,YACtC,YAAmBvZ,IAAZy3B,EAAwBA,EAAU,MAU7ChD,EAAahxB,UAAUs0B,gBAAkB,WACrC,OAAOx0B,KAAK0Q,cAQhBwgB,EAAahxB,UAAUw0B,cAAgB,WACnC,OAAkC10B,KAAK+R,IAAIyhB,GAAYhG,aAO3D0D,EAAahxB,UAAUwoB,UAAY,WAC/B,IAAIR,EAASloB,KAAK00B,gBAAgBhM,YAClC,OAAOR,GAKXgJ,EAAahxB,UAAUw1B,WAAa,WAEhC,IADA,IAAIlhB,EAAmBxU,KAAK00B,gBAAgBlL,sBACnCxnB,EAAI,EAAGC,EAAKuS,EAAiB7W,OAAQqE,EAAIC,IAAMD,EAAG,CACvD,IAAI8iB,EAAQtQ,EAAiBxS,GAAG8iB,MAC5Be,EAA2D,EAAQ9R,YACvE,GAAI8R,GAAUA,EAAO8P,QACjB,OAAO,EAGf,OAAO,GASXzE,EAAahxB,UAAU01B,uBAAyB,SAAUv0B,GACtD,IAAIw0B,EAAiB,eAAmBx0B,EAAYrB,KAAKwB,UAAUg0B,iBACnE,OAAOx1B,KAAKuF,+BAA+BswB,IAQ/C3E,EAAahxB,UAAUqF,+BAAiC,SAAUlE,GAC9D,IAAIsS,EAAa3T,KAAKiyB,YACtB,OAAKte,EAIM,eAAeA,EAAWwQ,2BAA4B9iB,EAAWsH,MAAM,EAAG,IAH1E,MAUfuoB,EAAahxB,UAAU0lB,YAAc,WACjC,OAAO5lB,KAAKmzB,WAQhBjC,EAAahxB,UAAUuG,QAAU,WAC7B,OAA0DzG,KAAK+R,IAAIyhB,GAAY/F,OASnFyD,EAAahxB,UAAUsB,QAAU,WAC7B,OAA4BxB,KAAK+R,IAAIyhB,GAAY7F,OAOrDuD,EAAahxB,UAAU6P,YAAc,WACjC,OAAO/P,KAAKsyB,WAShBpB,EAAahxB,UAAUkI,oBAAsB,WACzC,OAAOpI,KAAKyyB,mBAShBvB,EAAahxB,UAAU41B,6BAA+B,WAClD,OAAO91B,KAAK0yB,4BAShBxB,EAAahxB,UAAU6wB,gBAAkB,SAAU7d,EAAMgI,EAAe8V,EAAY/b,GAChF,OAAO8b,GAAgB/wB,KAAKiyB,YAAa/e,EAAMgI,EAAe8V,EAAY/b,IAM9Eic,EAAahxB,UAAUoxB,mBAAqB,SAAUnwB,EAAc40B,GAChE,IAAI/0B,EAAO+0B,GAAY50B,EAAaH,KAChCF,EAAkB,IAAI,EAAgBE,EAAMhB,KAAMmB,GACtDnB,KAAKg2B,sBAAsBl1B,IAK/BowB,EAAahxB,UAAU81B,sBAAwB,SAAUl1B,GACrD,GAAKd,KAAKiyB,YAAV,CAKA,IAAI9vB,EAA6CrB,EAA6B,cAC1Em1B,EAAY9zB,EAAcnB,KAC9B,GAAIi1B,IAAc,EAAiBjL,aAC/BiL,IAAc,OAAUhpB,OACxBgpB,IAAc,OAAU/qB,QAAS,CACjC,IAAIgrB,EAAWl2B,KAAKsyB,UAAUnF,YACxBntB,KAAKsyB,UAAUnF,cACfzqB,SACFH,EAAS2zB,IAAaxzB,SACCP,EAAoB,OACf,EAAWg0B,iBAAiBh0B,EAAc0N,QAAS1N,EAAcyN,SACjG,GAGA5P,KAAK0yB,2BAA2BjwB,SAASF,MAKnC2zB,IAAaxzB,SAAWA,SAAS0zB,gBAAkBF,GAAUzzB,SAASF,GACxE,OAGRzB,EAAgB6S,WAAa3T,KAAKiyB,YAClC,IAAIoE,EAAoBr2B,KAAKw0B,kBAAkBtL,WAC/C,IAA4C,IAAxClpB,KAAK8J,cAAchJ,GACnB,IAAK,IAAIkB,EAAIq0B,EAAkB14B,OAAS,EAAGqE,GAAK,EAAGA,IAAK,CACpD,IAAIgyB,EAAcqC,EAAkBr0B,GACpC,GAAKgyB,EAAYsC,YAAjB,CAGA,IAAIC,EAAOvC,EAAYnzB,YAAYC,GACnC,IAAKy1B,EACD,UAQhBrF,EAAahxB,UAAUs2B,iBAAmB,WACtC,IAAI7iB,EAAa3T,KAAKiyB,YAUlB1W,EAAYvb,KAAKszB,WACrB,IAAK/X,EAAU2T,UAAW,CACtB,IAAIyB,EAAkB3wB,KAAKuxB,iBACvBX,EAAcD,EAClB,GAAIhd,EAAY,CACZ,IAAI8iB,EAAQ9iB,EAAW+iB,UACvB,GAAID,EAAME,GAAA,KAASC,YAAcH,EAAME,GAAA,KAASE,aAAc,CAC1D,IAAIC,GAAoB,QAAgBtqB,KAAKC,MAAQkH,EAAWyC,KAAO,EACvEua,EAAkBmG,EAAmB,EAAI,EACzClG,EAAckG,EAAmB,EAAI,GAGzCvb,EAAU+U,kBAAoBK,IAC9BpV,EAAUmU,eACVnU,EAAUmV,cAAcC,EAAiBC,KAG7Cjd,IACA3T,KAAKgnB,YAAY,OAAgB+P,iBAChCpjB,EAAWkH,SACX7a,KAAKszB,WAAWhD,mBAChBtwB,KAAK01B,cACN11B,KAAKmzB,UAAUlP,oBAAoB,OAAgB8S,eAAgBpjB,GAGvE,IADA,IAAIyH,EAAsBpb,KAAKqzB,qBACtBrxB,EAAI,EAAGC,EAAKmZ,EAAoBzd,OAAQqE,EAAIC,IAAMD,EACvDoZ,EAAoBpZ,GAAGhC,KAAM2T,GAEjCyH,EAAoBzd,OAAS,GAKjCuzB,EAAahxB,UAAUyzB,mBAAqB,WACpC3zB,KAAKwB,YAAcxB,KAAKwB,UAAUyE,gBAClCjG,KAAKwB,UAAUw1B,mBAAmB,GAEtCh3B,KAAKiQ,UAKTihB,EAAahxB,UAAU0zB,qBAAuB,WAK1C,IAAIqD,EAIJ,GAHIj3B,KAAKs1B,cACL2B,EAAgBj3B,KAAKwC,oBAErBxC,KAAK2yB,wBAAyB,CAC9B,IAAK,IAAI3wB,EAAI,EAAGC,EAAKjC,KAAK8yB,gBAAgBn1B,OAAQqE,EAAIC,IAAMD,EACxD,eAAchC,KAAK8yB,gBAAgB9wB,IAEvChC,KAAK8yB,gBAAkB,KACvB9yB,KAAKsyB,UAAU/E,oBAAoB,OAAU2J,YAAal3B,KAAKqxB,0BAC/DrxB,KAAKsyB,UAAU/E,oBAAoB,OAAUtgB,MAAOjN,KAAKqxB,+BAC9B50B,IAAvBuD,KAAKozB,gBACL7F,oBAAoB,OAAU4J,OAAQn3B,KAAKozB,eAAe,GAC1DpzB,KAAKozB,mBAAgB32B,GAEzBuD,KAAK2yB,wBAAwByE,UAC7Bp3B,KAAK2yB,wBAA0B,KAC/B,eAAW3yB,KAAKsyB,WAEpB,GAAK2E,EAYA,CAMD,IAAK,IAAIz4B,KALTy4B,EAAc3uB,YAAYtI,KAAKsyB,WAC1BtyB,KAAKmzB,YACNnzB,KAAKmzB,UAAYnzB,KAAK+b,kBAE1B/b,KAAK2yB,wBAA0B,IAAI,EAAuB3yB,KAAMA,KAAK4rB,gBACrD3qB,EAAA,KACZjB,KAAK2yB,wBAAwBtK,iBAAiBpnB,EAAoB,KAAAzC,GAAMwB,KAAKg2B,sBAAsBnnB,KAAK7O,OAE5GA,KAAKsyB,UAAUjK,iBAAiB,OAAU6O,YAAal3B,KAAKqxB,0BAA0B,GACtFrxB,KAAKsyB,UAAUjK,iBAAiB,OAAUpb,MAAOjN,KAAKqxB,2BAA0B,QAA0B,CAAE7E,SAAS,IACrH,IAAIqG,EAAuB7yB,KAAK4yB,qBAE1B5yB,KAAK4yB,qBADLqE,EAENj3B,KAAK8yB,gBAAkB,CACnB,eAAOD,EAAqB,OAAU3nB,QAASlL,KAAKsxB,mBAAoBtxB,MACxE,eAAO6yB,EAAqB,OAAUnnB,SAAU1L,KAAKsxB,mBAAoBtxB,OAExEA,KAAKozB,gBACNpzB,KAAKozB,cAAgBpzB,KAAKq3B,WAAWxoB,KAAK7O,MAC1CuyB,OAAOlK,iBAAiB,OAAU8O,OAAQn3B,KAAKozB,eAAe,SA/B9DpzB,KAAKmzB,YACLxkB,aAAa3O,KAAK0xB,0BAClB1xB,KAAKqzB,qBAAqB11B,OAAS,EACnCqC,KAAKmzB,UAAUiE,UACfp3B,KAAKmzB,UAAY,MAEjBnzB,KAAK2xB,qBACL2F,qBAAqBt3B,KAAK2xB,oBAC1B3xB,KAAK2xB,wBAAqBl1B,GA0BlCuD,KAAKq3B,cAOTnG,EAAahxB,UAAUqzB,kBAAoB,WACvCvzB,KAAKiQ,UAKTihB,EAAahxB,UAAUq3B,2BAA6B,WAChDv3B,KAAKiQ,UAKTihB,EAAahxB,UAAUwzB,mBAAqB,WACpC1zB,KAAKmyB,2BACL,eAAcnyB,KAAKmyB,0BACnBnyB,KAAKmyB,yBAA2B,MAEhCnyB,KAAKoyB,yBACL,eAAcpyB,KAAKoyB,wBACnBpyB,KAAKoyB,uBAAyB,MAElC,IAAI7wB,EAAOvB,KAAKwB,UACZD,IACAvB,KAAKw3B,sBACLx3B,KAAKmyB,yBAA2B,eAAO5wB,EAAMilB,EAAA,KAAgBC,eAAgBzmB,KAAKu3B,2BAA4Bv3B,MAC9GA,KAAKoyB,uBAAyB,eAAO7wB,EAAM,OAAU4nB,OAAQnpB,KAAKu3B,2BAA4Bv3B,MAC9FuB,EAAKy1B,mBAAmB,IAE5Bh3B,KAAKiQ,UAKTihB,EAAahxB,UAAUuzB,yBAA2B,WAC1CzzB,KAAKqyB,kCACLryB,KAAKqyB,gCAAgClS,QAAQ,QAC7CngB,KAAKqyB,gCAAkC,MAE3C,IAAIoF,EAAaz3B,KAAK00B,gBAClB+C,IACAz3B,KAAKqyB,gCAAkC,CACnC,eAAOoF,EAAYjR,EAAA,KAAgBC,eAAgBzmB,KAAKiQ,OAAQjQ,MAChE,eAAOy3B,EAAY,OAAUtO,OAAQnpB,KAAKiQ,OAAQjQ,QAG1DA,KAAKiQ,UAKTihB,EAAahxB,UAAUw3B,WAAa,WAChC,QAAS13B,KAAKiyB,aAMlBf,EAAahxB,UAAUy3B,WAAa,WAC5B33B,KAAK2xB,oBACL2F,qBAAqBt3B,KAAK2xB,oBAE9B3xB,KAAK4xB,mBAKTV,EAAahxB,UAAUwmB,WAAa,WAEhC,IADA,IAAIvB,EAAcnlB,KAAK00B,gBAAgBlL,sBAC9BxnB,EAAI,EAAGC,EAAKkjB,EAAYxnB,OAAQqE,EAAIC,IAAMD,EAAG,CAClD,IAAI8iB,EAAQK,EAAYnjB,GAAG8iB,MACvBA,EAAMY,eACNZ,EAAMc,cAAcgS,uBAQhC1G,EAAahxB,UAAU+P,OAAS,WACxBjQ,KAAKmzB,gBAAyC12B,IAA5BuD,KAAK2xB,qBACvB3xB,KAAK2xB,mBAAqBkG,sBAAsB73B,KAAK4xB,mBAU7DV,EAAahxB,UAAU43B,cAAgB,SAAU/D,GAC7C,OAAO/zB,KAAKs0B,cAAcyD,OAAOhE,IASrC7C,EAAahxB,UAAU83B,kBAAoB,SAAUhE,GACjD,OAAOh0B,KAAKw0B,kBAAkBuD,OAAO/D,IASzC9C,EAAahxB,UAAU+3B,YAAc,SAAUnT,GAC3C,IAAIoD,EAASloB,KAAK00B,gBAAgBhM,YAClC,OAAOR,EAAO6P,OAAOjT,IASzBoM,EAAahxB,UAAUg4B,cAAgB,SAAUhE,GAC7C,OAAOl0B,KAAK40B,cAAcmD,OAAO7D,IAMrChD,EAAahxB,UAAU2xB,aAAe,SAAUzb,GAC5C,IAAI5P,EAAOxG,KAAKyG,UACZlF,EAAOvB,KAAKwB,UACZ22B,EAAqBn4B,KAAKiyB,YAE1Bte,EAAa,KACjB,QAAalX,IAAT+J,GAAsB,gBAAQA,IAASjF,GAAQA,EAAK62B,QAAS,CAC7D,IAAI1B,EAAYn1B,EAAK82B,SAASr4B,KAAKiyB,YAAcjyB,KAAKiyB,YAAYyE,eAAYj6B,GAC1EoX,EAAYtS,EAAK8R,WACrBM,EAAa,CACTkH,SAAS,EACTsJ,2BAA4BnkB,KAAK8xB,4BACjCnO,eAAgBwU,EACVA,EAAmBxU,eACnB,GACNvnB,OAAQ,eAAkByX,EAAUnY,OAAQmY,EAAUtJ,WAAYsJ,EAAUtN,SAAUC,GACtF8W,MAAOtd,KAAKgyB,cACZvd,WAAY,EACZD,iBAAkBxU,KAAK00B,gBAAgBlL,sBACvC5V,WAAY5T,KAAKyxB,YACjBrN,2BAA4BpkB,KAAK+xB,4BACjC3W,oBAAqB,GACrB5U,KAAMA,EACN+U,UAAWvb,KAAKszB,WAChBld,KAAMA,EACN0D,UAAW,GACXjG,UAAWA,EACX6iB,UAAWA,EACXpb,YAAa,IAKrB,GAFAtb,KAAKiyB,YAActe,EACnB3T,KAAKmzB,UAAU7e,YAAYX,GACvBA,EAAY,CAKZ,GAJIA,EAAWkH,SACX7a,KAAKiQ,SAETrS,MAAMsC,UAAUqM,KAAKwjB,MAAM/vB,KAAKqzB,qBAAsB1f,EAAWyH,qBAC7D+c,EAAoB,CACpB,IAAIG,GAAat4B,KAAKkyB,kBAChB,eAAQlyB,KAAKkyB,mBACV,eAAOve,EAAWvX,OAAQ4D,KAAKkyB,iBACpCoG,IACAt4B,KAAK8J,cAAc,IAAI,EAASyuB,EAAA,KAAaC,UAAWx4B,KAAMm4B,IAC9Dn4B,KAAKkyB,gBAAkB,eAAoBlyB,KAAKkyB,kBAGxD,IAAIuG,EAAOz4B,KAAKkyB,kBACXve,EAAW+iB,UAAUC,GAAA,KAASC,aAC9BjjB,EAAW+iB,UAAUC,GAAA,KAASE,eAC9B,eAAOljB,EAAWvX,OAAQ4D,KAAKkyB,iBAChCuG,IACAz4B,KAAK8J,cAAc,IAAI,EAASyuB,EAAA,KAAaG,QAAS14B,KAAM2T,IAC5D,eAAMA,EAAWvX,OAAQ4D,KAAKkyB,kBAGtClyB,KAAK8J,cAAc,IAAI,EAASyuB,EAAA,KAAaI,WAAY34B,KAAM2T,IAC/D3T,KAAK0xB,yBAA2B9iB,WAAW5O,KAAKw2B,iBAAiB3nB,KAAK7O,MAAO,IAQjFkxB,EAAahxB,UAAU04B,cAAgB,SAAUnB,GAC7Cz3B,KAAKiS,IAAIuhB,GAAYhG,WAAYiK,IAQrCvG,EAAahxB,UAAU24B,QAAU,SAAUryB,GACvCxG,KAAKiS,IAAIuhB,GAAY/F,KAAMjnB,IAS/B0qB,EAAahxB,UAAU20B,UAAY,SAAUtyB,GACzCvC,KAAKiS,IAAIuhB,GAAY9F,OAAQnrB,IAQjC2uB,EAAahxB,UAAU44B,QAAU,SAAUv3B,GACvCvB,KAAKiS,IAAIuhB,GAAY7F,KAAMpsB,IAO/B2vB,EAAahxB,UAAUm3B,WAAa,WAChC,IAAIJ,EAAgBj3B,KAAKwC,mBACzB,GAAKy0B,EAGA,CACD,IAAI8B,EAAgBC,iBAAiB/B,GACrCj3B,KAAK64B,QAAQ,CACT5B,EAAcgC,YACVC,WAAWH,EAAc,oBACzBG,WAAWH,EAAc,gBACzBG,WAAWH,EAAc,iBACzBG,WAAWH,EAAc,qBAC7B9B,EAAckC,aACVD,WAAWH,EAAc,mBACzBG,WAAWH,EAAc,eACzBG,WAAWH,EAAc,kBACzBG,WAAWH,EAAc,6BAdjC/4B,KAAK64B,aAAQp8B,GAiBjBuD,KAAKw3B,uBAMTtG,EAAahxB,UAAUs3B,oBAAsB,WACzC,IAAIj2B,EAAOvB,KAAKwB,UAChB,GAAID,EAAM,CACN,IAAIiF,OAAO/J,EACPs8B,EAAgBC,iBAAiBh5B,KAAKsyB,WACtCyG,EAAct7B,OAASs7B,EAAcv7B,SACrCgJ,EAAO,CACH4yB,SAASL,EAAct7B,MAAO,IAC9B27B,SAASL,EAAcv7B,OAAQ,MAGvC+D,EAAK83B,gBAAgB7yB,KAGtB0qB,EA/lCsB,CAgmC/B,QAKF,SAASE,GAAsB5wB,GAI3B,IAAIqyB,EAAsB,UACUp2B,IAAhC+D,EAAQqyB,sBACRA,EAC2C,kBAAhCryB,EAAQqyB,oBACTnwB,SAAS6yB,eAAe/0B,EAAQqyB,qBAChCryB,EAAQqyB,qBAKtB,IASIE,EAUAriB,EAWAuiB,EA9BAa,EAAS,GACT2D,EAAaj3B,EAAQ0nB,QACoC,oBAA/B1nB,EAAc,OAAW,UACtBA,EAAc,OACzC,IAAI,EAAW,CAAE0nB,OAAmC1nB,EAAc,SAuCxE,OAtCAszB,EAAON,GAAYhG,YAAciK,EACjC3D,EAAON,GAAY9F,QAAUltB,EAAQ+B,OACrCuxB,EAAON,GAAY7F,WACElxB,IAAjB+D,EAAQe,KAAqBf,EAAQe,KAAO,IAAI+3B,GAAA,UAE3B78B,IAArB+D,EAAQuyB,WACJn1B,MAAMigB,QAAQrd,EAAQuyB,UACtBA,EAAW,IAAIpiB,EAAA,KAAWnQ,EAAQuyB,SAASpqB,UAG3C,eAAiE,oBAAhCnI,EAAgB,SAAU,SAAkB,IAC7EuyB,EAAsCvyB,EAAgB,gBAIjC/D,IAAzB+D,EAAQkQ,eACJ9S,MAAMigB,QAAQrd,EAAQkQ,cACtBA,EAAe,IAAIC,EAAA,KAAWnQ,EAAQkQ,aAAa/H,UAGnD,eACI,oBAD6BnI,EAAoB,aAAU,SAC/C,IAChBkQ,EAA0ClQ,EAAoB,oBAI7C/D,IAArB+D,EAAQyyB,SACJr1B,MAAMigB,QAAQrd,EAAQyyB,UACtBA,EAAW,IAAItiB,EAAA,KAAWnQ,EAAQyyB,SAAStqB,UAG3C,eAAiE,oBAAhCnI,EAAgB,SAAU,SAAkB,IAC7EyyB,EAAWzyB,EAAQyyB,UAIvBA,EAAW,IAAItiB,EAAA,KAEZ,CACHoiB,SAAUA,EACVriB,aAAcA,EACdmiB,oBAAqBA,EACrBI,SAAUA,EACVa,OAAQA,GAGD,UCjzCX,GAAwC,WACxC,IAAIv0B,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAwDxC,GAAyB,SAAUK,GAKnC,SAASm5B,EAAQ/4B,GACb,IAAIF,EAAQF,EAAOG,KAAKP,OAASA,KAC7BynB,EAAUjnB,EAAQinB,QA8BtB,OA7BIA,GAAYjnB,EAAQ+B,QAAWklB,EAAQrgB,MAAME,gBAC7CmgB,EAAQrgB,MAAME,cAAgB,QAMlChH,EAAMmnB,QAAUA,GAAoB,KAKpCnnB,EAAMk5B,QAAU,KAKhBl5B,EAAMiH,KAAO,KAKbjH,EAAMm5B,aAAe,GACjBj5B,EAAQyP,SACR3P,EAAM2P,OAASzP,EAAQyP,QAEvBzP,EAAQ+B,QACRjC,EAAMu0B,UAAUr0B,EAAQ+B,QAErBjC,EA+DX,OAnGA,GAAUi5B,EAASn5B,GAyCnBm5B,EAAQr5B,UAAUwH,gBAAkB,WAChC,eAAW1H,KAAKynB,SAChBrnB,EAAOF,UAAUwH,gBAAgBnH,KAAKP,OAO1Cu5B,EAAQr5B,UAAUoE,OAAS,WACvB,OAAOtE,KAAKuH,MAShBgyB,EAAQr5B,UAAUyH,OAAS,SAAUjJ,GAC7BsB,KAAKuH,MACL,eAAWvH,KAAKynB,SAEpB,IAAK,IAAIzlB,EAAI,EAAGC,EAAKjC,KAAKy5B,aAAa97B,OAAQqE,EAAIC,IAAMD,EACrD,eAAchC,KAAKy5B,aAAaz3B,IAIpC,GAFAhC,KAAKy5B,aAAa97B,OAAS,EAC3BqC,KAAKuH,KAAO7I,EACRsB,KAAKuH,KAAM,CACX,IAAIhF,EAASvC,KAAKw5B,QACZx5B,KAAKw5B,QACL96B,EAAIo3B,+BACVvzB,EAAO+F,YAAYtI,KAAKynB,SACpBznB,KAAKiQ,SAAW,QAChBjQ,KAAKy5B,aAAaltB,KAAK,eAAO7N,EAAK65B,EAAA,KAAaI,WAAY34B,KAAKiQ,OAAQjQ,OAE7EtB,EAAIuR,WAQZspB,EAAQr5B,UAAU+P,OAAS,SAAUypB,KAUrCH,EAAQr5B,UAAU20B,UAAY,SAAUtyB,GACpCvC,KAAKw5B,QACiB,kBAAXj3B,EAAsBG,SAAS6yB,eAAehzB,GAAUA,GAEhEg3B,EApGiB,CAqG1B,QACa,M,aC9JX,GAAwC,WACxC,IAAIh6B,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAqDxC,GAA6B,SAAUK,GAKvC,SAASu5B,EAAY38B,GACjB,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GAC1CsD,EAAQF,EAAOG,KAAKP,KAAM,CACtBynB,QAAS/kB,SAASyE,cAAc,OAChC8I,OAAQzP,EAAQyP,OAChB1N,OAAQ/B,EAAQ+B,UACdvC,KAKNM,EAAMs5B,WAAal3B,SAASyE,cAAc,MAK1C7G,EAAMu5B,gBACoBp9B,IAAtB+D,EAAQs5B,WAA0Bt5B,EAAQs5B,UAK9Cx5B,EAAMy5B,0BAA+Ct9B,IAAxB+D,EAAQw5B,YAKrC15B,EAAM25B,kBACsBx9B,IAAxB+D,EAAQw5B,aAA4Bx5B,EAAQw5B,YAC3C15B,EAAM25B,eACP35B,EAAMu5B,YAAa,GAEvB,IAAI7yB,OAAkCvK,IAAtB+D,EAAQwG,UAA0BxG,EAAQwG,UAAY,iBAClEkzB,OAAgCz9B,IAArB+D,EAAQ05B,SAAyB15B,EAAQ05B,SAAW,eAC/DC,OAA0C19B,IAA1B+D,EAAQ25B,cAA8B35B,EAAQ25B,cAAgB,IACrD,kBAAlBA,GAKP75B,EAAM85B,eAAiB13B,SAASyE,cAAc,QAC9C7G,EAAM85B,eAAeC,YAAcF,GAGnC75B,EAAM85B,eAAiBD,EAE3B,IAAIG,OAA0B79B,IAAlB+D,EAAQ85B,MAAsB95B,EAAQ85B,MAAQ,IACrC,kBAAVA,GAKPh6B,EAAMi6B,OAAS73B,SAASyE,cAAc,QACtC7G,EAAMi6B,OAAOF,YAAcC,GAG3Bh6B,EAAMi6B,OAASD,EAEnB,IAAIE,EAAcl6B,EAAM25B,eAAiB35B,EAAMu5B,WAAav5B,EAAM85B,eAAiB95B,EAAMi6B,OACrFv3B,EAASN,SAASyE,cAAc,UACpCnE,EAAOy3B,aAAa,OAAQ,UAC5Bz3B,EAAO03B,MAAQR,EACfl3B,EAAOsF,YAAYkyB,GACnBx3B,EAAOqlB,iBAAiB,OAAUsE,MAAOrsB,EAAMq6B,aAAa9rB,KAAKvO,IAAQ,GACzE,IAAIs6B,EAAa5zB,EACb,IACA,OACA,IACA,QACC1G,EAAMu5B,YAAcv5B,EAAM25B,aAAe,IAAM,OAAkB,KACjE35B,EAAM25B,aAAe,GAAK,qBAC3BxS,EAAUnnB,EAAMmnB,QAepB,OAdAA,EAAQzgB,UAAY4zB,EACpBnT,EAAQnf,YAAYhI,EAAMs5B,YAC1BnS,EAAQnf,YAAYtF,GAMpB1C,EAAMu6B,sBAAwB,GAK9Bv6B,EAAMymB,kBAAmB,EAClBzmB,EAkKX,OA7PA,GAAUq5B,EAAav5B,GAmGvBu5B,EAAYz5B,UAAU46B,2BAA6B,SAAUnnB,GAYzD,IAPA,IAAIonB,EAAS,GAKTC,EAAsB,GACtBxmB,EAAmBb,EAAWa,iBACzBxS,EAAI,EAAGC,EAAKuS,EAAiB7W,OAAQqE,EAAIC,IAAMD,EAAG,CACvD,IAAIuS,EAAaC,EAAiBxS,GAClC,GAAK,eAAOuS,EAAYZ,EAAWE,WAAnC,CAGA,IAAIgS,EAA6DtR,EAAgB,MAAER,YACnF,GAAK8R,EAAL,CAGA,IAAIoV,EAAoBpV,EAAOqV,kBAC/B,GAAKD,EAAL,CAGA,IAAIE,EAAeF,EAAkBtnB,GACrC,GAAKwnB,EAOL,GAJKn7B,KAAK+5B,uBACkC,IAAxClU,EAAOuV,8BACPp7B,KAAKq7B,gBAAe,GAEpBz9B,MAAMigB,QAAQsd,GACd,IAAK,IAAI1V,EAAI,EAAG6V,EAAKH,EAAax9B,OAAQ8nB,EAAI6V,IAAM7V,EAC1C0V,EAAa1V,KAAMsV,IACrBC,EAAoBzuB,KAAK4uB,EAAa1V,IACtCsV,EAAOI,EAAa1V,KAAM,QAK5B0V,KAAgBJ,IAClBC,EAAoBzuB,KAAK4uB,GACzBJ,EAAOI,IAAgB,MAInC,OAAOH,GAMXrB,EAAYz5B,UAAUq7B,eAAiB,SAAU5nB,GAC7C,GAAKA,EAAL,CAOA,IAAIwnB,EAAen7B,KAAK86B,2BAA2BnnB,GAC/CmW,EAAUqR,EAAax9B,OAAS,EAKpC,GAJIqC,KAAK+mB,kBAAoB+C,IACzB9pB,KAAKynB,QAAQrgB,MAAMugB,QAAUmC,EAAU,GAAK,OAC5C9pB,KAAK+mB,iBAAmB+C,IAExB,gBAAOqR,EAAcn7B,KAAK66B,uBAA9B,CAGA,eAAe76B,KAAK45B,YAEpB,IAAK,IAAI53B,EAAI,EAAGC,EAAKk5B,EAAax9B,OAAQqE,EAAIC,IAAMD,EAAG,CACnD,IAAIylB,EAAU/kB,SAASyE,cAAc,MACrCsgB,EAAQ+T,UAAYL,EAAan5B,GACjChC,KAAK45B,WAAWtxB,YAAYmf,GAEhCznB,KAAK66B,sBAAwBM,QAtBrBn7B,KAAK+mB,mBACL/mB,KAAKynB,QAAQrgB,MAAMugB,QAAU,OAC7B3nB,KAAK+mB,kBAAmB,IA0BpC4S,EAAYz5B,UAAUy6B,aAAe,SAAU74B,GAC3CA,EAAML,iBACNzB,KAAKy7B,iBAKT9B,EAAYz5B,UAAUu7B,cAAgB,WAClCz7B,KAAKynB,QAAQiU,UAAUC,OAAO,QAC1B37B,KAAK65B,WACL,eAAY75B,KAAKo6B,eAAgBp6B,KAAKu6B,QAGtC,eAAYv6B,KAAKu6B,OAAQv6B,KAAKo6B,gBAElCp6B,KAAK65B,YAAc75B,KAAK65B,YAO5BF,EAAYz5B,UAAU07B,eAAiB,WACnC,OAAO57B,KAAKi6B,cAOhBN,EAAYz5B,UAAUm7B,eAAiB,SAAUrB,GACzCh6B,KAAKi6B,eAAiBD,IAG1Bh6B,KAAKi6B,aAAeD,EACpBh6B,KAAKynB,QAAQiU,UAAUC,OAAO,qBACzB3B,GAAeh6B,KAAK65B,YACrB75B,KAAKy7B,kBAUb9B,EAAYz5B,UAAU27B,aAAe,SAAU/B,GACtC95B,KAAKi6B,cAAgBj6B,KAAK65B,aAAeC,GAG9C95B,KAAKy7B,iBAQT9B,EAAYz5B,UAAU47B,aAAe,WACjC,OAAO97B,KAAK65B,YAOhBF,EAAYz5B,UAAU+P,OAAS,SAAUypB,GACrC15B,KAAKu7B,eAAe7B,EAAS/lB,aAE1BgmB,EA9PqB,CA+P9B,IACa,M,aCrTX,GAAwC,WACxC,IAAIp6B,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA2CxC,GAAwB,SAAUK,GAKlC,SAAS27B,EAAO/+B,GACZ,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GAC1CsD,EAAQF,EAAOG,KAAKP,KAAM,CACtBynB,QAAS/kB,SAASyE,cAAc,OAChC8I,OAAQzP,EAAQyP,OAChB1N,OAAQ/B,EAAQ+B,UACdvC,KACN,IAAIgH,OAAkCvK,IAAtB+D,EAAQwG,UAA0BxG,EAAQwG,UAAY,YAClEszB,OAA0B79B,IAAlB+D,EAAQ85B,MAAsB95B,EAAQ85B,MAAQ,IAK1Dh6B,EAAMi6B,OAAS,KACM,kBAAVD,GACPh6B,EAAMi6B,OAAS73B,SAASyE,cAAc,QACtC7G,EAAMi6B,OAAOvzB,UAAY,aACzB1G,EAAMi6B,OAAOF,YAAcC,IAG3Bh6B,EAAMi6B,OAASD,EACfh6B,EAAMi6B,OAAOmB,UAAUM,IAAI,eAE/B,IAAI9B,EAAW15B,EAAQ05B,SAAW15B,EAAQ05B,SAAW,iBACjDl3B,EAASN,SAASyE,cAAc,UACpCnE,EAAOgE,UAAYA,EAAY,SAC/BhE,EAAOy3B,aAAa,OAAQ,UAC5Bz3B,EAAO03B,MAAQR,EACfl3B,EAAOsF,YAAYhI,EAAMi6B,QACzBv3B,EAAOqlB,iBAAiB,OAAUsE,MAAOrsB,EAAMq6B,aAAa9rB,KAAKvO,IAAQ,GACzE,IAAIs6B,EAAa5zB,EAAY,IAAM,OAAqB,IAAM,OAC1DygB,EAAUnnB,EAAMmnB,QAsBpB,OArBAA,EAAQzgB,UAAY4zB,EACpBnT,EAAQnf,YAAYtF,GACpB1C,EAAM27B,gBAAkBz7B,EAAQ07B,WAAa17B,EAAQ07B,gBAAaz/B,EAKlE6D,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAKtEN,EAAM67B,eAAiC1/B,IAArB+D,EAAQ47B,UAAyB57B,EAAQ47B,SAK3D97B,EAAM+7B,eAAY5/B,EACd6D,EAAM67B,WACN77B,EAAMmnB,QAAQiU,UAAUM,IAAI,QAEzB17B,EAkEX,OA5HA,GAAUy7B,EAAQ37B,GAgElB27B,EAAO77B,UAAUy6B,aAAe,SAAU74B,GACtCA,EAAML,sBACuBhF,IAAzBuD,KAAKi8B,gBACLj8B,KAAKi8B,kBAGLj8B,KAAKs8B,eAMbP,EAAO77B,UAAUo8B,YAAc,WAC3B,IAAI59B,EAAMsB,KAAKsE,SACX/C,EAAO7C,EAAI8C,UACf,GAAKD,EAAL,CAKA,IAAIgF,EAAWhF,EAAKqD,mBACHnI,IAAb8J,IACIvG,KAAKW,UAAY,GAAK4F,GAAY,EAAIvK,KAAKugC,MAAQ,EACnDh7B,EAAKsZ,QAAQ,CACTtU,SAAU,EACV3F,SAAUZ,KAAKW,UACfmF,OAAQ,UAIZvE,EAAKi7B,YAAY,MAS7BT,EAAO77B,UAAU+P,OAAS,SAAUypB,GAChC,IAAI/lB,EAAa+lB,EAAS/lB,WAC1B,GAAKA,EAAL,CAGA,IAAIpN,EAAWoN,EAAWE,UAAUtN,SACpC,GAAIA,GAAYvG,KAAKq8B,UAAW,CAC5B,IAAIliB,EAAY,UAAY5T,EAAW,OACvC,GAAIvG,KAAKm8B,UAAW,CAChB,IAAI15B,EAAWzC,KAAKynB,QAAQiU,UAAUj5B,SAAS,QAC1CA,GAAyB,IAAb8D,EAGR9D,GAAyB,IAAb8D,GACjBvG,KAAKynB,QAAQiU,UAAU3D,OAAO,QAH9B/3B,KAAKynB,QAAQiU,UAAUM,IAAI,QAMnCh8B,KAAKu6B,OAAOnzB,MAAM+S,UAAYA,EAElCna,KAAKq8B,UAAY91B,IAEdw1B,EA7HgB,CA8HzB,IACa,MC1KX,GAAwC,WACxC,IAAIx8B,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA0CxC,GAAsB,SAAUK,GAKhC,SAASq8B,EAAKz/B,GACV,IAAIsD,EAAQN,KACRQ,EAAUxD,GAA4B,GAC1CsD,EAAQF,EAAOG,KAAKP,KAAM,CACtBynB,QAAS/kB,SAASyE,cAAc,OAChC5E,OAAQ/B,EAAQ+B,UACdvC,KACN,IAAIgH,OAAkCvK,IAAtB+D,EAAQwG,UAA0BxG,EAAQwG,UAAY,UAClEtG,OAA0BjE,IAAlB+D,EAAQE,MAAsBF,EAAQE,MAAQ,EACtDg8B,OAAsCjgC,IAAxB+D,EAAQk8B,YAA4Bl8B,EAAQk8B,YAAc,IACxEC,OAAwClgC,IAAzB+D,EAAQm8B,aAA6Bn8B,EAAQm8B,aAAe,IAC3EC,OAA4CngC,IAA3B+D,EAAQo8B,eAA+Bp8B,EAAQo8B,eAAiB,UACjFC,OAA8CpgC,IAA5B+D,EAAQq8B,gBACxBr8B,EAAQq8B,gBACR,WACFC,EAAYp6B,SAASyE,cAAc,UACvC21B,EAAU91B,UAAYA,EAAY,MAClC81B,EAAUrC,aAAa,OAAQ,UAC/BqC,EAAUpC,MAAQkC,EAClBE,EAAUx0B,YAAmC,kBAAhBo0B,EACvBh6B,SAASq6B,eAAeL,GACxBA,GACNI,EAAUzU,iBAAiB,OAAUsE,MAAOrsB,EAAMq6B,aAAa9rB,KAAKvO,EAAOI,IAAQ,GACnF,IAAIs8B,EAAat6B,SAASyE,cAAc,UACxC61B,EAAWh2B,UAAYA,EAAY,OACnCg2B,EAAWvC,aAAa,OAAQ,UAChCuC,EAAWtC,MAAQmC,EACnBG,EAAW10B,YAAoC,kBAAjBq0B,EACxBj6B,SAASq6B,eAAeJ,GACxBA,GACNK,EAAW3U,iBAAiB,OAAUsE,MAAOrsB,EAAMq6B,aAAa9rB,KAAKvO,GAAQI,IAAQ,GACrF,IAAIk6B,EAAa5zB,EAAY,IAAM,OAAqB,IAAM,OAC1DygB,EAAUnnB,EAAMmnB,QASpB,OARAA,EAAQzgB,UAAY4zB,EACpBnT,EAAQnf,YAAYw0B,GACpBrV,EAAQnf,YAAY00B,GAKpB18B,EAAMK,eAAiClE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAC/DN,EAyCX,OAtFA,GAAUm8B,EAAMr8B,GAoDhBq8B,EAAKv8B,UAAUy6B,aAAe,SAAUj6B,EAAOoB,GAC3CA,EAAML,iBACNzB,KAAKi9B,aAAav8B,IAMtB+7B,EAAKv8B,UAAU+8B,aAAe,SAAUv8B,GACpC,IAAIhC,EAAMsB,KAAKsE,SACX/C,EAAO7C,EAAI8C,UACf,GAAKD,EAAL,CAKA,IAAI27B,EAAc37B,EAAK47B,UACvB,QAAoB1gC,IAAhBygC,EAA2B,CAC3B,IAAIE,EAAU77B,EAAK87B,mBAAmBH,EAAcx8B,GAChDV,KAAKW,UAAY,GACbY,EAAK0E,gBACL1E,EAAK2E,mBAET3E,EAAKsZ,QAAQ,CACTzG,KAAMgpB,EACNx8B,SAAUZ,KAAKW,UACfmF,OAAQ,WAIZvE,EAAK+7B,QAAQF,MAIlBX,EAvFc,CAwFvB,IACa,MCrFR,SAAShsB,GAASzT,GACrB,IAAIwD,EAAUxD,GAA4B,GACtC+1B,EAAW,IAAIpiB,EAAA,KACf4sB,OAA+B9gC,IAAjB+D,EAAQ4T,MAAqB5T,EAAQ4T,KACnDmpB,GACAxK,EAASxmB,KAAK,IAAI,GAAK/L,EAAQg9B,cAEnC,IAAIC,OAAmChhC,IAAnB+D,EAAQk9B,QAAuBl9B,EAAQk9B,OACvDD,GACA1K,EAASxmB,KAAK,IAAI,GAAO/L,EAAQm9B,gBAErC,IAAIC,OAA6CnhC,IAAxB+D,EAAQq9B,aAA4Br9B,EAAQq9B,YAIrE,OAHID,GACA7K,EAASxmB,KAAK,IAAI,GAAY/L,EAAQs9B,qBAEnC/K,E,iBC7DP,GAAwC,WACxC,IAAIxzB,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAoExC,GAAqB,SAAUK,GAK/B,SAAS29B,EAAIv9B,GACT,IAAIF,EAAQN,KAWZ,OAVAQ,EAAU,eAAO,GAAIA,GAChBA,EAAQuyB,WACTvyB,EAAQuyB,SAAW,MAElBvyB,EAAQkQ,eACTlQ,EAAQkQ,aAAe,gBAAoB,CACvCvM,aAAa,KAGrB7D,EAAQF,EAAOG,KAAKP,KAAMQ,IAAYR,KAC/BM,EAKX,OArBA,GAAUy9B,EAAK39B,GAkBf29B,EAAI79B,UAAU6b,eAAiB,WAC3B,OAAO,IAAI+L,EAAqB9nB,OAE7B+9B,EAtBa,CAuBtB,IACa,W,oCC5Ff,oGAeIC,EAAe,CAAC,EAAG,EAAG,GAqCtBC,EAA0B,WAI1B,SAASA,EAASz9B,GAed,IAAI09B,EACJ,GAXAl+B,KAAK5C,aAA8BX,IAApB+D,EAAQpD,QAAwBoD,EAAQpD,QAAU,EAKjE4C,KAAKm+B,aAAe39B,EAAQ7D,YAC5B,eAAO,eAASqD,KAAKm+B,cAAc,SAAU/W,EAAG3nB,GAC5C,OAAOA,EAAI2nB,KACZ,GAAO,KAGL5mB,EAAQ49B,QACT,IAAK,IAAIp8B,EAAI,EAAGC,EAAKjC,KAAKm+B,aAAaxgC,OAAS,EAAGqE,EAAIC,IAAMD,EACzD,GAAKk8B,GAID,GAAIl+B,KAAKm+B,aAAan8B,GAAKhC,KAAKm+B,aAAan8B,EAAI,KAAOk8B,EAAY,CAChEA,OAAazhC,EACb,YALJyhC,EAAal+B,KAAKm+B,aAAan8B,GAAKhC,KAAKm+B,aAAan8B,EAAI,GActEhC,KAAKq+B,YAAcH,EAKnBl+B,KAAK3C,QAAU2C,KAAKm+B,aAAaxgC,OAAS,EAK1CqC,KAAKs+B,aAA6B7hC,IAAnB+D,EAAQ3D,OAAuB2D,EAAQ3D,OAAS,KAK/DmD,KAAKu+B,SAAW,UACQ9hC,IAApB+D,EAAQ49B,UACRp+B,KAAKu+B,SAAW/9B,EAAQ49B,QACxB,eAAOp+B,KAAKu+B,SAAS5gC,QAAUqC,KAAKm+B,aAAaxgC,OAAQ,KAE7D,IAAIvB,EAASoE,EAAQpE,YACNK,IAAXL,GAAyB4D,KAAKs+B,SAAYt+B,KAAKu+B,WAC/Cv+B,KAAKs+B,QAAU,eAAWliC,IAE9B,gBAAS4D,KAAKs+B,SAAWt+B,KAAKu+B,UAAcv+B,KAAKs+B,UAAYt+B,KAAKu+B,SAAW,IAK7Ev+B,KAAKw+B,WAAa,UACQ/hC,IAAtB+D,EAAQi+B,YACRz+B,KAAKw+B,WAAah+B,EAAQi+B,UAC1B,eAAOz+B,KAAKw+B,WAAW7gC,QAAUqC,KAAKm+B,aAAaxgC,OAAQ,KAM/DqC,KAAK0+B,eACoBjiC,IAArB+D,EAAQ1D,SACF0D,EAAQ1D,SACPkD,KAAKw+B,WAEF,KADA,OAEd,gBAASx+B,KAAK0+B,WAAa1+B,KAAKw+B,YAC3Bx+B,KAAK0+B,YAAc1+B,KAAKw+B,WAAa,IAK1Cx+B,KAAK2+B,aAAqBliC,IAAXL,EAAuBA,EAAS,KAK/C4D,KAAK4+B,gBAAkB,KAKvB5+B,KAAK6+B,SAAW,CAAC,EAAG,QACEpiC,IAAlB+D,EAAQs+B,MACR9+B,KAAK4+B,gBAAkBp+B,EAAQs+B,MAAMpgC,KAAI,SAAU8H,EAAM/K,GACrD,IAAIuD,EAAY,IAAI,OAAUhD,KAAKiM,IAAI,EAAGzB,EAAK,IAAKxK,KAAK0B,IAAI8I,EAAK,GAAK,GAAI,GAAIxK,KAAKiM,IAAI,EAAGzB,EAAK,IAAKxK,KAAK0B,IAAI8I,EAAK,GAAK,GAAI,IAC5H,OAAOxH,IACRgB,MAEE5D,GACL4D,KAAK++B,qBAAqB3iC,GAsVlC,OA3UA6hC,EAAS/9B,UAAU8+B,iBAAmB,SAAU5iC,EAAQgY,EAAMgM,GAE1D,IADA,IAAIphB,EAAYgB,KAAKf,0BAA0B7C,EAAQgY,GAC9CpS,EAAIhD,EAAU2W,KAAM1T,EAAKjD,EAAU4W,KAAM5T,GAAKC,IAAMD,EACzD,IAAK,IAAIyjB,EAAIzmB,EAAU6W,KAAMylB,EAAKt8B,EAAU8W,KAAM2P,GAAK6V,IAAM7V,EACzDrF,EAAS,CAAChM,EAAMpS,EAAGyjB,KAW/BwY,EAAS/9B,UAAUsW,gCAAkC,SAAUhb,EAAW4kB,EAAU6e,EAAeC,GAC/F,IAAIlgC,EAAWd,EAAGC,EACdghC,EAAkB,KAClB1jC,EAAID,EAAU,GAAK,EACE,IAArBwE,KAAKq+B,aACLngC,EAAI1C,EAAU,GACd2C,EAAI3C,EAAU,IAGd2jC,EAAkBn/B,KAAKwY,mBAAmBhd,EAAW0jC,GAEzD,MAAOzjC,GAAKuE,KAAK5C,QAAS,CAStB,GARyB,IAArB4C,KAAKq+B,aACLngC,EAAIlC,KAAKojC,MAAMlhC,EAAI,GACnBC,EAAInC,KAAKojC,MAAMjhC,EAAI,GACnBa,EAAY,eAAwBd,EAAGA,EAAGC,EAAGA,EAAG8gC,IAGhDjgC,EAAYgB,KAAKf,0BAA0BkgC,EAAiB1jC,EAAGwjC,GAE/D7e,EAAS3kB,EAAGuD,GACZ,OAAO,IAETvD,EAEN,OAAO,GAOXwiC,EAAS/9B,UAAUhD,UAAY,WAC3B,OAAO8C,KAAK2+B,SAOhBV,EAAS/9B,UAAUnB,WAAa,WAC5B,OAAOiB,KAAK3C,SAOhB4gC,EAAS/9B,UAAUpB,WAAa,WAC5B,OAAOkB,KAAK5C,SAQhB6gC,EAAS/9B,UAAUm/B,UAAY,SAAU5jC,GACrC,OAAIuE,KAAKs+B,QACEt+B,KAAKs+B,QAGLt+B,KAAKu+B,SAAS9iC,IAS7BwiC,EAAS/9B,UAAUyE,cAAgB,SAAUlJ,GACzC,OAAOuE,KAAKm+B,aAAa1iC,IAO7BwiC,EAAS/9B,UAAUo/B,eAAiB,WAChC,OAAOt/B,KAAKm+B,cAQhBF,EAAS/9B,UAAUoW,2BAA6B,SAAU9a,EAAWyjC,EAAeC,GAChF,GAAI1jC,EAAU,GAAKwE,KAAK3C,QAAS,CAC7B,GAAyB,IAArB2C,KAAKq+B,YAAmB,CACxB,IAAI1oB,EAAsB,EAAfna,EAAU,GACjBqa,EAAsB,EAAfra,EAAU,GACrB,OAAO,eAAwBma,EAAMA,EAAO,EAAGE,EAAMA,EAAO,EAAGopB,GAEnE,IAAIE,EAAkBn/B,KAAKwY,mBAAmBhd,EAAW0jC,GACzD,OAAOl/B,KAAKf,0BAA0BkgC,EAAiB3jC,EAAU,GAAK,EAAGyjC,GAE7E,OAAO,MASXhB,EAAS/9B,UAAUq/B,mBAAqB,SAAU9jC,EAAGuD,EAAWkgC,GAC5D,IAAIriC,EAASmD,KAAKq/B,UAAU5jC,GACxB8O,EAAavK,KAAK2E,cAAclJ,GAChCqB,EAAW,eAAOkD,KAAKw/B,YAAY/jC,GAAIuE,KAAK6+B,UAC5ClpB,EAAO9Y,EAAO,GAAKmC,EAAU2W,KAAO7Y,EAAS,GAAKyN,EAClDqL,EAAO/Y,EAAO,IAAMmC,EAAU4W,KAAO,GAAK9Y,EAAS,GAAKyN,EACxDsL,EAAOhZ,EAAO,GAAKmC,EAAU6W,KAAO/Y,EAAS,GAAKyN,EAClDuL,EAAOjZ,EAAO,IAAMmC,EAAU8W,KAAO,GAAKhZ,EAAS,GAAKyN,EAC5D,OAAO,eAAeoL,EAAME,EAAMD,EAAME,EAAMopB,IASlDjB,EAAS/9B,UAAUjB,0BAA4B,SAAU7C,EAAQX,EAAGwjC,GAChE,IAAIzjC,EAAYwiC,EAChBh+B,KAAKy/B,uBAAuBrjC,EAAO,GAAIA,EAAO,GAAIX,GAAG,EAAOD,GAC5D,IAAIma,EAAOna,EAAU,GACjBqa,EAAOra,EAAU,GAErB,OADAwE,KAAKy/B,uBAAuBrjC,EAAO,GAAIA,EAAO,GAAIX,GAAG,EAAMD,GACpD,eAAwBma,EAAMna,EAAU,GAAIqa,EAAMra,EAAU,GAAIyjC,IAM3EhB,EAAS/9B,UAAUvE,mBAAqB,SAAUH,GAC9C,IAAIqB,EAASmD,KAAKq/B,UAAU7jC,EAAU,IAClC+O,EAAavK,KAAK2E,cAAcnJ,EAAU,IAC1CsB,EAAW,eAAOkD,KAAKw/B,YAAYhkC,EAAU,IAAKwE,KAAK6+B,UAC3D,MAAO,CACHhiC,EAAO,IAAMrB,EAAU,GAAK,IAAOsB,EAAS,GAAKyN,EACjD1N,EAAO,IAAMrB,EAAU,GAAK,IAAOsB,EAAS,GAAKyN,IAWzD0zB,EAAS/9B,UAAUsY,mBAAqB,SAAUhd,EAAW0jC,GACzD,IAAIriC,EAASmD,KAAKq/B,UAAU7jC,EAAU,IAClC+O,EAAavK,KAAK2E,cAAcnJ,EAAU,IAC1CsB,EAAW,eAAOkD,KAAKw/B,YAAYhkC,EAAU,IAAKwE,KAAK6+B,UACvDlpB,EAAO9Y,EAAO,GAAKrB,EAAU,GAAKsB,EAAS,GAAKyN,EAChDsL,EAAOhZ,EAAO,IAAMrB,EAAU,GAAK,GAAKsB,EAAS,GAAKyN,EACtDqL,EAAOD,EAAO7Y,EAAS,GAAKyN,EAC5BuL,EAAOD,EAAO/Y,EAAS,GAAKyN,EAChC,OAAO,eAAeoL,EAAME,EAAMD,EAAME,EAAMopB,IAalDjB,EAAS/9B,UAAUw/B,kCAAoC,SAAUr+B,EAAYkJ,EAAYnM,GACrF,OAAO4B,KAAK2/B,gCAAgCt+B,EAAW,GAAIA,EAAW,GAAIkJ,GAAY,EAAOnM,IAejG6/B,EAAS/9B,UAAUy/B,gCAAkC,SAAUzhC,EAAGC,EAAGoM,EAAYq1B,EAA2BxhC,GACxG,IAAI3C,EAAIuE,KAAK+U,kBAAkBxK,GAC3Bs1B,EAAQt1B,EAAavK,KAAK2E,cAAclJ,GACxCoB,EAASmD,KAAKq/B,UAAU5jC,GACxBqB,EAAW,eAAOkD,KAAKw/B,YAAY/jC,GAAIuE,KAAK6+B,UAC5CiB,EAAUF,EAA4B,GAAM,EAC5CG,EAAUH,EAA4B,GAAM,EAC5CI,EAAchkC,KAAKojC,OAAOlhC,EAAIrB,EAAO,IAAM0N,EAAau1B,GACxDG,EAAcjkC,KAAKojC,OAAOviC,EAAO,GAAKsB,GAAKoM,EAAaw1B,GACxDG,EAAcL,EAAQG,EAAeljC,EAAS,GAC9CqjC,EAAcN,EAAQI,EAAenjC,EAAS,GASlD,OARI8iC,GACAM,EAAalkC,KAAKC,KAAKikC,GAAc,EACrCC,EAAankC,KAAKC,KAAKkkC,GAAc,IAGrCD,EAAalkC,KAAKojC,MAAMc,GACxBC,EAAankC,KAAKojC,MAAMe,IAErB,eAAwB1kC,EAAGykC,EAAYC,EAAY/hC,IAiB9D6/B,EAAS/9B,UAAUu/B,uBAAyB,SAAUvhC,EAAGC,EAAG1C,EAAGmkC,EAA2BxhC,GACtF,IAAIvB,EAASmD,KAAKq/B,UAAU5jC,GACxB8O,EAAavK,KAAK2E,cAAclJ,GAChCqB,EAAW,eAAOkD,KAAKw/B,YAAY/jC,GAAIuE,KAAK6+B,UAC5CiB,EAAUF,EAA4B,GAAM,EAC5CG,EAAUH,EAA4B,GAAM,EAC5CI,EAAchkC,KAAKojC,OAAOlhC,EAAIrB,EAAO,IAAM0N,EAAau1B,GACxDG,EAAcjkC,KAAKojC,OAAOviC,EAAO,GAAKsB,GAAKoM,EAAaw1B,GACxDG,EAAaF,EAAcljC,EAAS,GACpCqjC,EAAaF,EAAcnjC,EAAS,GASxC,OARI8iC,GACAM,EAAalkC,KAAKC,KAAKikC,GAAc,EACrCC,EAAankC,KAAKC,KAAKkkC,GAAc,IAGrCD,EAAalkC,KAAKojC,MAAMc,GACxBC,EAAankC,KAAKojC,MAAMe,IAErB,eAAwB1kC,EAAGykC,EAAYC,EAAY/hC,IAU9D6/B,EAAS/9B,UAAUhE,yBAA2B,SAAUmF,EAAY5F,EAAG2C,GACnE,OAAO4B,KAAKy/B,uBAAuBp+B,EAAW,GAAIA,EAAW,GAAI5F,GAAG,EAAO2C,IAM/E6/B,EAAS/9B,UAAUkgC,uBAAyB,SAAU5kC,GAClD,OAAOwE,KAAKm+B,aAAa3iC,EAAU,KAUvCyiC,EAAS/9B,UAAUs/B,YAAc,SAAU/jC,GACvC,OAAIuE,KAAK0+B,UACE1+B,KAAK0+B,UAGL1+B,KAAKw+B,WAAW/iC,IAO/BwiC,EAAS/9B,UAAUhB,iBAAmB,SAAUzD,GAC5C,OAAKuE,KAAK4+B,gBAIC5+B,KAAK4+B,gBAAgBnjC,GAHrB,MAcfwiC,EAAS/9B,UAAU6U,kBAAoB,SAAUxK,EAAY81B,GACzD,IAAI5kC,EAAI,eAAkBuE,KAAKm+B,aAAc5zB,EAAY81B,GAAiB,GAC1E,OAAO,eAAM5kC,EAAGuE,KAAK5C,QAAS4C,KAAK3C,UAMvC4gC,EAAS/9B,UAAU6+B,qBAAuB,SAAU3iC,GAGhD,IAFA,IAAIuB,EAASqC,KAAKm+B,aAAaxgC,OAC3B2iC,EAAiB,IAAI1iC,MAAMD,GACtBlC,EAAIuE,KAAK5C,QAAS3B,EAAIkC,IAAUlC,EACrC6kC,EAAe7kC,GAAKuE,KAAKf,0BAA0B7C,EAAQX,GAE/DuE,KAAK4+B,gBAAkB0B,GAEpBrC,EA/bkB,GAicd,U,oCCrff,wJAWO,SAASsC,EAAQh6B,GACpB,YAAiB9J,IAAb8J,EACO,OAGP,EAOD,SAASi6B,EAAKj6B,GACjB,YAAiB9J,IAAb8J,EACOA,OAGP,EAOD,SAASk6B,EAAc9Q,GAC1B,IAAI/oB,EAAS,EAAI5K,KAAKugC,GAAM5M,EAC5B,OAAO,SAMGppB,EAAUm6B,GAChB,OAAIA,EACOn6B,OAEM9J,IAAb8J,GACAA,EAAWvK,KAAKojC,MAAM74B,EAAWK,EAAQ,IAAOA,EACzCL,QAGP,GAQL,SAASo6B,EAAiBC,GAC7B,IAAIC,EAAYD,GAAiB,eAAU,GAC3C,OAAO,SAMGr6B,EAAUm6B,GAChB,OAAIA,EACOn6B,OAEM9J,IAAb8J,EACIvK,KAAKmM,IAAI5B,IAAas6B,EACf,EAGAt6B,OAIX,K,sFC3EG,GACXu6B,OAAQ,SACRC,WAAY,aACZC,SAAU,Y,oFCKP,SAASC,EAAa7kC,EAAQ8kC,EAAYC,GAC7C,OAAO,SAQGzlC,EAAQ6O,EAAY/D,EAAMk6B,GAChC,GAAIhlC,EAAQ,CACR,IAAI0lC,EAAYF,EAAa,EAAI16B,EAAK,GAAK+D,EACvC82B,EAAaH,EAAa,EAAI16B,EAAK,GAAK+D,EACxCoL,EAAOvZ,EAAO,GAAKglC,EAAY,EAC/BxrB,EAAOxZ,EAAO,GAAKglC,EAAY,EAC/BvrB,EAAOzZ,EAAO,GAAKilC,EAAa,EAChCvrB,EAAO1Z,EAAO,GAAKilC,EAAa,EAGhC1rB,EAAOC,IACPD,GAAQC,EAAOD,GAAQ,EACvBC,EAAOD,GAEPE,EAAOC,IACPD,GAAQC,EAAOD,GAAQ,EACvBC,EAAOD,GAEX,IAAI3X,EAAI,eAAMxC,EAAO,GAAIia,EAAMC,GAC3BzX,EAAI,eAAMzC,EAAO,GAAIma,EAAMC,GAC3BwrB,EAAQ,GAAK/2B,EAUjB,OARIm2B,GAAgBS,IAChBjjC,IACKojC,EAAQtlC,KAAKi1B,IAAI,EAAIj1B,KAAK0B,IAAI,EAAGiY,EAAOja,EAAO,IAAM4lC,GAClDA,EAAQtlC,KAAKi1B,IAAI,EAAIj1B,KAAK0B,IAAI,EAAGhC,EAAO,GAAKka,GAAQ0rB,GAC7DnjC,IACKmjC,EAAQtlC,KAAKi1B,IAAI,EAAIj1B,KAAK0B,IAAI,EAAGmY,EAAOna,EAAO,IAAM4lC,GAClDA,EAAQtlC,KAAKi1B,IAAI,EAAIj1B,KAAK0B,IAAI,EAAGhC,EAAO,GAAKoa,GAAQwrB,IAE1D,CAACpjC,EAAGC,KAWhB,SAASqiC,EAAK9kC,GACjB,OAAOA,E,4BC/CX,SAAS6lC,EAA6Bh3B,EAAYi3B,EAAWC,EAAcC,GACvE,IAAIC,EAAc,eAASH,GAAaC,EAAa,GACjDG,EAAc,eAAUJ,GAAaC,EAAa,GACtD,OAAIC,EACO1lC,KAAKiM,IAAIsC,EAAYvO,KAAK0B,IAAIikC,EAAaC,IAE/C5lC,KAAKiM,IAAIsC,EAAYvO,KAAKiM,IAAI05B,EAAaC,IActD,SAASC,EAA2Bt3B,EAAYjN,EAAeysB,GAC3D,IAAIpF,EAAS3oB,KAAKiM,IAAIsC,EAAYjN,GAC9BgkC,EAAQ,GAWZ,OAVA3c,GACI3oB,KAAKi1B,IAAI,EAAIqQ,EAAQtlC,KAAK0B,IAAI,EAAG6M,EAAajN,EAAgB,IAAMgkC,EAChE,EACJvX,IACApF,EAAS3oB,KAAK0B,IAAIinB,EAAQoF,GAC1BpF,GACI3oB,KAAKi1B,IAAI,EAAIqQ,EAAQtlC,KAAK0B,IAAI,EAAGqsB,EAAgBxf,EAAa,IAC1D+2B,EACA,GAEL,eAAM3c,EAAQoF,EAAgB,EAAmB,EAAhBzsB,GASrC,SAASwkC,EAAwBnlC,EAAaolC,EAAYC,EAAeC,GAC5E,OAAO,SAQG13B,EAAYiG,EAAWhK,EAAMk6B,GACnC,QAAmBjkC,IAAf8N,EAA0B,CAC1B,IAAIjN,EAAgBX,EAAY,GAC5BotB,EAAgBptB,EAAYA,EAAYgB,OAAS,GACjDukC,EAAeF,EACbT,EAA6BjkC,EAAe0kC,EAAex7B,EAAMy7B,GACjE3kC,EAEN,GAAIojC,EAAc,CACd,IAAIS,OAAwB1kC,IAAfslC,GAA2BA,EACxC,OAAKZ,EAGEU,EAA2Bt3B,EAAY23B,EAAcnY,GAFjD,eAAMxf,EAAYwf,EAAemY,GAIhD,IAAIC,EAASnmC,KAAKiM,IAAIi6B,EAAc33B,GAChC9O,EAAIO,KAAKojC,MAAM,eAAkBziC,EAAawlC,EAAQ3xB,IAC1D,OAAI7T,EAAYlB,GAAKymC,GAAgBzmC,EAAIkB,EAAYgB,OAAS,EACnDhB,EAAYlB,EAAI,GAEpBkB,EAAYlB,KAgBxB,SAAS2mC,EAAkBC,EAAO/kC,EAAeglC,EAAmBP,EAAYC,EAAeC,GAClG,OAAO,SAQG13B,EAAYiG,EAAWhK,EAAMk6B,GACnC,QAAmBjkC,IAAf8N,EAA0B,CAC1B,IAAI23B,EAAeF,EACbT,EAA6BjkC,EAAe0kC,EAAex7B,EAAMy7B,GACjE3kC,EACFysB,OAAsCttB,IAAtB6lC,EAAkCA,EAAoB,EAE1E,GAAI5B,EAAc,CACd,IAAIS,OAAwB1kC,IAAfslC,GAA2BA,EACxC,OAAKZ,EAGEU,EAA2Bt3B,EAAY23B,EAAcnY,GAFjD,eAAMxf,EAAYwf,EAAemY,GAIhD,IAAIrB,EAAY,KACZ0B,EAAevmC,KAAKC,KAAKD,KAAKi1B,IAAI3zB,EAAgB4kC,GAAgBlmC,KAAKi1B,IAAIoR,GAASxB,GACpFn6B,GAAU8J,GAAa,GAAMqwB,GAAa,GAC1CsB,EAASnmC,KAAKiM,IAAIi6B,EAAc33B,GAChCi4B,EAAkBxmC,KAAKojC,MAAMpjC,KAAKi1B,IAAI3zB,EAAgB6kC,GAAUnmC,KAAKi1B,IAAIoR,GAAS37B,GAClF+7B,EAAYzmC,KAAK0B,IAAI6kC,EAAcC,GACnCE,EAAgBplC,EAAgBtB,KAAK6B,IAAIwkC,EAAOI,GACpD,OAAO,eAAMC,EAAe3Y,EAAemY,KAehD,SAASS,EAAuBrlC,EAAeysB,EAAegY,EAAYC,EAAeC,GAC5F,OAAO,SAQG13B,EAAYiG,EAAWhK,EAAMk6B,GACnC,QAAmBjkC,IAAf8N,EAA0B,CAC1B,IAAI23B,EAAeF,EACbT,EAA6BjkC,EAAe0kC,EAAex7B,EAAMy7B,GACjE3kC,EACF6jC,OAAwB1kC,IAAfslC,GAA2BA,EACxC,OAAKZ,GAAWT,EAGTmB,EAA2Bt3B,EAAY23B,EAAcnY,GAFjD,eAAMxf,EAAYwf,EAAemY,K,wCCtKpD5iC,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAgMxC6iC,EAAmB,EAyEnB,EAAsB,SAAUxiC,GAKhC,SAASk5B,EAAKt8B,GACV,IAAIsD,EAAQF,EAAOG,KAAKP,OAASA,KAC7BQ,EAAU,eAAO,GAAIxD,GAsDzB,OAjDAsD,EAAMuiC,OAAS,CAAC,EAAG,GAKnBviC,EAAMwiC,YAAc,GAKpBxiC,EAAMyiC,oBAMNziC,EAAM0iC,YAAc,eAAiBxiC,EAAQtF,WAAY,aAKzDoF,EAAM2iC,cAAgB,CAAC,IAAK,KAK5B3iC,EAAM4iC,cAAgB,KAKtB5iC,EAAM6iC,kBAKN7iC,EAAM8iC,gBAKN9iC,EAAM+iC,mBAAgB5mC,EAClB+D,EAAQ9E,SACR8E,EAAQ9E,OAAS,eAAmB8E,EAAQ9E,OAAQ4E,EAAM0iC,cAE1DxiC,EAAQpE,SACRoE,EAAQpE,OAAS,eAAeoE,EAAQpE,OAAQkE,EAAM0iC,cAE1D1iC,EAAMgjC,cAAc9iC,GACbF,EAsoCX,OAlsCAhB,EAAUg6B,EAAMl5B,GAkEhBk5B,EAAKp5B,UAAUojC,cAAgB,SAAU9iC,GAIrC,IAAI+iC,EAAa,GACbC,EAA2BC,EAA2BjjC,GAK1DR,KAAK0jC,eAAiBF,EAAyBlmC,cAK/C0C,KAAK2jC,eAAiBH,EAAyBzZ,cAK/C/pB,KAAKq+B,YAAcmF,EAAyBtF,WAK5Cl+B,KAAKm+B,aAAe39B,EAAQ7D,YAK5BqD,KAAK4jC,SAAWJ,EAAyBpmC,QACzC,IAAIymC,EAAmBC,EAAuBtjC,GAC1CujC,EAAuBP,EAAyBQ,WAChDC,EAAqBC,EAAyB1jC,GAKlDR,KAAKmkC,aAAe,CAChBzoC,OAAQmoC,EACRt5B,WAAYw5B,EACZx9B,SAAU09B,GAEdjkC,KAAKw8B,iBAAiC//B,IAArB+D,EAAQ+F,SAAyB/F,EAAQ+F,SAAW,GACrEvG,KAAKokC,uBAAqC3nC,IAAnB+D,EAAQ9E,OAAuB8E,EAAQ9E,OAAS,WAC5Ce,IAAvB+D,EAAQ+J,WACRvK,KAAKqkC,cAAc7jC,EAAQ+J,iBAEL9N,IAAjB+D,EAAQ4T,MACbpU,KAAKs9B,QAAQ98B,EAAQ4T,MAEzBpU,KAAK6zB,cAAc0P,GAKnBvjC,KAAKskC,SAAW9jC,GAUpB84B,EAAKp5B,UAAUqkC,mBAAqB,SAAUC,GAC1C,IAAIhkC,EAAU,eAAO,GAAIR,KAAKskC,UAY9B,YAV2B7nC,IAAvB+D,EAAQ+J,WACR/J,EAAQ+J,WAAavK,KAAK2E,gBAG1BnE,EAAQ4T,KAAOpU,KAAKm9B,UAGxB38B,EAAQ9E,OAASsE,KAAKqF,oBAEtB7E,EAAQ+F,SAAWvG,KAAK4E,cACjB,eAAO,GAAIpE,EAASgkC,IAmC/BlL,EAAKp5B,UAAU2a,QAAU,SAAUlZ,GAC3B3B,KAAKo4B,UAAYp4B,KAAKiG,gBACtBjG,KAAKg3B,mBAAmB,GAG5B,IADA,IAAIyN,EAAO,IAAI7mC,MAAMiE,UAAUlE,QACtBqE,EAAI,EAAGA,EAAIyiC,EAAK9mC,SAAUqE,EAAG,CAClC,IAAIxB,EAAUqB,UAAUG,GACpBxB,EAAQ9E,SACR8E,EAAU,eAAO,GAAIA,GACrBA,EAAQ9E,OAAS,eAAmB8E,EAAQ9E,OAAQsE,KAAKw1B,kBAEzDh1B,EAAQY,SACRZ,EAAU,eAAO,GAAIA,GACrBA,EAAQY,OAAS,eAAmBZ,EAAQY,OAAQpB,KAAKw1B,kBAE7DiP,EAAKziC,GAAKxB,EAEdR,KAAK4F,gBAAgBmqB,MAAM/vB,KAAMykC,IAKrCnL,EAAKp5B,UAAU0F,gBAAkB,SAAUjE,GACvC,IACIye,EADAskB,EAAiB7iC,UAAUlE,OAO/B,GALI+mC,EAAiB,GACwB,oBAAlC7iC,UAAU6iC,EAAiB,KAClCtkB,EAAWve,UAAU6iC,EAAiB,KACpCA,IAED1kC,KAAKo4B,QAAS,CAEf,IAAI7H,EAAQ1uB,UAAU6iC,EAAiB,GAavC,OAZInU,EAAM70B,QACNsE,KAAKokC,kBAAkB7T,EAAM70B,aAEde,IAAf8zB,EAAMnc,MACNpU,KAAKs9B,QAAQ/M,EAAMnc,WAEA3X,IAAnB8zB,EAAMhqB,UACNvG,KAAKw8B,YAAYjM,EAAMhqB,eAEvB6Z,GACAukB,EAAkBvkB,GAAU,IASpC,IALA,IAAIwkB,EAAQp4B,KAAKC,MACb/Q,EAASsE,KAAKkjC,cAAcv6B,QAC5B4B,EAAavK,KAAKmjC,kBAClB58B,EAAWvG,KAAKojC,gBAChByB,EAAS,GACJ7iC,EAAI,EAAGA,EAAI0iC,IAAkB1iC,EAAG,CACrC,IAAIxB,EAA2CqB,UAAUG,GACrD8iC,EAAY,CACZF,MAAOA,EACPG,UAAU,EACV3jC,OAAQZ,EAAQY,OAChBR,cAA+BnE,IAArB+D,EAAQI,SAAyBJ,EAAQI,SAAW,IAC9DkF,OAAQtF,EAAQsF,QAAU,OAC1Bsa,SAAUA,GAiBd,GAfI5f,EAAQ9E,SACRopC,EAAUE,aAAetpC,EACzBopC,EAAUG,aAAezkC,EAAQ9E,OAAOiN,QACxCjN,EAASopC,EAAUG,mBAEFxoC,IAAjB+D,EAAQ4T,MACR0wB,EAAUI,iBAAmB36B,EAC7Bu6B,EAAUK,iBAAmBnlC,KAAKolC,qBAAqB5kC,EAAQ4T,MAC/D7J,EAAau6B,EAAUK,kBAElB3kC,EAAQ+J,aACbu6B,EAAUI,iBAAmB36B,EAC7Bu6B,EAAUK,iBAAmB3kC,EAAQ+J,WACrCA,EAAau6B,EAAUK,uBAEF1oC,IAArB+D,EAAQ+F,SAAwB,CAChCu+B,EAAUO,eAAiB9+B,EAC3B,IAAI7F,EAAQ,eAAOF,EAAQ+F,SAAWA,EAAWvK,KAAKugC,GAAI,EAAIvgC,KAAKugC,IAAMvgC,KAAKugC,GAC9EuI,EAAUQ,eAAiB/+B,EAAW7F,EACtC6F,EAAWu+B,EAAUQ,eAGrBC,EAAgBT,GAChBA,EAAUC,UAAW,EAIrBH,GAASE,EAAUlkC,SAEvBikC,EAAOt4B,KAAKu4B,GAEhB9kC,KAAK8iC,YAAYv2B,KAAKs4B,GACtB7kC,KAAKwlC,QAAQ7O,EAAA,KAASC,UAAW,GACjC52B,KAAKylC,qBAOTnM,EAAKp5B,UAAU+F,aAAe,WAC1B,OAAOjG,KAAK6iC,OAAOlM,EAAA,KAASC,WAAa,GAO7C0C,EAAKp5B,UAAUwlC,eAAiB,WAC5B,OAAO1lC,KAAK6iC,OAAOlM,EAAA,KAASE,aAAe,GAM/CyC,EAAKp5B,UAAUgG,iBAAmB,WAE9B,IAAI9E,EADJpB,KAAKwlC,QAAQ7O,EAAA,KAASC,WAAY52B,KAAK6iC,OAAOlM,EAAA,KAASC,YAEvD,IAAK,IAAI50B,EAAI,EAAGC,EAAKjC,KAAK8iC,YAAYnlC,OAAQqE,EAAIC,IAAMD,EAAG,CACvD,IAAI6iC,EAAS7kC,KAAK8iC,YAAY9gC,GAI9B,GAHI6iC,EAAO,GAAGzkB,UACVukB,EAAkBE,EAAO,GAAGzkB,UAAU,IAErChf,EACD,IAAK,IAAIqkB,EAAI,EAAG6V,EAAKuJ,EAAOlnC,OAAQ8nB,EAAI6V,IAAM7V,EAAG,CAC7C,IAAIqf,EAAYD,EAAOpf,GACvB,IAAKqf,EAAUC,SAAU,CACrB3jC,EAAS0jC,EAAU1jC,OACnB,QAKhBpB,KAAK8iC,YAAYnlC,OAAS,EAC1BqC,KAAKqjC,cAAgBjiC,GAKzBk4B,EAAKp5B,UAAUulC,kBAAoB,WAK/B,QAJiChpC,IAA7BuD,KAAK+iC,sBACLzL,qBAAqBt3B,KAAK+iC,qBAC1B/iC,KAAK+iC,yBAAsBtmC,GAE1BuD,KAAKiG,eAAV,CAKA,IAFA,IAAIwG,EAAMD,KAAKC,MACXk5B,GAAO,EACF3jC,EAAIhC,KAAK8iC,YAAYnlC,OAAS,EAAGqE,GAAK,IAAKA,EAAG,CAGnD,IAFA,IAAI6iC,EAAS7kC,KAAK8iC,YAAY9gC,GAC1B4jC,GAAiB,EACZngB,EAAI,EAAG6V,EAAKuJ,EAAOlnC,OAAQ8nB,EAAI6V,IAAM7V,EAAG,CAC7C,IAAIqf,EAAYD,EAAOpf,GACvB,IAAIqf,EAAUC,SAAd,CAGA,IAAIc,EAAUp5B,EAAMq4B,EAAUF,MAC1BkB,EAAWhB,EAAUlkC,SAAW,EAAIilC,EAAUf,EAAUlkC,SAAW,EACnEklC,GAAY,GACZhB,EAAUC,UAAW,EACrBe,EAAW,GAGXF,GAAiB,EAErB,IAAIG,EAAWjB,EAAUh/B,OAAOggC,GAChC,GAAIhB,EAAUE,aAAc,CACxB,IAAIgB,EAAKlB,EAAUE,aAAa,GAC5BiB,EAAKnB,EAAUE,aAAa,GAC5B1oB,EAAKwoB,EAAUG,aAAa,GAC5B1oB,EAAKuoB,EAAUG,aAAa,GAC5B/mC,EAAI8nC,EAAKD,GAAYzpB,EAAK0pB,GAC1B7nC,EAAI8nC,EAAKF,GAAYxpB,EAAK0pB,GAC9BjmC,KAAKkjC,cAAgB,CAAChlC,EAAGC,GAE7B,GAAI2mC,EAAUI,kBAAoBJ,EAAUK,iBAAkB,CAC1D,IAAI56B,EAA0B,IAAbw7B,EACXjB,EAAUK,iBACVL,EAAUI,iBACRa,GACKjB,EAAUK,iBAAmBL,EAAUI,kBACpD,GAAIJ,EAAU1jC,OAAQ,CAClB,IAAIoF,EAAOxG,KAAKkmC,iBAAiBlmC,KAAK4E,eAClCuhC,EAAwBnmC,KAAKmkC,aAAa55B,WAAWA,EAAY,EAAG/D,GAAM,GAC9ExG,KAAKkjC,cAAgBljC,KAAKomC,oBAAoBD,EAAuBrB,EAAU1jC,QAEnFpB,KAAKmjC,kBAAoB54B,EACzBvK,KAAKqmC,mBAAkB,GAE3B,QAAiC5pC,IAA7BqoC,EAAUO,qBACmB5oC,IAA7BqoC,EAAUQ,eAA8B,CACxC,IAAI/+B,EAAwB,IAAbw/B,EACT,eAAOjB,EAAUQ,eAAiBtpC,KAAKugC,GAAI,EAAIvgC,KAAKugC,IAClDvgC,KAAKugC,GACPuI,EAAUO,eACRU,GACKjB,EAAUQ,eAAiBR,EAAUO,gBAClD,GAAIP,EAAU1jC,OAAQ,CAClB,IAAIklC,EAAsBtmC,KAAKmkC,aAAa59B,SAASA,GAAU,GAC/DvG,KAAKkjC,cAAgBljC,KAAKumC,sBAAsBD,EAAqBxB,EAAU1jC,QAEnFpB,KAAKojC,gBAAkB78B,EAI3B,GAFAvG,KAAKqmC,mBAAkB,GACvBV,GAAO,GACFb,EAAUC,SACX,OAGR,GAAIa,EAAgB,CAChB5lC,KAAK8iC,YAAY9gC,GAAK,KACtBhC,KAAKwlC,QAAQ7O,EAAA,KAASC,WAAY,GAClC,IAAIxW,EAAWykB,EAAO,GAAGzkB,SACrBA,GACAukB,EAAkBvkB,GAAU,IAKxCpgB,KAAK8iC,YAAc9iC,KAAK8iC,YAAY0D,OAAOC,SACvCd,QAAqClpC,IAA7BuD,KAAK+iC,sBACb/iC,KAAK+iC,oBAAsBlL,sBAAsB73B,KAAKylC,kBAAkB52B,KAAK7O,UAQrFs5B,EAAKp5B,UAAUqmC,sBAAwB,SAAUhgC,EAAUnF,GACvD,IAAI1F,EACAgrC,EAAgB1mC,KAAKqF,oBAMzB,YALsB5I,IAAlBiqC,IACAhrC,EAAS,CAACgrC,EAAc,GAAKtlC,EAAO,GAAIslC,EAAc,GAAKtlC,EAAO,IAClE,eAAiB1F,EAAQ6K,EAAWvG,KAAK4E,eACzC,eAAclJ,EAAQ0F,IAEnB1F,GAOX49B,EAAKp5B,UAAUkmC,oBAAsB,SAAU77B,EAAYnJ,GACvD,IAAI1F,EACAgrC,EAAgB1mC,KAAKqF,oBACrB6S,EAAoBlY,KAAK2E,gBAC7B,QAAsBlI,IAAlBiqC,QAAqDjqC,IAAtByb,EAAiC,CAChE,IAAIha,EAAIkD,EAAO,GACVmJ,GAAcnJ,EAAO,GAAKslC,EAAc,IAAOxuB,EAChD/Z,EAAIiD,EAAO,GACVmJ,GAAcnJ,EAAO,GAAKslC,EAAc,IAAOxuB,EACpDxc,EAAS,CAACwC,EAAGC,GAEjB,OAAOzC,GAQX49B,EAAKp5B,UAAUgmC,iBAAmB,SAAUS,GACxC,IAAIngC,EAAOxG,KAAKijC,cAChB,GAAI0D,EAAc,CACd,IAAIztB,EAAI1S,EAAK,GACT2S,EAAI3S,EAAK,GACb,MAAO,CACHxK,KAAKmM,IAAI+Q,EAAIld,KAAK0J,IAAIihC,IAClB3qC,KAAKmM,IAAIgR,EAAInd,KAAK2J,IAAIghC,IAC1B3qC,KAAKmM,IAAI+Q,EAAIld,KAAK2J,IAAIghC,IAClB3qC,KAAKmM,IAAIgR,EAAInd,KAAK0J,IAAIihC,KAI9B,OAAOngC,GAUf8yB,EAAKp5B,UAAUm5B,gBAAkB,SAAUuN,GACvC5mC,KAAKijC,cAAgBrlC,MAAMigB,QAAQ+oB,GAC7BA,EAASj+B,QACT,CAAC,IAAK,KACP3I,KAAKiG,gBACNjG,KAAKg3B,mBAAmB,IAShCsC,EAAKp5B,UAAU2mC,UAAY,WACvB,IAAInrC,EAASsE,KAAKqF,oBAClB,OAAK3J,EAGE,eAAiBA,EAAQsE,KAAKw1B,iBAF1B95B,GAQf49B,EAAKp5B,UAAUmF,kBAAoB,WAC/B,OAAsErF,KAAK+R,IAAI+0B,EAAahG,SAKhGxH,EAAKp5B,UAAUoG,eAAiB,WAC5B,OAAOtG,KAAKmkC,cAKhB7K,EAAKp5B,UAAUwO,uBAAyB,WACpC,OAAO1O,KAAKskC,SAAS12B,qBAMzB0rB,EAAKp5B,UAAUm4B,SAAW,SAAU0O,GAChC,YAAkBtqC,IAAdsqC,GACAA,EAAU,GAAK/mC,KAAK6iC,OAAO,GAC3BkE,EAAU,GAAK/mC,KAAK6iC,OAAO,GACpBkE,GAGA/mC,KAAK6iC,OAAOl6B,SAa3B2wB,EAAKp5B,UAAU8mC,gBAAkB,SAAUJ,GACvC,IAAIxqC,EAAS4D,KAAKmK,wBAAwBy8B,GAC1C,OAAO,eAAaxqC,EAAQ4D,KAAKw1B,kBAOrC8D,EAAKp5B,UAAUiK,wBAA0B,SAAUy8B,GAC/C,IAAIpgC,EAAOogC,GAAY5mC,KAAKkmC,mBACxBxqC,EAA+DsE,KAAKqF,oBACxE,eAAO3J,EAAQ,GACf,IAAI6O,EAAqCvK,KAAK2E,gBAC9C,oBAAsBlI,IAAf8N,EAA0B,GACjC,IAAIhE,EAAmCvG,KAAK4E,cAE5C,OADA,oBAAoBnI,IAAb8J,EAAwB,GACxB,eAAkB7K,EAAQ6O,EAAYhE,EAAUC,IAO3D8yB,EAAKp5B,UAAU+mC,iBAAmB,WAC9B,OAAOjnC,KAAK0jC,gBAOhBpK,EAAKp5B,UAAUgnC,iBAAmB,WAC9B,OAAOlnC,KAAK2jC,gBAOhBrK,EAAKp5B,UAAUnB,WAAa,WACxB,OAA8BiB,KAAKmnC,qBAAqBnnC,KAAK2jC,iBAOjErK,EAAKp5B,UAAUknC,WAAa,SAAUhzB,GAClCpU,KAAKsjC,cAActjC,KAAKukC,mBAAmB,CAAElnC,QAAS+W,MAO1DklB,EAAKp5B,UAAUpB,WAAa,WACxB,OAA8BkB,KAAKmnC,qBAAqBnnC,KAAK0jC,iBAOjEpK,EAAKp5B,UAAUmnC,WAAa,SAAUjzB,GAClCpU,KAAKsjC,cAActjC,KAAKukC,mBAAmB,CAAEnnC,QAASgX,MAO1DklB,EAAKp5B,UAAUonC,uBAAyB,SAAUC,GAC9CvnC,KAAKsjC,cAActjC,KAAKukC,mBAAmB,CAAE32B,oBAAqB25B,MAOtEjO,EAAKp5B,UAAUs1B,cAAgB,WAC3B,OAAOx1B,KAAKgjC,aAQhB1J,EAAKp5B,UAAUyE,cAAgB,WAC3B,OAAwC3E,KAAK+R,IAAI+0B,EAAa/F,aAQlEzH,EAAKp5B,UAAUo/B,eAAiB,WAC5B,OAAOt/B,KAAKm+B,cAUhB7E,EAAKp5B,UAAUsnC,uBAAyB,SAAUprC,EAAQwqC,GACtD,OAAO5mC,KAAKsK,+BAA+B,eAAelO,EAAQ4D,KAAKw1B,iBAAkBoR,IAS7FtN,EAAKp5B,UAAUoK,+BAAiC,SAAUlO,EAAQwqC,GAC9D,IAAIpgC,EAAOogC,GAAY5mC,KAAKkmC,mBACxBvE,EAAc,eAASvlC,GAAUoK,EAAK,GACtCo7B,EAAc,eAAUxlC,GAAUoK,EAAK,GAC3C,OAAOxK,KAAK0B,IAAIikC,EAAaC,IAQjCtI,EAAKp5B,UAAUunC,8BAAgC,SAAUC,GACrD,IAAIrF,EAAQqF,GAAa,EACrBpqC,EAAgB0C,KAAKwK,yBAAyBxK,KAAK0jC,gBACnD3Z,EAAgB/pB,KAAK2jC,eACrBjmC,EAAM1B,KAAKi1B,IAAI3zB,EAAgBysB,GAAiB/tB,KAAKi1B,IAAIoR,GAC7D,OAAO,SAKG9c,GACN,IAAIhb,EAAajN,EAAgBtB,KAAK6B,IAAIwkC,EAAO9c,EAAQ7nB,GACzD,OAAO6M,IASf+uB,EAAKp5B,UAAU0E,YAAc,WACzB,OAA8B5E,KAAK+R,IAAI+0B,EAAa9F,WAQxD1H,EAAKp5B,UAAUynC,8BAAgC,SAAUD,GACrD,IAAIE,EAAW5rC,KAAKi1B,IAAIyW,GAAa,GACjCpqC,EAAgB0C,KAAKwK,yBAAyBxK,KAAK0jC,gBACnD3Z,EAAgB/pB,KAAK2jC,eACrBjmC,EAAM1B,KAAKi1B,IAAI3zB,EAAgBysB,GAAiB6d,EACpD,OAAO,SAKGr9B,GACN,IAAIgb,EAAQvpB,KAAKi1B,IAAI3zB,EAAgBiN,GAAcq9B,EAAWlqC,EAC9D,OAAO6nB,IAMf+T,EAAKp5B,UAAUmT,SAAW,WACtB,IAAI3X,EAA8DsE,KAAKqF,oBACnEnK,EAAa8E,KAAKw1B,gBAClBjrB,EAAoCvK,KAAK2E,gBACzC4B,EAAWvG,KAAK4E,cACpB,MAAO,CACHlJ,OAAQA,EAAOiN,MAAM,GACrBzN,gBAA2BuB,IAAfvB,EAA2BA,EAAa,KACpDqP,WAAYA,EACZhE,SAAUA,EACV6N,KAAMpU,KAAKm9B,YAUnB7D,EAAKp5B,UAAUi9B,QAAU,WACrB,IAAI/oB,EACA7J,EAAavK,KAAK2E,gBAItB,YAHmBlI,IAAf8N,IACA6J,EAAOpU,KAAKmnC,qBAAqB58B,IAE9B6J,GAQXklB,EAAKp5B,UAAUinC,qBAAuB,SAAU58B,GAC5C,IACI7M,EAAKwgC,EADLx3B,EAAS1G,KAAK4jC,UAAY,EAE9B,GAAI5jC,KAAKm+B,aAAc,CACnB,IAAI0J,EAAU,eAAkB7nC,KAAKm+B,aAAc5zB,EAAY,GAC/D7D,EAASmhC,EACTnqC,EAAMsC,KAAKm+B,aAAa0J,GAEpB3J,EADA2J,GAAW7nC,KAAKm+B,aAAaxgC,OAAS,EACzB,EAGAD,EAAMsC,KAAKm+B,aAAa0J,EAAU,QAInDnqC,EAAMsC,KAAK0jC,eACXxF,EAAal+B,KAAKq+B,YAEtB,OAAO33B,EAAS1K,KAAKi1B,IAAIvzB,EAAM6M,GAAcvO,KAAKi1B,IAAIiN,IAQ1D5E,EAAKp5B,UAAUklC,qBAAuB,SAAUhxB,GAC5C,GAAIpU,KAAKm+B,aAAc,CACnB,GAAIn+B,KAAKm+B,aAAaxgC,QAAU,EAC5B,OAAO,EAEX,IAAImqC,EAAY,eAAM9rC,KAAKojC,MAAMhrB,GAAO,EAAGpU,KAAKm+B,aAAaxgC,OAAS,GAClEugC,EAAal+B,KAAKm+B,aAAa2J,GAAa9nC,KAAKm+B,aAAa2J,EAAY,GAC9E,OAAQ9nC,KAAKm+B,aAAa2J,GACtB9rC,KAAK6B,IAAIqgC,EAAY,eAAM9pB,EAAO0zB,EAAW,EAAG,IAGpD,OAAQ9nC,KAAK0jC,eAAiB1nC,KAAK6B,IAAImC,KAAKq+B,YAAajqB,EAAOpU,KAAK4jC,WAa7EtK,EAAKp5B,UAAU6nC,IAAM,SAAUC,EAAkBhrC,GAC7C,IAEIirC,EAFAznC,EAAU,eAAO,CAAEgG,KAAMxG,KAAKkmC,oBAAsBlpC,GAAe,IAMvE,GAHA,eAAOY,MAAMigB,QAAQmqB,IAEb,oBADqB,EAAwC,sBACjD,IAChBpqC,MAAMigB,QAAQmqB,GAAmB,CACjC,gBAAQ,eAAQA,GAAmB,IACnC,IAAI5rC,EAAS,eAAe4rC,EAAkBhoC,KAAKw1B,iBACnDyS,EAAW,eAAkB7rC,QAE5B,GAAI4rC,EAAiBtpB,YAAcC,EAAA,KAAaupB,OAAQ,CACrD9rC,EAAS,eAAe4rC,EAAiB9qC,YAAa8C,KAAKw1B,iBAC/DyS,EAAW,eAAkB7rC,GAC7B6rC,EAASvK,OAAO19B,KAAK4E,cAAe,eAAUxI,QAE7C,CACD,IAAI+rC,EAAiB,iBAEjBF,EADAE,EACsEH,EACjEjqB,QACA5D,UAAUguB,EAAgBnoC,KAAKw1B,iBAGzBwS,EAGnBhoC,KAAKooC,YAAYH,EAAUznC,IAM/B84B,EAAKp5B,UAAUkoC,YAAc,SAAUH,EAAUjrC,GAC7C,IAAIwD,EAAUxD,GAAe,GACzBwJ,EAAOhG,EAAQgG,KACdA,IACDA,EAAOxG,KAAKkmC,oBAEhB,IAEInc,EAFAse,OAA8B5rC,IAApB+D,EAAQ6nC,QAAwB7nC,EAAQ6nC,QAAU,CAAC,EAAG,EAAG,EAAG,GACtER,OAA8BprC,IAApB+D,EAAQqnC,SAAwBrnC,EAAQqnC,QAGlD9d,OAD0BttB,IAA1B+D,EAAQupB,cACQvpB,EAAQupB,mBAECttB,IAApB+D,EAAQnD,QACG2C,KAAKolC,qBAAqB5kC,EAAQnD,SAGlC,EAYpB,IAVA,IAAIirC,EAASL,EAASzlB,qBAElBjc,EAAWvG,KAAK4E,cAChB2jC,EAAWvsC,KAAK0J,KAAKa,GACrBiiC,EAAWxsC,KAAK2J,KAAKY,GACrBkiC,EAAWzoB,IACX0oB,EAAW1oB,IACX2oB,GAAW3oB,IACX4oB,GAAW5oB,IACX5D,EAAS6rB,EAASY,YACb7mC,EAAI,EAAGC,EAAKqmC,EAAO3qC,OAAQqE,EAAIC,EAAID,GAAKoa,EAAQ,CACrD,IAAI0sB,EAAOR,EAAOtmC,GAAKumC,EAAWD,EAAOtmC,EAAI,GAAKwmC,EAC9CO,EAAOT,EAAOtmC,GAAKwmC,EAAWF,EAAOtmC,EAAI,GAAKumC,EAClDE,EAAUzsC,KAAKiM,IAAIwgC,EAASK,GAC5BJ,EAAU1sC,KAAKiM,IAAIygC,EAASK,GAC5BJ,EAAU3sC,KAAK0B,IAAIirC,EAASG,GAC5BF,EAAU5sC,KAAK0B,IAAIkrC,EAASG,GAGhC,IAAIx+B,EAAavK,KAAKsK,+BAA+B,CAACm+B,EAASC,EAASC,EAASC,GAAU,CAACpiC,EAAK,GAAK6hC,EAAQ,GAAKA,EAAQ,GAAI7hC,EAAK,GAAK6hC,EAAQ,GAAKA,EAAQ,KAC9J99B,EAAa2V,MAAM3V,GACbwf,EACA/tB,KAAK0B,IAAI6M,EAAYwf,GAC3Bxf,EAAavK,KAAKwK,yBAAyBD,EAAYs9B,EAAU,EAAI,GAErEW,GAAYA,EACZ,IAAIQ,GAAcP,EAAUE,GAAW,EACnCM,GAAcP,EAAUE,GAAW,EACvCI,IAAgBX,EAAQ,GAAKA,EAAQ,IAAM,EAAK99B,EAChD0+B,IAAgBZ,EAAQ,GAAKA,EAAQ,IAAM,EAAK99B,EAChD,IAAI2+B,EAAUF,EAAaT,EAAWU,EAAaT,EAC/CW,EAAUF,EAAaV,EAAWS,EAAaR,EAC/C9sC,EAAS,CAACwtC,EAASC,GACnB/oB,EAAW5f,EAAQ4f,SAAW5f,EAAQ4f,SAAW,YAC5B3jB,IAArB+D,EAAQI,SACRZ,KAAK4F,gBAAgB,CACjB2E,WAAYA,EACZ7O,OAAQsE,KAAK6F,qBAAqBnK,EAAQ6O,GAC1C3J,SAAUJ,EAAQI,SAClBkF,OAAQtF,EAAQsF,QACjBsa,IAGHpgB,KAAKmjC,kBAAoB54B,EACzBvK,KAAKkjC,cAAgBxnC,EACrBsE,KAAKqmC,mBAAkB,GAAO,GAC9B1B,EAAkBvkB,GAAU,KAUpCkZ,EAAKp5B,UAAUkpC,SAAW,SAAU/nC,EAAYmF,EAAMa,GAClDrH,KAAKqpC,iBAAiB,eAAmBhoC,EAAYrB,KAAKw1B,iBAAkBhvB,EAAMa,IAOtFiyB,EAAKp5B,UAAUmpC,iBAAmB,SAAUhoC,EAAYmF,EAAMa,GAE1D,IAAId,EAAWvG,KAAK4E,cAChB2jC,EAAWvsC,KAAK0J,KAAKa,GACrBiiC,EAAWxsC,KAAK2J,KAAKY,GACrBuiC,EAAOznC,EAAW,GAAKknC,EAAWlnC,EAAW,GAAKmnC,EAClDO,EAAO1nC,EAAW,GAAKknC,EAAWlnC,EAAW,GAAKmnC,EAClDj+B,EAAavK,KAAK2E,gBACtBmkC,IAAStiC,EAAK,GAAK,EAAIa,EAAS,IAAMkD,EACtCw+B,IAAS1hC,EAAS,GAAKb,EAAK,GAAK,GAAK+D,EAEtCi+B,GAAYA,EACZ,IAAIU,EAAUJ,EAAOP,EAAWQ,EAAOP,EACnCW,EAAUJ,EAAOR,EAAWO,EAAON,EACvCxoC,KAAKokC,kBAAkB,CAAC8E,EAASC,KAKrC7P,EAAKp5B,UAAUk4B,MAAQ,WACnB,QAASp4B,KAAKqF,0BAAgD5I,IAAzBuD,KAAK2E,iBAO9C20B,EAAKp5B,UAAUopC,aAAe,SAAUC,GACpC,IAAI7tC,EAAS,eAAiBsE,KAAKkjC,cAAeljC,KAAKw1B,iBACvDx1B,KAAKwpC,UAAU,CACX9tC,EAAO,GAAK6tC,EAAiB,GAC7B7tC,EAAO,GAAK6tC,EAAiB,MAOrCjQ,EAAKp5B,UAAU2E,qBAAuB,SAAU0kC,GAC5C,IAAI7tC,EAASsE,KAAKkjC,cAClBljC,KAAKokC,kBAAkB,CACnB1oC,EAAO,GAAK6tC,EAAiB,GAC7B7tC,EAAO,GAAK6tC,EAAiB,MAUrCjQ,EAAKp5B,UAAUupC,iBAAmB,SAAUnI,EAAOoI,GAC/C,IAAItoC,EAASsoC,GAAc,eAAmBA,EAAY1pC,KAAKw1B,iBAC/Dx1B,KAAKuQ,yBAAyB+wB,EAAOlgC,IAQzCk4B,EAAKp5B,UAAUqQ,yBAA2B,SAAU+wB,EAAOoI,GACvD,IAAIC,EAAW3pC,KAAKiG,gBAAkBjG,KAAK0lC,iBACvCl/B,EAAOxG,KAAKkmC,iBAAiBlmC,KAAK4E,eAClC89B,EAAgB1iC,KAAKmkC,aAAa55B,WAAWvK,KAAKmjC,kBAAoB7B,EAAO,EAAG96B,EAAMmjC,GACtFD,IACA1pC,KAAKkjC,cAAgBljC,KAAKomC,oBAAoB1D,EAAegH,IAEjE1pC,KAAKmjC,mBAAqB7B,EAC1BthC,KAAKqmC,qBAST/M,EAAKp5B,UAAU4O,WAAa,SAAUpO,EAAOgpC,GACzC1pC,KAAKypC,iBAAiBztC,KAAK6B,IAAImC,KAAKq+B,aAAc39B,GAAQgpC,IAS9DpQ,EAAKp5B,UAAU0pC,eAAiB,SAAUlpC,EAAOgpC,GACzCA,IACAA,EAAa,eAAmBA,EAAY1pC,KAAKw1B,kBAErDx1B,KAAK8G,uBAAuBpG,EAAOgpC,IAMvCpQ,EAAKp5B,UAAU4G,uBAAyB,SAAUpG,EAAOgpC,GACrD,IAAIC,EAAW3pC,KAAKiG,gBAAkBjG,KAAK0lC,iBACvCmE,EAAc7pC,KAAKmkC,aAAa59B,SAASvG,KAAKojC,gBAAkB1iC,EAAOipC,GACvED,IACA1pC,KAAKkjC,cAAgBljC,KAAKumC,sBAAsBsD,EAAaH,IAEjE1pC,KAAKojC,iBAAmB1iC,EACxBV,KAAKqmC,qBAQT/M,EAAKp5B,UAAUspC,UAAY,SAAU9tC,GACjCsE,KAAKokC,kBAAkB,eAAmB1oC,EAAQsE,KAAKw1B,mBAM3D8D,EAAKp5B,UAAUkkC,kBAAoB,SAAU1oC,GACzCsE,KAAKkjC,cAAgBxnC,EACrBsE,KAAKqmC,qBAOT/M,EAAKp5B,UAAUslC,QAAU,SAAUsE,EAAMppC,GAGrC,OAFAV,KAAK6iC,OAAOiH,IAASppC,EACrBV,KAAKgf,UACEhf,KAAK6iC,OAAOiH,IAQvBxQ,EAAKp5B,UAAUmkC,cAAgB,SAAU95B,GACrCvK,KAAKmjC,kBAAoB54B,EACzBvK,KAAKqmC,qBAQT/M,EAAKp5B,UAAUs8B,YAAc,SAAUj2B,GACnCvG,KAAKojC,gBAAkB78B,EACvBvG,KAAKqmC,qBAOT/M,EAAKp5B,UAAUo9B,QAAU,SAAUlpB,GAC/BpU,KAAKqkC,cAAcrkC,KAAKolC,qBAAqBhxB,KAUjDklB,EAAKp5B,UAAUmmC,kBAAoB,SAAU0D,EAAsBC,GAC/D,IAAIL,EAAW3pC,KAAKiG,gBAAkBjG,KAAK0lC,kBAAoBsE,EAE3DH,EAAc7pC,KAAKmkC,aAAa59B,SAASvG,KAAKojC,gBAAiBuG,GAC/DnjC,EAAOxG,KAAKkmC,iBAAiB2D,GAC7BnH,EAAgB1iC,KAAKmkC,aAAa55B,WAAWvK,KAAKmjC,kBAAmB,EAAG38B,EAAMmjC,GAC9EM,EAAYjqC,KAAKmkC,aAAazoC,OAAOsE,KAAKkjC,cAAeR,EAAel8B,EAAMmjC,GAC9E3pC,KAAK+R,IAAI+0B,EAAa9F,YAAc6I,GACpC7pC,KAAKiS,IAAI60B,EAAa9F,SAAU6I,GAEhC7pC,KAAK+R,IAAI+0B,EAAa/F,cAAgB2B,GACtC1iC,KAAKiS,IAAI60B,EAAa/F,WAAY2B,GAEjC1iC,KAAK+R,IAAI+0B,EAAahG,SACtB,eAAO9gC,KAAK+R,IAAI+0B,EAAahG,QAASmJ,IACvCjqC,KAAKiS,IAAI60B,EAAahG,OAAQmJ,GAE9BjqC,KAAKiG,iBAAmB8jC,GACxB/pC,KAAKkG,mBAETlG,KAAKqjC,mBAAgB5mC,GAWzB68B,EAAKp5B,UAAU82B,mBAAqB,SAAUkT,EAAcC,EAAyBT,GACjF,IAAI9oC,OAA4BnE,IAAjBytC,EAA6BA,EAAe,IACvD15B,EAAY25B,GAA2B,EACvCN,EAAc7pC,KAAKmkC,aAAa59B,SAASvG,KAAKojC,iBAC9C58B,EAAOxG,KAAKkmC,iBAAiB2D,GAC7BnH,EAAgB1iC,KAAKmkC,aAAa55B,WAAWvK,KAAKmjC,kBAAmB3yB,EAAWhK,GAChFyjC,EAAYjqC,KAAKmkC,aAAazoC,OAAOsE,KAAKkjC,cAAeR,EAAel8B,GAC5E,GAAiB,IAAb5F,IAAmBZ,KAAKqjC,cAKxB,OAJArjC,KAAKmjC,kBAAoBT,EACzB1iC,KAAKojC,gBAAkByG,EACvB7pC,KAAKkjC,cAAgB+G,OACrBjqC,KAAKqmC,oBAGT,IAAIjlC,EAASsoC,IAA4B,IAAb9oC,EAAiBZ,KAAKqjC,mBAAgB5mC,GAClEuD,KAAKqjC,mBAAgB5mC,EACjBuD,KAAK2E,kBAAoB+9B,GACzB1iC,KAAK4E,gBAAkBilC,GACtB7pC,KAAKqF,qBACL,eAAOrF,KAAKqF,oBAAqB4kC,KAC9BjqC,KAAKiG,gBACLjG,KAAKkG,mBAETlG,KAAK4F,gBAAgB,CACjBW,SAAUsjC,EACVnuC,OAAQuuC,EACR1/B,WAAYm4B,EACZ9hC,SAAUA,EACVkF,OAAQ,OACR1E,OAAQA,MAUpBk4B,EAAKp5B,UAAUqE,iBAAmB,WAC9BvE,KAAKg3B,mBAAmB,GACxBh3B,KAAKwlC,QAAQ7O,EAAA,KAASE,YAAa,IAUvCyC,EAAKp5B,UAAU6F,eAAiB,SAAUmkC,EAAcC,EAAyBT,GAC7E,IAAItoC,EAASsoC,GAAc,eAAmBA,EAAY1pC,KAAKw1B,iBAC/Dx1B,KAAKoqC,uBAAuBF,EAAcC,EAAyB/oC,IASvEk4B,EAAKp5B,UAAUkqC,uBAAyB,SAAUF,EAAcC,EAAyBT,GACrF1pC,KAAKwlC,QAAQ7O,EAAA,KAASE,aAAc,GACpC72B,KAAKg3B,mBAAmBkT,EAAcC,EAAyBT,IASnEpQ,EAAKp5B,UAAU2F,qBAAuB,SAAUo/B,EAAcoF,GAC1D,IAAI7jC,EAAOxG,KAAKkmC,iBAAiBlmC,KAAK4E,eACtC,OAAO5E,KAAKmkC,aAAazoC,OAAOupC,EAAcoF,GAAwBrqC,KAAK2E,gBAAiB6B,IAWhG8yB,EAAKp5B,UAAUm9B,mBAAqB,SAAUiN,EAAYjK,GACtD,IAAIkK,EAAYvqC,KAAKolC,qBAAqBkF,GAC1C,OAAOtqC,KAAKmnC,qBAAqBnnC,KAAKwK,yBAAyB+/B,EAAWlK,KAW9E/G,EAAKp5B,UAAUsK,yBAA2B,SAAU26B,EAAkB9E,GAClE,IAAI7vB,EAAY6vB,GAAiB,EAC7B75B,EAAOxG,KAAKkmC,iBAAiBlmC,KAAK4E,eACtC,OAAO5E,KAAKmkC,aAAa55B,WAAW46B,EAAkB30B,EAAWhK,IAE9D8yB,EAnsCc,CAosCvB,QAKF,SAASqL,EAAkBvkB,EAAUoqB,GACjC57B,YAAW,WACPwR,EAASoqB,KACV,GAMA,SAAS1G,EAAuBtjC,GACnC,QAAuB/D,IAAnB+D,EAAQpE,OAAsB,CAC9B,IAAI+kC,OAA4C1kC,IAAnC+D,EAAQiqC,wBACfjqC,EAAQiqC,uBAEd,OAAOxJ,EAAazgC,EAAQpE,OAAQoE,EAAQkqC,oBAAqBvJ,GAErE,IAAIjmC,EAAa,eAAiBsF,EAAQtF,WAAY,aACtD,IAA2B,IAAvBsF,EAAQmqC,YAAuBzvC,EAAW0vC,WAAY,CACtD,IAAIxuC,EAASlB,EAAWgC,YAAYyL,QAGpC,OAFAvM,EAAO,IAAM4jB,IACb5jB,EAAO,GAAK4jB,IACLihB,EAAa7kC,GAAQ,GAAO,GAEvC,OAAO,EAOJ,SAASqnC,EAA2BjjC,GACvC,IAAIujC,EACAzmC,EACAysB,EAGA8gB,EAAiB,GACjBC,EAAoB,EACpB1tC,OAA8BX,IAApB+D,EAAQpD,QAAwBoD,EAAQpD,QAAUwlC,EAC5DvlC,OAA8BZ,IAApB+D,EAAQnD,QAAwBmD,EAAQnD,QAAUwtC,EAC5D3M,OAAoCzhC,IAAvB+D,EAAQ09B,WAA2B19B,EAAQ09B,WAAa4M,EACrEH,OAAoCluC,IAAvB+D,EAAQmqC,YAA2BnqC,EAAQmqC,WACxDxJ,OAAgD1kC,IAAvC+D,EAAQuqC,4BACfvqC,EAAQuqC,2BAEVrJ,OAA4CjlC,IAA3B+D,EAAQkhC,gBAA+BlhC,EAAQkhC,eAChExmC,EAAa,eAAiBsF,EAAQtF,WAAY,aAClD8vC,EAAa9vC,EAAWgC,YACxBwtC,EAAsBlqC,EAAQkqC,oBAC9BtuC,EAASoE,EAAQpE,OAKrB,GAJKuuC,GAAevuC,IAAUlB,EAAW0vC,aACrCF,GAAsB,EACtBtuC,EAAS4uC,QAEevuC,IAAxB+D,EAAQ7D,YAA2B,CACnC,IAAIA,EAAc6D,EAAQ7D,YAC1BW,EAAgBX,EAAYS,GAC5B2sB,OAC6BttB,IAAzBE,EAAYU,GACNV,EAAYU,GACZV,EAAYA,EAAYgB,OAAS,GAEvComC,EADAvjC,EAAQoN,oBACek0B,EAAwBnlC,EAAawkC,GAASuJ,GAAuBtuC,EAAQslC,GAG7EiB,EAAuBrlC,EAAeysB,EAAeoX,GAASuJ,GAAuBtuC,EAAQslC,OAGvH,CAED,IAAIl7B,EAAQwkC,EAGNhvC,KAAK0B,IAAI,eAASstC,GAAa,eAAUA,IADtC,IAAM,OAAgBC,EAAA,KAAMltC,SAAY7C,EAAW8C,mBAExDktC,EAAuB1kC,EAAO,OAAoBxK,KAAK6B,IAAIitC,EAAmBlI,GAC9EuI,EAAuBD,EACvBlvC,KAAK6B,IAAIitC,EAAmBD,EAAiBjI,GAEjDtlC,EAAgBkD,EAAQlD,mBACFb,IAAlBa,EACAF,EAAU,EAGVE,EAAgB4tC,EAAuBlvC,KAAK6B,IAAIqgC,EAAY9gC,GAGhE2sB,EAAgBvpB,EAAQupB,mBACFttB,IAAlBstB,IAGQA,OAFgBttB,IAApB+D,EAAQnD,aACsBZ,IAA1B+D,EAAQlD,cACQA,EAAgBtB,KAAK6B,IAAIqgC,EAAY7gC,GAGrC6tC,EAAuBlvC,KAAK6B,IAAIqgC,EAAY7gC,GAIhD8tC,GAIxB9tC,EACID,EACIpB,KAAKojC,MAAMpjC,KAAKi1B,IAAI3zB,EAAgBysB,GAAiB/tB,KAAKi1B,IAAIiN,IACtEnU,EAAgBzsB,EAAgBtB,KAAK6B,IAAIqgC,EAAY7gC,EAAUD,GAE3D2mC,EADAvjC,EAAQoN,oBACew0B,EAAkBlE,EAAY5gC,EAAeysB,EAAeoX,GAASuJ,GAAuBtuC,EAAQslC,GAGpGiB,EAAuBrlC,EAAeysB,EAAeoX,GAASuJ,GAAuBtuC,EAAQslC,GAG5H,MAAO,CACHsC,WAAYD,EACZzmC,cAAeA,EACfysB,cAAeA,EACf3sB,QAASA,EACT8gC,WAAYA,GAOb,SAASgG,EAAyB1jC,GACrC,IAAI4qC,OAA4C3uC,IAA3B+D,EAAQ4qC,gBAA+B5qC,EAAQ4qC,eACpE,GAAIA,EAAgB,CAChB,IAAIC,EAAoB7qC,EAAQ6qC,kBAChC,YAA0B5uC,IAAtB4uC,IAAyD,IAAtBA,EAC5B,kBAEoB,IAAtBA,EACE,OAE2B,kBAAtBA,EACL,eAAcA,GAGd,OAIX,OAAO,OAQR,SAAS9F,EAAgBT,GAC5B,QAAIA,EAAUE,cAAgBF,EAAUG,eAC/B,eAAiBH,EAAUE,aAAcF,EAAUG,iBAIxDH,EAAUI,mBAAqBJ,EAAUK,kBAGzCL,EAAUO,iBAAmBP,EAAUQ,gBAKhC,U,kCChnDA,QACX7pB,KAAM,EACN6vB,QAAS,EACT/3B,OAAQ,EAKRE,MAAO,EACPD,MAAO,I,iMCdJ+3B,MAAM,O,YAEJA,MAAM,a,QAEPC,gCAA8C,OAAzCC,IAAAC,IAA+BC,IAAI,O,kBACxCH,gCAAgB,YAAV,OAAG,I,GADTI,EACAC,G,QAGAL,gCAA+C,OAA1CC,IAAAK,IAAgCH,IAAI,O,kBACzCH,gCAAgB,YAAV,OAAG,I,GADTO,EACAC,G,wDATNC,gCAaM,MAbNC,EAaM,CAZJV,gCAAgD,OAA3CW,IAAI,MAAOxjB,GAAIyjB,EAAAzjB,GAAI4iB,MAAM,a,UAC9BC,gCASM,MATNa,EASM,CARJb,gCAGM,OAHAc,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,UAAU,IAAInB,MAAKoB,4BAAA,CAAC,QAAO,CAAAC,OAAiC,GAAfR,EAAAS,gB,KAI1DrB,gCAGM,OAHAc,QAAKC,EAAA,KAAAA,EAAA,GAAAC,GAAEC,EAAAC,UAAU,IAAInB,MAAKoB,4BAAA,CAAC,QAAO,CAAAC,OAAiC,GAAfR,EAAAS,gB,OAK5DC,wBAAaC,EAAAC,OAAA,kBAAAvwC,GAAA,K,qICbb6C,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAmFxC,EAAsB,SAAUK,GAOhC,SAAS6sC,EAAKzxC,EAAW+0B,EAAOvzB,GAC5B,IAAIsD,EAAQF,EAAOG,KAAKP,OAASA,KAC7BQ,EAAUxD,GAA4B,GA2C1C,OAvCAsD,EAAM9E,UAAYA,EAKlB8E,EAAMiwB,MAAQA,EAOdjwB,EAAM4sC,YAAc,KAOpB5sC,EAAMkwB,MAAO,EAOblwB,EAAM9B,IAAM,GAKZ8B,EAAM6sC,iBACqB1wC,IAAvB+D,EAAQ4Y,WAA2B,IAAM5Y,EAAQ4Y,WAMrD9Y,EAAM8sC,kBAAoB,GACnB9sC,EAqKX,OAxNAhB,EAAU2tC,EAAM7sC,GAwDhB6sC,EAAK/sC,UAAU8e,QAAU,WACrBhf,KAAK8J,cAAcmB,EAAA,KAAUke,SAKjC8jB,EAAK/sC,UAAUmtC,QAAU,aAIzBJ,EAAK/sC,UAAU5B,OAAS,WACpB,OAAO0B,KAAKxB,IAAM,IAAMwB,KAAKxE,WAQjCyxC,EAAK/sC,UAAU+T,eAAiB,WAC5B,IAAKjU,KAAKktC,YAEN,OAAOltC,KAEX,IAAIkT,EAAOlT,KAAKktC,YAKhB,EAAG,CACC,GAAIh6B,EAAKG,YAAcC,EAAA,KAAUC,OAI7B,OADAvT,KAAKmtC,YAAc,EACZj6B,EAEXA,EAAOA,EAAKg6B,kBACPh6B,GAET,OAAOlT,MAMXitC,EAAK/sC,UAAUotC,oBAAsB,WACjC,GAAKttC,KAAKktC,YAAV,CAGA,IAAIh6B,EAAOlT,KAAKktC,YACZK,EAA2B,KAC/B,EAAG,CACC,GAAIr6B,EAAKG,YAAcC,EAAA,KAAUC,OAAQ,CAIrCL,EAAKg6B,YAAc,KACnB,MAEKh6B,EAAKG,YAAcC,EAAA,KAAUg4B,QAGlCiC,EAAOr6B,EAEFA,EAAKG,YAAcC,EAAA,KAAUmI,KAGlC8xB,EAAKL,YAAch6B,EAAKg6B,YAGxBK,EAAOr6B,EAEXA,EAAOq6B,EAAKL,kBACPh6B,KAOb+5B,EAAK/sC,UAAUstC,aAAe,WAC1B,OAAOxtC,KAAKxE,WAKhByxC,EAAK/sC,UAAUmT,SAAW,WACtB,OAAOrT,KAAKuwB,OAUhB0c,EAAK/sC,UAAU8T,SAAW,SAAUuc,GAChC,GAAIvwB,KAAKuwB,QAAUjd,EAAA,KAAUG,OAASzT,KAAKuwB,MAAQA,EAC/C,MAAM,IAAI6D,MAAM,gCAEpBp0B,KAAKuwB,MAAQA,EACbvwB,KAAKgf,WASTiuB,EAAK/sC,UAAU4wB,KAAO,WAClB,kBAQJmc,EAAK/sC,UAAUiW,SAAW,SAAUwS,EAAIvS,GACpC,IAAKpW,KAAKmtC,YACN,OAAO,EAEX,IAAIvI,EAAQ5kC,KAAKotC,kBAAkBzkB,GACnC,GAAKic,GAIA,IAAe,IAAXA,EACL,OAAO,OAJPA,EAAQxuB,EACRpW,KAAKotC,kBAAkBzkB,GAAMic,EAKjC,IAAIlkC,EAAQ0V,EAAOwuB,EAAQ,IAAO,GAClC,OAAIlkC,GAASV,KAAKmtC,YACP,EAEJ,eAAOzsC,EAAQV,KAAKmtC,cAS/BF,EAAK/sC,UAAU+V,aAAe,SAAU0S,GACpC,QAAK3oB,KAAKmtC,cAG6B,IAAhCntC,KAAKotC,kBAAkBzkB,IAMlCskB,EAAK/sC,UAAU4a,cAAgB,SAAU6N,GACjC3oB,KAAKmtC,cACLntC,KAAKotC,kBAAkBzkB,IAAO,IAG/BskB,EAzNc,CA0NvB,QACa,I,wBC9SX,EAAwC,WACxC,IAAI1tC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAoBxC,EAA2B,SAAUK,GAUrC,SAASqtC,EAAUjyC,EAAW+0B,EAAOkb,EAAKiC,EAAaC,EAAkB3wC,GACrE,IAAIsD,EAAQF,EAAOG,KAAKP,KAAMxE,EAAW+0B,EAAOvzB,IAAgBgD,KA+BhE,OA1BAM,EAAMstC,aAAeF,EAOrBptC,EAAMutC,KAAOpC,EAKbnrC,EAAMwtC,OAAS,IAAIC,MACC,OAAhBL,IACAptC,EAAMwtC,OAAOJ,YAAcA,GAM/BptC,EAAM0tC,UAAY,KAKlB1tC,EAAM2tC,kBAAoBN,EACnBrtC,EAyEX,OAlHA,EAAUmtC,EAAWrtC,GAgDrBqtC,EAAUvtC,UAAU6a,SAAW,WAC3B,OAAO/a,KAAK8tC,QAKhBL,EAAUvtC,UAAU5B,OAAS,WACzB,OAAO0B,KAAK6tC,MAOhBJ,EAAUvtC,UAAUguC,kBAAoB,WACpCluC,KAAKuwB,MAAQjd,EAAA,KAAUG,MACvBzT,KAAKmuC,iBACLnuC,KAAK8tC,OAASM,IACdpuC,KAAKgf,WAOTyuB,EAAUvtC,UAAUmuC,iBAAmB,WACnC,IAAI/zB,EAAyCta,KAAW,OACpDsa,EAAMg0B,cAAgBh0B,EAAMi0B,cAC5BvuC,KAAKuwB,MAAQjd,EAAA,KAAUC,OAGvBvT,KAAKuwB,MAAQjd,EAAA,KAAUE,MAE3BxT,KAAKmuC,iBACLnuC,KAAKgf,WAMTyuB,EAAUvtC,UAAU4wB,KAAO,WACnB9wB,KAAKuwB,OAASjd,EAAA,KAAUG,QACxBzT,KAAKuwB,MAAQjd,EAAA,KAAUmI,KACvBzb,KAAK8tC,OAAS,IAAIC,MACQ,OAAtB/tC,KAAK4tC,eACL5tC,KAAK8tC,OAAOJ,YAAc1tC,KAAK4tC,eAGnC5tC,KAAKuwB,OAASjd,EAAA,KAAUmI,OACxBzb,KAAKuwB,MAAQjd,EAAA,KAAUg4B,QACvBtrC,KAAKgf,UACLhf,KAAKiuC,kBAAkBjuC,KAAMA,KAAK6tC,MAClC7tC,KAAKguC,UAAY,eAAYhuC,KAAK8tC,OAAQ9tC,KAAKquC,iBAAiBx/B,KAAK7O,MAAOA,KAAKkuC,kBAAkBr/B,KAAK7O,SAQhHytC,EAAUvtC,UAAUiuC,eAAiB,WAC7BnuC,KAAKguC,YACLhuC,KAAKguC,YACLhuC,KAAKguC,UAAY,OAGlBP,EAnHmB,CAoH5B,GAKF,SAASW,IACL,IAAII,EAAM,eAAsB,EAAG,GAGnC,OAFAA,EAAIC,UAAY,gBAChBD,EAAIE,SAAS,EAAG,EAAG,EAAG,GACfF,EAAIz3B,OAEA,IC1IX43B,ED0IW,IE3IJC,EAAkB,GAMlBC,GAA6B,E,oCCKpCC,EAAkB,GASlBC,EAAqB,IAMrB,EAA+B,WAS/B,SAASC,EAAcC,EAAYC,EAAYC,EAAcC,EAAiBC,EAAgBC,GAK1FtvC,KAAKuvC,YAAcN,EAKnBjvC,KAAKwvC,YAAcN,EAEnB,IAAIO,EAAoB,GACpBC,EAAe,eAAa1vC,KAAKwvC,YAAaxvC,KAAKuvC,aAMvDvvC,KAAK2vC,cAAgB,SAAUC,GAC3B,IAAIpxC,EAAMoxC,EAAE,GAAK,IAAMA,EAAE,GAIzB,OAHKH,EAAkBjxC,KACnBixC,EAAkBjxC,GAAOkxC,EAAaE,IAEnCH,EAAkBjxC,IAM7BwB,KAAK6vC,iBAAmBT,EAKxBpvC,KAAK8vC,uBAAyBT,EAAiBA,EAK/CrvC,KAAK+vC,WAAa,GAMlB/vC,KAAKgwC,iBAAkB,EAKvBhwC,KAAKiwC,kBACDjwC,KAAKuvC,YAAYtqB,cACXmqB,KACApvC,KAAKuvC,YAAYryC,aACnB,eAASkyC,IAAoB,eAASpvC,KAAKuvC,YAAYryC,aAK/D8C,KAAKkwC,kBAAoBlwC,KAAKuvC,YAAYryC,YACpC,eAAS8C,KAAKuvC,YAAYryC,aAC1B,KAKN8C,KAAKmwC,kBAAoBnwC,KAAKwvC,YAAYtyC,YACpC,eAAS8C,KAAKwvC,YAAYtyC,aAC1B,KACN,IAAIkzC,EAAqB,eAAWjB,GAChCkB,EAAsB,eAAYlB,GAClCmB,EAAyB,eAAenB,GACxCoB,EAAwB,eAAcpB,GACtCqB,EAAgBxwC,KAAK2vC,cAAcS,GACnCK,EAAiBzwC,KAAK2vC,cAAcU,GACpCK,EAAoB1wC,KAAK2vC,cAAcW,GACvCK,EAAmB3wC,KAAK2vC,cAAcY,GAWtCK,EAAiB9B,GAChBQ,EACKtzC,KAAK0B,IAAI,EAAG1B,KAAKC,KAAK,eAAK,eAAQkzC,IAChCG,EACGA,EACA,IACA,QACN,GAEV,GADAtvC,KAAK6wC,SAAST,EAAoBC,EAAqBC,EAAwBC,EAAuBC,EAAeC,EAAgBC,EAAmBC,EAAkBC,GACtK5wC,KAAKgwC,gBAAiB,CACtB,IAAIc,EAAc9wB,IAClBhgB,KAAK+vC,WAAW5vB,SAAQ,SAAU4wB,EAAU/uC,EAAGgvC,GAC3CF,EAAc90C,KAAKiM,IAAI6oC,EAAaC,EAASlrB,OAAO,GAAG,GAAIkrB,EAASlrB,OAAO,GAAG,GAAIkrB,EAASlrB,OAAO,GAAG,OAIzG7lB,KAAK+vC,WAAW5vB,QAAQ,SAAU4wB,GAC9B,GAAI/0C,KAAK0B,IAAIqzC,EAASlrB,OAAO,GAAG,GAAIkrB,EAASlrB,OAAO,GAAG,GAAIkrB,EAASlrB,OAAO,GAAG,IAC1EirB,EACA9wC,KAAKkwC,kBAAoB,EAAG,CAC5B,IAAIe,EAAc,CACd,CAACF,EAASlrB,OAAO,GAAG,GAAIkrB,EAASlrB,OAAO,GAAG,IAC3C,CAACkrB,EAASlrB,OAAO,GAAG,GAAIkrB,EAASlrB,OAAO,GAAG,IAC3C,CAACkrB,EAASlrB,OAAO,GAAG,GAAIkrB,EAASlrB,OAAO,GAAG,KAE3CorB,EAAY,GAAG,GAAKH,EAAc9wC,KAAKkwC,kBAAoB,IAC3De,EAAY,GAAG,IAAMjxC,KAAKkwC,mBAE1Be,EAAY,GAAG,GAAKH,EAAc9wC,KAAKkwC,kBAAoB,IAC3De,EAAY,GAAG,IAAMjxC,KAAKkwC,mBAE1Be,EAAY,GAAG,GAAKH,EAAc9wC,KAAKkwC,kBAAoB,IAC3De,EAAY,GAAG,IAAMjxC,KAAKkwC,mBAK9B,IAAIv6B,EAAO3Z,KAAKiM,IAAIgpC,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,IACrEr7B,EAAO5Z,KAAK0B,IAAIuzC,EAAY,GAAG,GAAIA,EAAY,GAAG,GAAIA,EAAY,GAAG,IACrEr7B,EAAOD,EAAO3V,KAAKkwC,kBAAoB,IACvCa,EAASlrB,OAASorB,KAG5BpiC,KAAK7O,OAEXyvC,EAAoB,GA0LxB,OA9KAT,EAAc9uC,UAAUgxC,aAAe,SAAU9pB,EAAG3nB,EAAGmwC,EAAGuB,EAAMC,EAAMC,GAClErxC,KAAK+vC,WAAWxjC,KAAK,CACjBsZ,OAAQ,CAACsrB,EAAMC,EAAMC,GACrB9uC,OAAQ,CAAC6kB,EAAG3nB,EAAGmwC,MAmBvBZ,EAAc9uC,UAAU2wC,SAAW,SAAUzpB,EAAG3nB,EAAGmwC,EAAGpwC,EAAG2xC,EAAMC,EAAMC,EAAMC,EAAMV,GAC7E,IAAIW,EAAmB,eAAe,CAACJ,EAAMC,EAAMC,EAAMC,IACrDE,EAAkBxxC,KAAKkwC,kBACrB,eAASqB,GAAoBvxC,KAAKkwC,kBAClC,KACFuB,EAA0CzxC,KAAsB,kBAGhE0xC,EAAS1xC,KAAKuvC,YAAYtqB,YAC1BusB,EAAkB,IAClBA,EAAkB,EAClBG,GAAmB,EACvB,GAAIf,EAAiB,EAAG,CACpB,GAAI5wC,KAAKwvC,YAAY5E,YAAc5qC,KAAKmwC,kBAAmB,CACvD,IAAIyB,EAAmB,eAAe,CAACxqB,EAAG3nB,EAAGmwC,EAAGpwC,IAC5CqyC,EAAkB,eAASD,GAAoB5xC,KAAKmwC,kBACxDwB,EACIE,EAAkB9C,GAAsB4C,GAE3CD,GAAU1xC,KAAKuvC,YAAY3E,YAAc4G,IAC1CG,EACIH,EAAkBzC,GAAsB4C,GAGpD,MAAKA,GAAoB3xC,KAAK6vC,kBACtBiC,SAASP,EAAiB,KAC1BO,SAASP,EAAiB,KAC1BO,SAASP,EAAiB,KAC1BO,SAASP,EAAiB,MACrB,eAAWA,EAAkBvxC,KAAK6vC,kBAL/C,CAWA,IAAIkC,EAAc,EAClB,IAAKJ,KACIG,SAASX,EAAK,MACdW,SAASX,EAAK,MACdW,SAASV,EAAK,MACdU,SAASV,EAAK,MACdU,SAAST,EAAK,MACdS,SAAST,EAAK,MACdS,SAASR,EAAK,MACdQ,SAASR,EAAK,KACf,GAAIV,EAAiB,EACjBe,GAAmB,OAUnB,GALAI,GACMD,SAASX,EAAK,KAAQW,SAASX,EAAK,IAAU,EAAJ,IACtCW,SAASV,EAAK,KAAQU,SAASV,EAAK,IAAU,EAAJ,IAC1CU,SAAST,EAAK,KAAQS,SAAST,EAAK,IAAU,EAAJ,IAC1CS,SAASR,EAAK,KAAQQ,SAASR,EAAK,IAAU,EAAJ,GACjC,GAAfS,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EACA,OAKhB,GAAInB,EAAiB,EAAG,CACpB,IAAKe,EAAkB,CACnB,IAAIj2C,EAAS,EAAE0rB,EAAE,GAAKwoB,EAAE,IAAM,GAAIxoB,EAAE,GAAKwoB,EAAE,IAAM,GAC7CoC,EAAYhyC,KAAK2vC,cAAcj0C,GAC/BkR,OAAK,EACT,GAAI8kC,EAAQ,CACR,IAAIO,GAAmB,eAAOd,EAAK,GAAIM,GACnC,eAAOJ,EAAK,GAAII,IAChB,EACJ7kC,EAAKqlC,EAAkB,eAAOD,EAAU,GAAIP,QAG5C7kC,GAAMukC,EAAK,GAAKE,EAAK,IAAM,EAAIW,EAAU,GAE7C,IAAInlC,GAAMskC,EAAK,GAAKE,EAAK,IAAM,EAAIW,EAAU,GACzCE,EAAwBtlC,EAAKA,EAAKC,EAAKA,EAC3C8kC,EAAmBO,EAAwBlyC,KAAK8vC,uBAEpD,GAAI6B,EAAkB,CAClB,GAAI31C,KAAKmM,IAAIif,EAAE,GAAKwoB,EAAE,KAAO5zC,KAAKmM,IAAIif,EAAE,GAAKwoB,EAAE,IAAK,CAEhD,IAAIuC,EAAK,EAAE1yC,EAAE,GAAKmwC,EAAE,IAAM,GAAInwC,EAAE,GAAKmwC,EAAE,IAAM,GACzCwC,EAAQpyC,KAAK2vC,cAAcwC,GAC3BE,EAAK,EAAE7yC,EAAE,GAAK4nB,EAAE,IAAM,GAAI5nB,EAAE,GAAK4nB,EAAE,IAAM,GACzCkrB,EAAQtyC,KAAK2vC,cAAc0C,GAC/BryC,KAAK6wC,SAASzpB,EAAG3nB,EAAG0yC,EAAIE,EAAIlB,EAAMC,EAAMgB,EAAOE,EAAO1B,EAAiB,GACvE5wC,KAAK6wC,SAASwB,EAAIF,EAAIvC,EAAGpwC,EAAG8yC,EAAOF,EAAOf,EAAMC,EAAMV,EAAiB,OAEtE,CAED,IAAI2B,EAAK,EAAEnrB,EAAE,GAAK3nB,EAAE,IAAM,GAAI2nB,EAAE,GAAK3nB,EAAE,IAAM,GACzC+yC,EAAQxyC,KAAK2vC,cAAc4C,GAC3BE,EAAK,EAAE7C,EAAE,GAAKpwC,EAAE,IAAM,GAAIowC,EAAE,GAAKpwC,EAAE,IAAM,GACzCkzC,EAAQ1yC,KAAK2vC,cAAc8C,GAC/BzyC,KAAK6wC,SAASzpB,EAAGmrB,EAAIE,EAAIjzC,EAAG2xC,EAAMqB,EAAOE,EAAOpB,EAAMV,EAAiB,GACvE5wC,KAAK6wC,SAAS0B,EAAI9yC,EAAGmwC,EAAG6C,EAAID,EAAOpB,EAAMC,EAAMqB,EAAO9B,EAAiB,GAE3E,QAGR,GAAIc,EAAQ,CACR,IAAK1xC,KAAKiwC,kBACN,OAEJjwC,KAAKgwC,iBAAkB,EAMA,IAAR,GAAd+B,IACD/xC,KAAKkxC,aAAa9pB,EAAGwoB,EAAGpwC,EAAG2xC,EAAME,EAAMC,GAEhB,IAAR,GAAdS,IACD/xC,KAAKkxC,aAAa9pB,EAAGwoB,EAAGnwC,EAAG0xC,EAAME,EAAMD,GAEvCW,IAE2B,IAAR,GAAdA,IACD/xC,KAAKkxC,aAAazxC,EAAGD,EAAG4nB,EAAGgqB,EAAME,EAAMH,GAEhB,IAAR,EAAdY,IACD/xC,KAAKkxC,aAAazxC,EAAGD,EAAGowC,EAAGwB,EAAME,EAAMD,MASnDrC,EAAc9uC,UAAUyyC,sBAAwB,WAC5C,IAAIv2C,EAAS,iBAOb,OANA4D,KAAK+vC,WAAW5vB,SAAQ,SAAU4wB,EAAU/uC,EAAGgvC,GAC3C,IAAIvF,EAAMsF,EAASlrB,OACnB,eAAiBzpB,EAAQqvC,EAAI,IAC7B,eAAiBrvC,EAAQqvC,EAAI,IAC7B,eAAiBrvC,EAAQqvC,EAAI,OAE1BrvC,GAKX4yC,EAAc9uC,UAAU0yC,aAAe,WACnC,OAAO5yC,KAAK+vC,YAETf,EAxUuB,GA0UnB,IChWJ6D,EAA2B,CAClCC,uBAAuB,EACvBC,yBAAyB,G,YHM7B,SAASC,EAAiBxE,EAAKyE,EAAIC,EAAIC,EAAIC,GACvC5E,EAAIh1B,YACJg1B,EAAI/0B,OAAO,EAAG,GACd+0B,EAAI90B,OAAOu5B,EAAIC,GACf1E,EAAI90B,OAAOy5B,EAAIC,GACf5E,EAAI6E,YACJ7E,EAAIn1B,OACJm1B,EAAIj1B,OACJi1B,EAAIE,SAAS,EAAG,EAAG1yC,KAAK0B,IAAIu1C,EAAIE,GAAM,EAAGn3C,KAAK0B,IAAIw1C,EAAIE,IACtD5E,EAAI50B,UAUR,SAAS05B,EAA8B1rB,EAAMlhB,GAEzC,OAAQ1K,KAAKmM,IAAIyf,EAAc,EAATlhB,GAAc,KAAO,GACvC1K,KAAKmM,IAAIyf,EAAc,EAATlhB,EAAa,GAAK,QAAc,EAYtD,SAAS6sC,IACL,QAAiC92C,IAA7BkyC,EAAwC,CACxC,IAAIH,EAAM9rC,SAASyE,cAAc,UAAUqsC,WAAW,MACtDhF,EAAIiF,yBAA2B,UAC/BjF,EAAIC,UAAY,wBAChBuE,EAAiBxE,EAAK,EAAG,EAAG,EAAG,GAC/BwE,EAAiBxE,EAAK,EAAG,EAAG,EAAG,GAC/B,IAAI5mB,EAAO4mB,EAAIkF,aAAa,EAAG,EAAG,EAAG,GAAG9rB,KACxC+mB,EACI2E,EAA8B1rB,EAAM,IAChC0rB,EAA8B1rB,EAAM,IACpC0rB,EAA8B1rB,EAAM,GAEhD,OAAO+mB,EAcJ,SAASgF,EAA0B1E,EAAYC,EAAYjK,EAAcE,GAC5E,IAAIH,EAAe,eAAUC,EAAciK,EAAYD,GAEnD/J,EAAmB,eAAmBgK,EAAY/J,EAAkBF,GACpE2O,EAAsB1E,EAAWlxC,wBACTvB,IAAxBm3C,IACA1O,GAAoB0O,GAExB,IAAIC,EAAsB5E,EAAWjxC,wBACTvB,IAAxBo3C,IACA3O,GAAoB2O,GAKxB,IAAIC,EAAe7E,EAAW/xC,YAC9B,IAAK42C,GAAgB,eAAmBA,EAAc9O,GAAe,CACjE,IAAI+O,EAAqB,eAAmB9E,EAAY/J,EAAkBF,GACtEE,EACA4M,SAASiC,IAAuBA,EAAqB,IACrD7O,GAAoB6O,GAG5B,OAAO7O,EAcJ,SAAS8O,GAAgC/E,EAAYC,EAAYC,EAAchK,GAClF,IAAIF,EAAe,eAAUkK,GACzBjK,EAAmByO,EAA0B1E,EAAYC,EAAYjK,EAAcE,GAOvF,QANK2M,SAAS5M,IAAqBA,GAAoB,IACnD,eAAciK,GAAc,SAAU3yC,GAElC,OADA0oC,EAAmByO,EAA0B1E,EAAYC,EAAY1yC,EAAQ2oC,GACtE2M,SAAS5M,IAAqBA,EAAmB,KAGzDA,EAsBJ,SAAS,GAAOznC,EAAOD,EAAQoW,EAAYsxB,EAAkB4O,EAAc3O,EAAkBgK,EAAc8E,EAAeC,EAAS75B,EAAQ85B,EAAiBC,GAC/J,IAAIt9B,EAAU,eAAsB9a,KAAKqZ,MAAMzB,EAAanW,GAAQzB,KAAKqZ,MAAMzB,EAAapW,IAE5F,GADA,eAAOsZ,EAASs9B,GACO,IAAnBF,EAAQv2C,OACR,OAAOmZ,EAAQC,OAGnB,SAASs9B,EAAW9uB,GAChB,OAAOvpB,KAAKqZ,MAAMkQ,EAAQ3R,GAAcA,EAF5CkD,EAAQ+oB,MAAMjsB,EAAYA,GAI1BkD,EAAQ28B,yBAA2B,UACnC,IAAIa,EAAmB,iBACvBJ,EAAQ/zB,SAAQ,SAAUsrB,EAAKzpC,EAAGgvC,GAC9B,eAAOsD,EAAkB7I,EAAIrvC,WAEjC,IAAIm4C,EAAqB,eAASD,GAC9BE,EAAsB,eAAUF,GAChCG,EAAgB,eAAsBz4C,KAAKqZ,MAAOzB,EAAa2gC,EAAsBrP,GAAmBlpC,KAAKqZ,MAAOzB,EAAa4gC,EAAuBtP,IAC5J,eAAOuP,EAAeL,GACtB,IAAIM,EAAc9gC,EAAasxB,EAC/BgP,EAAQ/zB,SAAQ,SAAUsrB,EAAKzpC,EAAGgvC,GAC9B,IAAI2D,EAAOlJ,EAAIrvC,OAAO,GAAKk4C,EAAiB,GACxCM,IAASnJ,EAAIrvC,OAAO,GAAKk4C,EAAiB,IAC1CO,EAAW,eAASpJ,EAAIrvC,QACxB04C,EAAY,eAAUrJ,EAAIrvC,QAE1BqvC,EAAInxB,MAAM7c,MAAQ,GAAKguC,EAAInxB,MAAM9c,OAAS,GAC1Ci3C,EAAc75B,UAAU6wB,EAAInxB,MAAOD,EAAQA,EAAQoxB,EAAInxB,MAAM7c,MAAQ,EAAI4c,EAAQoxB,EAAInxB,MAAM9c,OAAS,EAAI6c,EAAQs6B,EAAOD,EAAaE,EAAOF,EAAaG,EAAWH,EAAaI,EAAYJ,MAGpM,IAAIK,EAAgB,eAAW5F,GA8G/B,OA7GA8E,EAAcrB,eAAezyB,SAAQ,SAAU4wB,EAAU/uC,EAAGgvC,GAqBxD,IAAInrB,EAASkrB,EAASlrB,OAClBtjB,EAASwuC,EAASxuC,OAClByjC,EAAKngB,EAAO,GAAG,GAAIogB,EAAKpgB,EAAO,GAAG,GAClCvJ,EAAKuJ,EAAO,GAAG,GAAItJ,EAAKsJ,EAAO,GAAG,GAClCnJ,EAAKmJ,EAAO,GAAG,GAAIlJ,EAAKkJ,EAAO,GAAG,GAElCmvB,EAAKX,GAAY9xC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,GACpD8P,EAAKZ,IAAa9xC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,GACrD8N,EAAKoB,GAAY9xC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,GACpD+N,EAAKmB,IAAa9xC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,GACrDgO,EAAKkB,GAAY9xC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,GACpDiO,EAAKiB,IAAa9xC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,GAIrD+P,EAAwBlP,EACxBmP,EAAwBlP,EAC5BD,EAAK,EACLC,EAAK,EACL3pB,GAAM44B,EACN34B,GAAM44B,EACNz4B,GAAMw4B,EACNv4B,GAAMw4B,EACN,IAAIC,EAAkB,CAClB,CAAC94B,EAAIC,EAAI,EAAG,EAAG02B,EAAK+B,GACpB,CAACt4B,EAAIC,EAAI,EAAG,EAAGw2B,EAAK6B,GACpB,CAAC,EAAG,EAAG14B,EAAIC,EAAI22B,EAAK+B,GACpB,CAAC,EAAG,EAAGv4B,EAAIC,EAAIy2B,EAAK6B,IAEpBI,EAAc,eAAkBD,GACpC,GAAKC,EAAL,CAKA,GAFAv+B,EAAQuC,OACRvC,EAAQ0C,YACJ+5B,KACAa,IAAuBvB,EAA0B,CAEjD/7B,EAAQ2C,OAAOw5B,EAAIC,GAKnB,IAHA,IAAIoC,EAAQ,EACRC,EAAKP,EAAK/B,EACVuC,EAAKP,EAAK/B,EACLuC,EAAO,EAAGA,EAAOH,EAAOG,IAE7B3+B,EAAQ4C,OAAOu5B,EAAKoB,GAAaoB,EAAO,GAAKF,EAAMD,GAAQpC,EAAKmB,EAAYoB,EAAOD,GAAOF,EAAQ,KAE9FG,GAAQH,EAAQ,GAChBx+B,EAAQ4C,OAAOu5B,EAAKoB,GAAaoB,EAAO,GAAKF,EAAMD,GAAQpC,EAAKmB,GAAaoB,EAAO,GAAKD,GAAOF,EAAQ,KAIhHx+B,EAAQ4C,OAAOy5B,EAAIC,QAGnBt8B,EAAQ2C,OAAOw5B,EAAIC,GACnBp8B,EAAQ4C,OAAOs7B,EAAIC,GACnBn+B,EAAQ4C,OAAOy5B,EAAIC,GAEvBt8B,EAAQyC,OACRzC,EAAQqD,UAAUk7B,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIA,EAAY,GAAIL,EAAIC,GACtFn+B,EAAQ4+B,UAAUpB,EAAiB,GAAKY,EAAuBZ,EAAiB,GAAKa,GACrFr+B,EAAQ+oB,MAAMqF,EAAmBtxB,GAAasxB,EAAmBtxB,GACjEkD,EAAQ8D,UAAU65B,EAAc19B,OAAQ,EAAG,GAC3CD,EAAQ8C,cAERu6B,IACAr9B,EAAQuC,OACRvC,EAAQ28B,yBAA2B,cACnC38B,EAAQ6+B,YAAc,QACtB7+B,EAAQ8+B,UAAY,EACpB3B,EAAcrB,eAAezyB,SAAQ,SAAU4wB,EAAU/uC,EAAGgvC,GACxD,IAAIzuC,EAASwuC,EAASxuC,OAClByyC,GAAMzyC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,EACzC8P,IAAO1yC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,EAC1C8N,GAAM1wC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,EACzC+N,IAAO3wC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,EAC1CgO,GAAM5wC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,EACzCiO,IAAO7wC,EAAO,GAAG,GAAKwyC,EAAc,IAAM5P,EAC9CruB,EAAQ0C,YACR1C,EAAQ2C,OAAOw5B,EAAIC,GACnBp8B,EAAQ4C,OAAOs7B,EAAIC,GACnBn+B,EAAQ4C,OAAOy5B,EAAIC,GACnBt8B,EAAQu8B,YACRv8B,EAAQ++B,YAEZ/+B,EAAQ8C,WAEL9C,EAAQC,O,iBIjSf,GAAwC,WACxC,IAAIxX,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAkCxC,GAA4B,SAAUK,GAiBtC,SAAS01C,EAAW7G,EAAY8G,EAAgB7G,EAAY8G,EAAgBx6C,EAAWy6C,EAAkBriC,EAAYyG,EAAQ67B,EAAiBC,EAAoBhC,EAAiBC,GAC/K,IAAI9zC,EAAQF,EAAOG,KAAKP,KAAMxE,EAAW8X,EAAA,KAAUmI,OAASzb,KAK5DM,EAAM81C,kBAAmC35C,IAApB03C,GAAgCA,EAKrD7zC,EAAM+1C,gBAAkBjC,EAKxB9zC,EAAMmxB,YAAc7d,EAKpBtT,EAAMg2C,QAAUj8B,EAKhB/Z,EAAMi2C,QAAU,KAKhBj2C,EAAMk2C,gBAAkBT,EAKxBz1C,EAAMm2C,gBAAkBT,EAKxB11C,EAAMo2C,kBAAoBT,GAAsCz6C,EAKhE8E,EAAMq2C,aAAe,GAKrBr2C,EAAMs2C,qBAAuB,KAK7Bt2C,EAAMu2C,SAAW,EACjB,IAAI1H,EAAe6G,EAAex9B,mBAAmBlY,EAAMo2C,mBACvDI,EAAkBx2C,EAAMm2C,gBAAgBv5C,YACxCkyC,EAAkB9uC,EAAMk2C,gBAAgBt5C,YACxC65C,EAAsBD,EACpB,eAAgB3H,EAAc2H,GAC9B3H,EACN,GAAqC,IAAjC,eAAQ4H,GAIR,OADAz2C,EAAMiwB,MAAQjd,EAAA,KAAUE,MACjBlT,EAEX,IAAI02C,EAAmB/H,EAAW/xC,YAC9B85C,IAKI5H,EAJCA,EAIiB,eAAgBA,EAAiB4H,GAHjCA,GAM1B,IAAI7R,EAAmB6Q,EAAerxC,cAAcrE,EAAMo2C,kBAAkB,IACxExR,EAAmB8O,GAAgC/E,EAAYC,EAAY6H,EAAqB5R,GACpG,IAAK2M,SAAS5M,IAAqBA,GAAoB,EAInD,OADA5kC,EAAMiwB,MAAQjd,EAAA,KAAUE,MACjBlT,EAEX,IAAI22C,OAAgDx6C,IAAvB05C,EAAmCA,EAAqBvH,EAMrF,GADAtuC,EAAM42C,eAAiB,IAAI,EAAcjI,EAAYC,EAAY6H,EAAqB3H,EAAiBlK,EAAmB+R,EAAwB9R,GAC/F,IAA/C7kC,EAAM42C,eAAetE,eAAej1C,OAGpC,OADA2C,EAAMiwB,MAAQjd,EAAA,KAAUE,MACjBlT,EAEXA,EAAMu2C,SAAWd,EAAehhC,kBAAkBmwB,GAClD,IAAI4O,EAAexzC,EAAM42C,eAAevE,wBAUxC,GATIvD,IACIH,EAAWhqB,YACX6uB,EAAa,GAAK,eAAMA,EAAa,GAAI1E,EAAgB,GAAIA,EAAgB,IAC7E0E,EAAa,GAAK,eAAMA,EAAa,GAAI1E,EAAgB,GAAIA,EAAgB,KAG7E0E,EAAe,eAAgBA,EAAc1E,IAGhD,eAAQ0E,GAGR,CAED,IADA,IAAIqD,EAAcpB,EAAe92C,0BAA0B60C,EAAcxzC,EAAMu2C,UACtEO,EAAOD,EAAYxhC,KAAMyhC,GAAQD,EAAYvhC,KAAMwhC,IACxD,IAAK,IAAIC,EAAOF,EAAYthC,KAAMwhC,GAAQF,EAAYrhC,KAAMuhC,IAAQ,CAChE,IAAInkC,EAAOgjC,EAAgB51C,EAAMu2C,SAAUO,EAAMC,EAAMzjC,GACnDV,GACA5S,EAAMq2C,aAAapqC,KAAK2G,GAIF,IAA9B5S,EAAMq2C,aAAah5C,SACnB2C,EAAMiwB,MAAQjd,EAAA,KAAUE,YAb5BlT,EAAMiwB,MAAQjd,EAAA,KAAUE,MAgB5B,OAAOlT,EAsFX,OAnOA,GAAUw1C,EAAY11C,GAmJtB01C,EAAW51C,UAAU6a,SAAW,WAC5B,OAAO/a,KAAKu2C,SAKhBT,EAAW51C,UAAUo3C,WAAa,WAC9B,IAAIpD,EAAU,GAUd,GATAl0C,KAAK22C,aAAax2B,QAAQ,SAAUjN,EAAMlR,EAAGgvC,GACrC99B,GAAQA,EAAKG,YAAcC,EAAA,KAAUC,QACrC2gC,EAAQ3nC,KAAK,CACTnQ,OAAQ4D,KAAKw2C,gBAAgBh+B,mBAAmBtF,EAAK1X,WACrD8e,MAAOpH,EAAK6H,cAGtBlM,KAAK7O,OACPA,KAAK22C,aAAah5C,OAAS,EACJ,IAAnBu2C,EAAQv2C,OACRqC,KAAKuwB,MAAQjd,EAAA,KAAUG,UAEtB,CACD,IAAIhY,EAAIuE,KAAK02C,kBAAkB,GAC3BlwC,EAAOxG,KAAKy2C,gBAAgBjX,YAAY/jC,GACxCgC,EAAwB,kBAAT+I,EAAoBA,EAAOA,EAAK,GAC/ChJ,EAAyB,kBAATgJ,EAAoBA,EAAOA,EAAK,GAChD2+B,EAAmBnlC,KAAKy2C,gBAAgB9xC,cAAclJ,GACtDypC,EAAmBllC,KAAKw2C,gBAAgB7xC,cAAc3E,KAAK62C,UAC3D1H,EAAenvC,KAAKy2C,gBAAgBj+B,mBAAmBxY,KAAK02C,mBAChE12C,KAAKu2C,QAAU,GAAkB94C,EAAOD,EAAQwC,KAAKyxB,YAAayT,EAAkBllC,KAAKw2C,gBAAgBt5C,YAAaioC,EAAkBgK,EAAcnvC,KAAKk3C,eAAgBhD,EAASl0C,KAAKs2C,QAASt2C,KAAKo2C,aAAcp2C,KAAKq2C,iBAC1Nr2C,KAAKuwB,MAAQjd,EAAA,KAAUC,OAE3BvT,KAAKgf,WAKT82B,EAAW51C,UAAU4wB,KAAO,WACxB,GAAI9wB,KAAKuwB,OAASjd,EAAA,KAAUmI,KAAM,CAC9Bzb,KAAKuwB,MAAQjd,EAAA,KAAUg4B,QACvBtrC,KAAKgf,UACL,IAAIu4B,EAAe,EACnBv3C,KAAK42C,qBAAuB,GAC5B52C,KAAK22C,aAAax2B,QAAQ,SAAUjN,EAAMlR,EAAGgvC,GACzC,IAAIzgB,EAAQrd,EAAKG,WACjB,GAAIkd,GAASjd,EAAA,KAAUmI,MAAQ8U,GAASjd,EAAA,KAAUg4B,QAAS,CACvDiM,IACA,IAAIC,EAAoB,gBAAOtkC,EAAMjI,EAAA,KAAUke,QAAQ,SAAUsuB,GAC7D,IAAIlnB,EAAQrd,EAAKG,WACbkd,GAASjd,EAAA,KAAUC,QACnBgd,GAASjd,EAAA,KAAUG,OACnB8c,GAASjd,EAAA,KAAUE,QACnB,gBAAcgkC,GACdD,IACqB,IAAjBA,IACAv3C,KAAK03C,mBACL13C,KAAKs3C,iBAGdt3C,MACHA,KAAK42C,qBAAqBrqC,KAAKirC,KAErC3oC,KAAK7O,OACPA,KAAK22C,aAAax2B,SAAQ,SAAUjN,EAAMlR,EAAGgvC,GACzC,IAAIzgB,EAAQrd,EAAKG,WACbkd,GAASjd,EAAA,KAAUmI,MACnBvI,EAAK4d,UAGQ,IAAjBymB,GACA3oC,WAAW5O,KAAKs3C,WAAWzoC,KAAK7O,MAAO,KAOnD81C,EAAW51C,UAAUw3C,iBAAmB,WACpC13C,KAAK42C,qBAAqBz2B,QAAQ,SAClCngB,KAAK42C,qBAAuB,MAEzBd,EApOoB,CAqO7B,GACa,M,aCpPX,GAA0B,WAI1B,SAAS6B,EAASC,GAMd53C,KAAK63C,mBACqBp7C,IAAtBm7C,EAAkCA,EAAoB,KAK1D53C,KAAK83C,OAAS,EAKd93C,KAAK+3C,SAAW,GAKhB/3C,KAAKg4C,QAAU,KAKfh4C,KAAKi4C,QAAU,KAiMnB,OA5LAN,EAASz3C,UAAU8a,eAAiB,WAChC,OAAOhb,KAAK63C,cAAgB,GAAK73C,KAAK6uB,WAAa7uB,KAAK63C,eAK5DF,EAASz3C,UAAUujB,MAAQ,WACvBzjB,KAAK83C,OAAS,EACd93C,KAAK+3C,SAAW,GAChB/3C,KAAKg4C,QAAU,KACfh4C,KAAKi4C,QAAU,MAMnBN,EAASz3C,UAAUg4C,YAAc,SAAU15C,GACvC,OAAOwB,KAAK+3C,SAASj4C,eAAetB,IAQxCm5C,EAASz3C,UAAUigB,QAAU,SAAUg4B,GACnC,IAAI7yB,EAAQtlB,KAAKg4C,QACjB,MAAO1yB,EACH6yB,EAAE7yB,EAAM8yB,OAAQ9yB,EAAM+yB,KAAMr4C,MAC5BslB,EAAQA,EAAMgzB,OAQtBX,EAASz3C,UAAU6R,IAAM,SAAUvT,EAAKxB,GACpC,IAAIsoB,EAAQtlB,KAAK+3C,SAASv5C,GAE1B,OADA,qBAAiB/B,IAAV6oB,EAAqB,IACxBA,IAAUtlB,KAAKi4C,UAGV3yB,IAAUtlB,KAAKg4C,SACpBh4C,KAAKg4C,QAAgCh4C,KAAKg4C,QAAa,MACvDh4C,KAAKg4C,QAAQO,MAAQ,OAGrBjzB,EAAMgzB,MAAMC,MAAQjzB,EAAMizB,MAC1BjzB,EAAMizB,MAAMD,MAAQhzB,EAAMgzB,OAE9BhzB,EAAMgzB,MAAQ,KACdhzB,EAAMizB,MAAQv4C,KAAKi4C,QACnBj4C,KAAKi4C,QAAQK,MAAQhzB,EACrBtlB,KAAKi4C,QAAU3yB,GAbJA,EAAM8yB,QAqBrBT,EAASz3C,UAAU63B,OAAS,SAAUv5B,GAClC,IAAI8mB,EAAQtlB,KAAK+3C,SAASv5C,GAoB1B,OAnBA,qBAAiB/B,IAAV6oB,EAAqB,IACxBA,IAAUtlB,KAAKi4C,SACfj4C,KAAKi4C,QAAgC3yB,EAAW,MAC5CtlB,KAAKi4C,UACLj4C,KAAKi4C,QAAQK,MAAQ,OAGpBhzB,IAAUtlB,KAAKg4C,SACpBh4C,KAAKg4C,QAAgC1yB,EAAW,MAC5CtlB,KAAKg4C,UACLh4C,KAAKg4C,QAAQO,MAAQ,QAIzBjzB,EAAMgzB,MAAMC,MAAQjzB,EAAMizB,MAC1BjzB,EAAMizB,MAAMD,MAAQhzB,EAAMgzB,cAEvBt4C,KAAK+3C,SAASv5C,KACnBwB,KAAK83C,OACAxyB,EAAM8yB,QAKjBT,EAASz3C,UAAU2uB,SAAW,WAC1B,OAAO7uB,KAAK83C,QAKhBH,EAASz3C,UAAUs4C,QAAU,WACzB,IAEIlzB,EAFA3N,EAAO,IAAI/Z,MAAMoC,KAAK83C,QACtB91C,EAAI,EAER,IAAKsjB,EAAQtlB,KAAKi4C,QAAS3yB,EAAOA,EAAQA,EAAMizB,MAC5C5gC,EAAK3V,KAAOsjB,EAAM+yB,KAEtB,OAAO1gC,GAKXggC,EAASz3C,UAAUu4C,UAAY,WAC3B,IAEInzB,EAFAwO,EAAS,IAAIl2B,MAAMoC,KAAK83C,QACxB91C,EAAI,EAER,IAAKsjB,EAAQtlB,KAAKi4C,QAAS3yB,EAAOA,EAAQA,EAAMizB,MAC5CzkB,EAAO9xB,KAAOsjB,EAAM8yB,OAExB,OAAOtkB,GAKX6jB,EAASz3C,UAAUw4C,SAAW,WAC1B,OAAO14C,KAAKg4C,QAAQI,QAKxBT,EAASz3C,UAAUy4C,YAAc,WAC7B,OAAO34C,KAAKg4C,QAAQK,MAMxBV,EAASz3C,UAAU04C,aAAe,WAC9B,OAAO54C,KAAKi4C,QAAQI,MAKxBV,EAASz3C,UAAUsuB,IAAM,WACrB,IAAIlJ,EAAQtlB,KAAKg4C,QAUjB,cATOh4C,KAAK+3C,SAASzyB,EAAM+yB,MACvB/yB,EAAMgzB,QACNhzB,EAAMgzB,MAAMC,MAAQ,MAExBv4C,KAAKg4C,QAAgC1yB,EAAW,MAC3CtlB,KAAKg4C,UACNh4C,KAAKi4C,QAAU,QAEjBj4C,KAAK83C,OACAxyB,EAAM8yB,QAMjBT,EAASz3C,UAAU24C,QAAU,SAAUr6C,EAAK+mB,GACxCvlB,KAAK+R,IAAIvT,GACTwB,KAAK+3C,SAASv5C,GAAK45C,OAAS7yB,GAMhCoyB,EAASz3C,UAAU+R,IAAM,SAAUzT,EAAK+mB,GACpC,kBAAS/mB,KAAOwB,KAAK+3C,UAAW,IAChC,IAAIzyB,EAAQ,CACR+yB,KAAM75C,EACN85C,MAAO,KACPC,MAAOv4C,KAAKi4C,QACZG,OAAQ7yB,GAEPvlB,KAAKi4C,QAINj4C,KAAKi4C,QAAQK,MAAQhzB,EAHrBtlB,KAAKg4C,QAAU1yB,EAKnBtlB,KAAKi4C,QAAU3yB,EACftlB,KAAK+3C,SAASv5C,GAAO8mB,IACnBtlB,KAAK83C,QAOXH,EAASz3C,UAAU24B,QAAU,SAAUryB,GACnCxG,KAAK63C,cAAgBrxC,GAElBmxC,EAhOkB,GAkOd,M,aCtPX,GAAwC,WACxC,IAAIp4C,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAkBxC,GAA2B,SAAUK,GAErC,SAAS04C,IACL,OAAkB,OAAX14C,GAAmBA,EAAO2vB,MAAM/vB,KAAM6B,YAAc7B,KAiC/D,OAnCA,GAAU84C,EAAW14C,GAOrB04C,EAAU54C,UAAUib,YAAc,SAAUrB,GACxC,MAAO9Z,KAAKgb,iBAAkB,CAC1B,IAAI9H,EAAOlT,KAAK04C,WAChB,GAAIxlC,EAAK5U,WAAYwb,EACjB,MAGA9Z,KAAKwuB,MAAM6e,YAOvByL,EAAU54C,UAAU64C,mBAAqB,WACrC,GAAwB,IAApB/4C,KAAK6uB,WAAT,CAGA,IAAIrwB,EAAMwB,KAAK44C,eACXp9C,EAAY,gBAAQgD,GACpB/C,EAAID,EAAU,GAClBwE,KAAKmgB,QAAQ,SAAUjN,GACfA,EAAK1X,UAAU,KAAOC,IACtBuE,KAAK+3B,OAAO,gBAAO7kB,EAAK1X,YACxB0X,EAAKm6B,YAEXx+B,KAAK7O,SAEJ84C,EApCmB,CAqC5B,IACa,MClDA,IAMXE,cAAe,gBAOfC,YAAa,cAMbC,cAAe,iB,oDCzBf,GAAwC,WACxC,IAAI35C,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GAgDxC,GAA4B,SAAUK,GAKtC,SAAS+4C,EAAW34C,GAChB,IAAIF,EAAQF,EAAOG,KAAKP,KAAM,CAC1Bm7B,aAAc36B,EAAQ26B,aACtBie,wBAAyB54C,EAAQ44C,wBACjCl+C,WAAYsF,EAAQtF,WACpBq1B,MAAO/vB,EAAQ+vB,MACfh1B,MAAOiF,EAAQjF,SACbyE,KAKNM,EAAM+4C,aAA6B58C,IAAnB+D,EAAQ84C,QAAuB94C,EAAQ84C,OAKvDh5C,EAAMi5C,qBACyB98C,IAA3B+D,EAAQ2U,eAA+B3U,EAAQ2U,eAAiB,EAKpE7U,EAAMnF,cAAgCsB,IAArB+D,EAAQrF,SAAyBqF,EAAQrF,SAAW,KACrE,IAAI2B,EAAW,CAAC,IAAK,KACjB3B,EAAWqF,EAAQrF,SAgCvB,OA/BIA,GACA,gBAAOA,EAASqkC,YAAYrkC,EAAS2D,cAAehC,GAMxDwD,EAAMk5C,UAAY,IAAI,GAAUh5C,EAAQi5C,WAAa,GAKrDn5C,EAAMo5C,QAAU,CAAC,EAAG,GAKpBp5C,EAAM+3C,KAAO73C,EAAQhC,KAAO,GAK5B8B,EAAMq5C,YAAc,CAAEvgC,WAAY5Y,EAAQ4Y,YAQ1C9Y,EAAM0U,WAAaxU,EAAQwU,WAAaxU,EAAQwU,WAAa,EACtD1U,EAoNX,OAjRA,GAAU64C,EAAY/4C,GAkEtB+4C,EAAWj5C,UAAU8a,eAAiB,WAClC,OAAOhb,KAAKw5C,UAAUx+B,kBAM1Bm+B,EAAWj5C,UAAUib,YAAc,SAAUjgB,EAAY4e,GACrD,IAAI0/B,EAAYx5C,KAAK45C,0BAA0B1+C,GAC3Cs+C,GACAA,EAAUr+B,YAAYrB,IAY9Bq/B,EAAWj5C,UAAU25C,kBAAoB,SAAU3+C,EAAYO,EAAGuD,EAAWohB,GACzE,IAAIo5B,EAAYx5C,KAAK45C,0BAA0B1+C,GAC/C,IAAKs+C,EACD,OAAO,EAIX,IAFA,IACItmC,EAAM2F,EAAcihC,EADpBvjC,GAAU,EAELrY,EAAIc,EAAU2W,KAAMzX,GAAKc,EAAU4W,OAAQ1X,EAChD,IAAK,IAAIC,EAAIa,EAAU6W,KAAM1X,GAAKa,EAAU8W,OAAQ3X,EAChD0a,EAAe,gBAAUpd,EAAGyC,EAAGC,GAC/B27C,GAAS,EACLN,EAAUtB,YAAYr/B,KACtB3F,EAAqDsmC,EAAUznC,IAAI8G,GACnEihC,EAAS5mC,EAAKG,aAAeC,EAAA,KAAUC,OACnCumC,IACAA,GAA4B,IAAnB15B,EAASlN,KAGrB4mC,IACDvjC,GAAU,GAItB,OAAOA,GAMX4iC,EAAWj5C,UAAUyY,uBAAyB,SAAUzd,GACpD,OAAO,GAOXi+C,EAAWj5C,UAAU5B,OAAS,WAC1B,OAAO0B,KAAKq4C,MAOhBc,EAAWj5C,UAAU65C,OAAS,SAAUv7C,GAChCwB,KAAKq4C,OAAS75C,IACdwB,KAAKq4C,KAAO75C,EACZwB,KAAKgf,YAObm6B,EAAWj5C,UAAU2X,UAAY,SAAU3c,GACvC,OAAO8E,KAAKq5C,SAKhBF,EAAWj5C,UAAUo/B,eAAiB,WAClC,OAAOt/B,KAAK7E,SAASmkC,kBAWzB6Z,EAAWj5C,UAAUwT,QAAU,SAAUjY,EAAGyC,EAAGC,EAAGyV,EAAY1Y,GAC1D,OAAO,kBAOXi+C,EAAWj5C,UAAU85C,YAAc,WAC/B,OAAOh6C,KAAK7E,UAMhBg+C,EAAWj5C,UAAU4U,yBAA2B,SAAU5Z,GACtD,OAAK8E,KAAK7E,SAIC6E,KAAK7E,SAHL,gBAAyBD,IAWxCi+C,EAAWj5C,UAAU05C,0BAA4B,SAAU1+C,GACvD,IAAI++C,EAAWj6C,KAAKw1B,gBACpB,OAAIykB,IAAa,eAAWA,EAAU/+C,GAC3B,KAGA8E,KAAKw5C,WAUpBL,EAAWj5C,UAAUkV,kBAAoB,SAAUxB,GAC/C,OAAO5T,KAAKu5C,iBAQhBJ,EAAWj5C,UAAU+X,iBAAmB,SAAUxc,EAAGmY,EAAY1Y,GAC7D,IAAIC,EAAW6E,KAAK8U,yBAAyB5Z,GACzCia,EAAiBnV,KAAKoV,kBAAkBxB,GACxC9W,EAAW,gBAAO3B,EAASqkC,YAAY/jC,GAAIuE,KAAK05C,SACpD,OAAsB,GAAlBvkC,EACOrY,EAGA,gBAAUA,EAAUqY,EAAgBnV,KAAK05C,UAYxDP,EAAWj5C,UAAUg6C,+BAAiC,SAAU1+C,EAAW2+C,GACvE,IAAIj/C,OAAgCuB,IAAnB09C,EAA+BA,EAAiBn6C,KAAKw1B,gBAClEr6B,EAAW6E,KAAK8U,yBAAyB5Z,GAI7C,OAHI8E,KAAK8lB,YAAc5qB,EAAW0vC,aAC9BpvC,EAAY,gBAAML,EAAUK,EAAWN,IAEpC,gBAAiBM,EAAWL,GAAYK,EAAY,MAM/D29C,EAAWj5C,UAAUujB,MAAQ,WACzBzjB,KAAKw5C,UAAU/1B,SAEnB01B,EAAWj5C,UAAUk6C,QAAU,WAC3Bp6C,KAAKyjB,QACLrjB,EAAOF,UAAUk6C,QAAQ75C,KAAKP,OAOlCm5C,EAAWj5C,UAAU2b,gBAAkB,SAAUL,EAAWtgB,GACxD,IAAIs+C,EAAYx5C,KAAK45C,0BAA0B1+C,GAC3CsgB,EAAYg+B,EAAU3B,gBACtB2B,EAAU3B,cAAgBr8B,IAWlC29B,EAAWj5C,UAAU0b,QAAU,SAAUngB,EAAGyC,EAAGC,EAAGjD,KAC3Ci+C,EAlRoB,CAmR7BkB,GAAA,MAMEC,GAAiC,SAAUl6C,GAM3C,SAASk6C,EAAgBt5C,EAAMkS,GAC3B,IAAI5S,EAAQF,EAAOG,KAAKP,KAAMgB,IAAShB,KAOvC,OADAM,EAAM4S,KAAOA,EACN5S,EAEX,OAfA,GAAUg6C,EAAiBl6C,GAepBk6C,EAhByB,CAiBlCjxC,GAAA,MAEa,MCjVR,SAASkxC,GAAmBC,EAAUr/C,GACzC,IAAIs/C,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,UACjB,OAAO,SAOGp/C,EAAWoY,EAAY1Y,GAC7B,OAAKM,EAIMg/C,EACF3B,QAAQ4B,EAAQj/C,EAAU,GAAGwa,YAC7B6iC,QAAQ6B,EAAQl/C,EAAU,GAAGwa,YAC7B6iC,QAAQ8B,EAAQn/C,EAAU,GAAGwa,YAC7B6iC,QAAQ+B,GAAY,WACrB,IAAIn/C,EAAID,EAAU,GACdq/C,EAAQ1/C,EAAS+D,iBAAiBzD,GACtC,gBAAOo/C,EAAO,IACd,IAAI18C,EAAI08C,EAAMC,YAAct/C,EAAU,GAAK,EAC3C,OAAO2C,EAAE6X,mBAZb,GAsBL,SAAS+kC,GAAoBC,EAAW7/C,GAG3C,IAFA,IAAI8/C,EAAMD,EAAUr9C,OAChBu9C,EAAmB,IAAIt9C,MAAMq9C,GACxBj5C,EAAI,EAAGA,EAAIi5C,IAAOj5C,EACvBk5C,EAAiBl5C,GAAKu4C,GAAmBS,EAAUh5C,GAAI7G,GAE3D,OAAOggD,GAA2BD,GAM/B,SAASC,GAA2BD,GACvC,OAAgC,IAA5BA,EAAiBv9C,OACVu9C,EAAiB,GAErB,SAOG1/C,EAAWoY,EAAY1Y,GAC7B,GAAKM,EAGA,CACD,IAAI2d,EAAI,gBAAc3d,GAClB8hB,EAAQ,eAAOnE,EAAG+hC,EAAiBv9C,QACvC,OAAOu9C,EAAiB59B,GAAO9hB,EAAWoY,EAAY1Y,KAiB3D,SAASkgD,GAAUC,GACtB,IAAIC,EAAO,GACPC,EAAQ,sBAAsBC,KAAKH,GACvC,GAAIE,EAAO,CAEP,IAAIE,EAAgBF,EAAM,GAAG3vC,WAAW,GACpC8vC,EAAeH,EAAM,GAAG3vC,WAAW,GACnCD,OAAW,EACf,IAAKA,EAAW8vC,EAAe9vC,GAAY+vC,IAAgB/vC,EACvD2vC,EAAK/uC,KAAK8uC,EAAIxC,QAAQ0C,EAAM,GAAII,OAAOC,aAAajwC,KAExD,OAAO2vC,EAGX,GADAC,EAAQ,kBAAkBC,KAAKH,GAC3BE,EAAO,CAGP,IADA,IAAIM,EAASziB,SAASmiB,EAAM,GAAI,IACvBv5C,EAAIo3B,SAASmiB,EAAM,GAAI,IAAKv5C,GAAK65C,EAAQ75C,IAC9Cs5C,EAAK/uC,KAAK8uC,EAAIxC,QAAQ0C,EAAM,GAAIv5C,EAAEgU,aAEtC,OAAOslC,EAGX,OADAA,EAAK/uC,KAAK8uC,GACHC,ECrHX,IAAI,GAAwC,WACxC,IAAI/7C,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA+CxC,GAAyB,SAAUK,GAKnC,SAAS07C,EAAQt7C,GACb,IAAIF,EAAQF,EAAOG,KAAKP,KAAM,CAC1Bm7B,aAAc36B,EAAQ26B,aACtBse,UAAWj5C,EAAQi5C,UACnBH,OAAQ94C,EAAQ84C,OAChBp+C,WAAYsF,EAAQtF,WACpBq1B,MAAO/vB,EAAQ+vB,MACfp1B,SAAUqF,EAAQrF,SAClBga,eAAgB3U,EAAQ2U,eACxB5Z,MAAOiF,EAAQjF,MACf6d,WAAY5Y,EAAQ4Y,WACpB5a,IAAKgC,EAAQhC,IACb46C,wBAAyB54C,EAAQ44C,wBACjCpkC,WAAYxU,EAAQwU,cAClBhV,KA+BN,OA1BAM,EAAMy7C,yBACFz7C,EAAM07C,kBAAoBF,EAAQ57C,UAAU87C,gBAKhD17C,EAAMqtC,iBAAmBntC,EAAQmtC,iBAC7BntC,EAAQw7C,kBACR17C,EAAM07C,gBAAkBx7C,EAAQw7C,gBAAgBntC,KAAKvO,IAMzDA,EAAMg7C,KAAO,KACT96C,EAAQ86C,KACRh7C,EAAM27C,QAAQz7C,EAAQ86C,MAEjB96C,EAAQ66C,KACb/6C,EAAM47C,OAAO17C,EAAQ66C,KAMzB/6C,EAAM67C,iBAAmB,GAClB77C,EA+HX,OAhLA,GAAUw7C,EAAS17C,GAwDnB07C,EAAQ57C,UAAUk8C,oBAAsB,WACpC,OAAOp8C,KAAK2tC,kBAOhBmO,EAAQ57C,UAAUm8C,mBAAqB,WACnC,OAAOr8C,KAAKg8C,iBAShBF,EAAQ57C,UAAUo8C,QAAU,WACxB,OAAOt8C,KAAKs7C,MAOhBQ,EAAQ57C,UAAU+vB,iBAAmB,SAAUnuB,GAC3C,IAGId,EAHAkS,EAAoDpR,EAAY,OAChEiU,EAAM,eAAO7C,GACbE,EAAYF,EAAKG,WAEjBD,GAAaE,EAAA,KAAUg4B,SACvBtrC,KAAKm8C,iBAAiBpmC,IAAO,EAC7B/U,EAAOu7C,GAAcvD,eAEhBjjC,KAAO/V,KAAKm8C,0BACVn8C,KAAKm8C,iBAAiBpmC,GAC7B/U,EACIoS,GAAaE,EAAA,KAAUG,MACjB8oC,GAAcrD,cACd9lC,GAAaE,EAAA,KAAUC,OACnBgpC,GAActD,iBACdx8C,QAENA,GAARuE,GACAhB,KAAK8J,cAAc,IAAIwwC,GAAgBt5C,EAAMkS,KAQrD4oC,EAAQ57C,UAAUs8C,oBAAsB,SAAU7O,GAC9C3tC,KAAKw5C,UAAU/1B,QACfzjB,KAAK2tC,iBAAmBA,EACxB3tC,KAAKgf,WAQT88B,EAAQ57C,UAAUu8C,mBAAqB,SAAUT,EAAiBx9C,GAC9DwB,KAAKg8C,gBAAkBA,EACvBh8C,KAAKw5C,UAAUT,qBACI,qBAARv6C,EACPwB,KAAK+5C,OAAOv7C,GAGZwB,KAAKgf,WAQb88B,EAAQ57C,UAAUg8C,OAAS,SAAUb,GACjC,IAAIC,EAAOF,GAAUC,GACrBr7C,KAAKs7C,KAAOA,EACZt7C,KAAKi8C,QAAQX,IAOjBQ,EAAQ57C,UAAU+7C,QAAU,SAAUX,GAClCt7C,KAAKs7C,KAAOA,EACZ,IAAI98C,EAAM88C,EAAKoB,KAAK,MAChB18C,KAAK+7C,yBACL/7C,KAAKy8C,mBAAmB1B,GAAoBO,EAAMt7C,KAAK7E,UAAWqD,GAGlEwB,KAAK+5C,OAAOv7C,IASpBs9C,EAAQ57C,UAAU87C,gBAAkB,SAAUxgD,EAAWoY,EAAY1Y,KASrE4gD,EAAQ57C,UAAU0b,QAAU,SAAUngB,EAAGyC,EAAGC,GACxC,IAAI0a,EAAe,gBAAUpd,EAAGyC,EAAGC,GAC/B6B,KAAKw5C,UAAUtB,YAAYr/B,IAC3B7Y,KAAKw5C,UAAUznC,IAAI8G,IAGpBijC,EAjLiB,CAkL1B,IACa,MClOX,GAAwC,WACxC,IAAIv8C,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA+ExC,GAA2B,SAAUK,GAKrC,SAASu8C,EAAUn8C,GACf,IAAIF,EAAQF,EAAOG,KAAKP,KAAM,CAC1Bm7B,aAAc36B,EAAQ26B,aACtBse,UAAWj5C,EAAQi5C,UACnBH,OAAQ94C,EAAQ84C,OAChBp+C,WAAYsF,EAAQtF,WACpBq1B,MAAO/vB,EAAQ+vB,MACfp1B,SAAUqF,EAAQrF,SAClBwyC,iBAAkBntC,EAAQmtC,iBACpBntC,EAAQmtC,iBACRiP,GACNznC,eAAgB3U,EAAQ2U,eACxB6mC,gBAAiBx7C,EAAQw7C,gBACzBX,IAAK76C,EAAQ66C,IACbC,KAAM96C,EAAQ86C,KACd//C,MAAOiF,EAAQjF,MACf6d,WAAY5Y,EAAQ4Y,WACpB5a,IAAKgC,EAAQhC,IACb46C,wBAAyB54C,EAAQ44C,wBACjCpkC,WAAYxU,EAAQwU,cAClBhV,KAuCN,OAlCAM,EAAMotC,iBACsBjxC,IAAxB+D,EAAQktC,YAA4BltC,EAAQktC,YAAc,KAK9DptC,EAAMu8C,eACoBpgD,IAAtB+D,EAAQq8C,UAA0Br8C,EAAQq8C,UAAY,EAK1Dv8C,EAAMw8C,uBAAyB,GAK/Bx8C,EAAMy8C,sBAAwB,GAK9Bz8C,EAAM08C,4BAA8Bx8C,EAAQy8C,2BAK5C38C,EAAM+1C,iBACyB,IAA3B71C,EAAQ08C,eAA2BrK,OAA2Bp2C,EAKlE6D,EAAM68C,0BAA2B,EAC1B78C,EAmRX,OAlVA,GAAUq8C,EAAWv8C,GAoErBu8C,EAAUz8C,UAAU8a,eAAiB,WACjC,IAAK6zB,EACD,OAAOzuC,EAAOF,UAAU8a,eAAeza,KAAKP,MAEhD,GAAIA,KAAKw5C,UAAUx+B,iBACf,OAAO,EAGP,IAAK,IAAIxc,KAAOwB,KAAK88C,uBACjB,GAAI98C,KAAK88C,uBAAuBt+C,GAAKwc,iBACjC,OAAO,EAInB,OAAO,GAMX2hC,EAAUz8C,UAAUib,YAAc,SAAUjgB,EAAY4e,GACpD,GAAK+0B,EAAL,CAIA,IAAIuO,EAAgBp9C,KAAK45C,0BAA0B1+C,GAEnD,IAAK,IAAIytB,KADT3oB,KAAKw5C,UAAUr+B,YAAYnb,KAAKw5C,WAAa4D,EAAgBtjC,EAAY,IAC1D9Z,KAAK88C,uBAAwB,CACxC,IAAItD,EAAYx5C,KAAK88C,uBAAuBn0B,GAC5C6wB,EAAUr+B,YAAYq+B,GAAa4D,EAAgBtjC,EAAY,UAP/D1Z,EAAOF,UAAUib,YAAY5a,KAAKP,KAAM9E,EAAY4e,IAa5D6iC,EAAUz8C,UAAUmX,kBAAoB,WACpC,OAAOrX,KAAKq2C,iBAMhBsG,EAAUz8C,UAAUyY,uBAAyB,SAAUzd,GACnD,OAAI2zC,GACA7uC,KAAKw1B,iBACLt6B,IACC,eAAW8E,KAAKw1B,gBAAiBt6B,GAC3B,EAGA8E,KAAKq9C,aAMpBV,EAAUz8C,UAAUm9C,UAAY,WAC5B,OAAO,GAOXV,EAAUz8C,UAAU5B,OAAS,WACzB,OAAQ8B,EAAOF,UAAU5B,OAAOiC,KAAKP,OAChCA,KAAKq2C,gBAAkB,KAAOiH,KAAKC,UAAUv9C,KAAKq2C,iBAAmB,KAM9EsG,EAAUz8C,UAAU2X,UAAY,SAAU3c,GACtC,QAAI2zC,GACA7uC,KAAKw1B,iBACLt6B,IACC,eAAW8E,KAAKw1B,gBAAiBt6B,KAI3BkF,EAAOF,UAAU2X,UAAUtX,KAAKP,KAAM9E,IAOrDyhD,EAAUz8C,UAAU4U,yBAA2B,SAAU5Z,GACrD,IAAK2zC,EACD,OAAOzuC,EAAOF,UAAU4U,yBAAyBvU,KAAKP,KAAM9E,GAEhE,IAAI++C,EAAWj6C,KAAKw1B,gBACpB,IAAIx1B,KAAK7E,UAAc8+C,IAAY,eAAWA,EAAU/+C,GAGnD,CACD,IAAIsiD,EAAU,eAAOtiD,GAIrB,OAHMsiD,KAAWx9C,KAAK+8C,wBAClB/8C,KAAK+8C,sBAAsBS,GAAW,gBAAyBtiD,IAE5D8E,KAAK+8C,sBAAsBS,GAPlC,OAAOx9C,KAAK7E,UAcpBwhD,EAAUz8C,UAAU05C,0BAA4B,SAAU1+C,GACtD,IAAK2zC,EACD,OAAOzuC,EAAOF,UAAU05C,0BAA0Br5C,KAAKP,KAAM9E,GAEjE,IAAI++C,EAAWj6C,KAAKw1B,gBACpB,IAAKykB,GAAY,eAAWA,EAAU/+C,GAClC,OAAO8E,KAAKw5C,UAGZ,IAAIgE,EAAU,eAAOtiD,GAIrB,OAHMsiD,KAAWx9C,KAAK88C,yBAClB98C,KAAK88C,uBAAuBU,GAAW,IAAI,GAAUx9C,KAAKw5C,UAAU3B,gBAEjE73C,KAAK88C,uBAAuBU,IAa3Cb,EAAUz8C,UAAUu9C,YAAc,SAAUhiD,EAAGyC,EAAGC,EAAGyV,EAAY1Y,EAAYsD,GACzE,IAAIhD,EAAY,CAACC,EAAGyC,EAAGC,GACnBu/C,EAAe19C,KAAKk6C,+BAA+B1+C,EAAWN,GAC9DyiD,EAAUD,EACR19C,KAAKg8C,gBAAgB0B,EAAc9pC,EAAY1Y,QAC/CuB,EACFyW,EAAO,IAAIlT,KAAK68C,UAAUrhD,OAAuBiB,IAAZkhD,EAAwBrqC,EAAA,KAAUmI,KAAOnI,EAAA,KAAUE,WAAmB/W,IAAZkhD,EAAwBA,EAAU,GAAI39C,KAAK0tC,YAAa1tC,KAAK2tC,iBAAkB3tC,KAAK25C,aAGvL,OAFAzmC,EAAK1U,IAAMA,EACX0U,EAAKmV,iBAAiBpd,EAAA,KAAUke,OAAQnpB,KAAKiwB,iBAAiBphB,KAAK7O,OAC5DkT,GAUXypC,EAAUz8C,UAAUwT,QAAU,SAAUjY,EAAGyC,EAAGC,EAAGyV,EAAY1Y,GACzD,IAAI0iD,EAAmB59C,KAAKw1B,gBAC5B,GAAKqZ,GACA+O,GACA1iD,IACD,eAAW0iD,EAAkB1iD,GAG5B,CACD,IAAI2iD,EAAQ79C,KAAK45C,0BAA0B1+C,GACvCM,EAAY,CAACC,EAAGyC,EAAGC,GACnB+U,OAAO,EACP2F,EAAe,gBAAOrd,GACtBqiD,EAAM3F,YAAYr/B,KAClB3F,EAAO2qC,EAAM9rC,IAAI8G,IAErB,IAAIra,EAAMwB,KAAK1B,SACf,GAAI4U,GAAQA,EAAK1U,KAAOA,EACpB,OAAO0U,EAGP,IAAI6iC,EAAiB/1C,KAAK8U,yBAAyB8oC,GAC/C5H,EAAiBh2C,KAAK8U,yBAAyB5Z,GAC/C+6C,EAAmBj2C,KAAKk6C,+BAA+B1+C,EAAWN,GAClE4iD,EAAU,IAAI,GAAWF,EAAkB7H,EAAgB76C,EAAY86C,EAAgBx6C,EAAWy6C,EAAkBj2C,KAAKoV,kBAAkBxB,GAAa5T,KAAKq9C,YAAa,SAAU5hD,EAAGyC,EAAGC,EAAGyV,GAC7L,OAAO5T,KAAK+9C,gBAAgBtiD,EAAGyC,EAAGC,EAAGyV,EAAYgqC,IACnD/uC,KAAK7O,MAAOA,KAAKg9C,4BAA6Bh9C,KAAKm9C,yBAA0Bn9C,KAAKq2C,iBAUpF,OATAyH,EAAQt/C,IAAMA,EACV0U,GACA4qC,EAAQ5Q,YAAch6B,EACtB4qC,EAAQxQ,sBACRuQ,EAAMhF,QAAQhgC,EAAcilC,IAG5BD,EAAM5rC,IAAI4G,EAAcilC,GAErBA,EA9BX,OAAO99C,KAAK+9C,gBAAgBtiD,EAAGyC,EAAGC,EAAGyV,EAAYgqC,GAAoB1iD,IA2C7EyhD,EAAUz8C,UAAU69C,gBAAkB,SAAUtiD,EAAGyC,EAAGC,EAAGyV,EAAY1Y,GACjE,IAAIgY,EAAO,KACP2F,EAAe,gBAAUpd,EAAGyC,EAAGC,GAC/BK,EAAMwB,KAAK1B,SACf,GAAK0B,KAAKw5C,UAAUtB,YAAYr/B,IAM5B,GADA3F,EAAOlT,KAAKw5C,UAAUznC,IAAI8G,GACtB3F,EAAK1U,KAAOA,EAAK,CAIjB,IAAI0uC,EAAch6B,EAClBA,EAAOlT,KAAKy9C,YAAYhiD,EAAGyC,EAAGC,EAAGyV,EAAY1Y,EAAYsD,GAErD0uC,EAAY75B,YAAcC,EAAA,KAAUmI,KAEpCvI,EAAKg6B,YAAcA,EAAYA,YAG/Bh6B,EAAKg6B,YAAcA,EAEvBh6B,EAAKo6B,sBACLttC,KAAKw5C,UAAUX,QAAQhgC,EAAc3F,SApBzCA,EAAOlT,KAAKy9C,YAAYhiD,EAAGyC,EAAGC,EAAGyV,EAAY1Y,EAAYsD,GACzDwB,KAAKw5C,UAAUvnC,IAAI4G,EAAc3F,GAsBrC,OAAOA,GAOXypC,EAAUz8C,UAAU89C,2BAA6B,SAAU/tC,GACvD,GAAK4+B,GACD7uC,KAAKm9C,0BAA4BltC,EADrC,CAKA,IAAK,IAAI0Y,KADT3oB,KAAKm9C,yBAA2BltC,EACjBjQ,KAAK88C,uBAChB98C,KAAK88C,uBAAuBn0B,GAAIlF,QAEpCzjB,KAAKgf,YAcT29B,EAAUz8C,UAAU+9C,yBAA2B,SAAU/iD,EAAYgjD,GACjE,GAAIrP,EAA4B,CAC5B,IAAIsP,EAAO,eAAcjjD,GACzB,GAAIijD,EAAM,CACN,IAAIX,EAAU,eAAOW,GACfX,KAAWx9C,KAAK+8C,wBAClB/8C,KAAK+8C,sBAAsBS,GAAWU,MAK/CvB,EAnVmB,CAoV5B,IAKF,SAASC,GAAwBwB,EAAW3S,GACU2S,EAAUrjC,WAAY0wB,IAAMA,EAEnE,UCxaX,GAAwC,WACxC,IAAIlsC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBhC,OAAS,SAAU4B,EAAGC,GAAKD,EAAEI,UAAYH,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOC,KAAKC,YAAcT,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEU,UAAkB,OAANT,EAAaC,OAAOS,OAAOV,IAAMM,EAAGG,UAAYT,EAAES,UAAW,IAAIH,IAV3C,GA6ExC,GAAqB,SAAUK,GAK/B,SAASi+C,EAAIrhD,GACT,IAAIsD,EAAQN,KACRQ,EAAUxD,GAAe,GACzB9B,OAAoCuB,IAAvB+D,EAAQtF,WAA2BsF,EAAQtF,WAAa,YACrEC,OAAgCsB,IAArB+D,EAAQrF,SACjBqF,EAAQrF,SACR,gBAAU,CACRiB,OAAQ,gBAAqBlB,GAC7BoC,cAAekD,EAAQlD,cACvBD,QAASmD,EAAQnD,QACjBD,QAASoD,EAAQpD,QACjBN,SAAU0D,EAAQ1D,WAqB1B,OAnBAwD,EAAQF,EAAOG,KAAKP,KAAM,CACtBm7B,aAAc36B,EAAQ26B,aACtBse,UAAWj5C,EAAQi5C,UACnB/L,YAAaltC,EAAQktC,YACrBwP,eAAgB18C,EAAQ08C,eACxB5D,OAAQ94C,EAAQ84C,OAChBp+C,WAAYA,EACZ+hD,2BAA4Bz8C,EAAQy8C,2BACpC9hD,SAAUA,EACVwyC,iBAAkBntC,EAAQmtC,iBAC1Bx4B,eAAgB3U,EAAQ2U,eACxB6mC,gBAAiBx7C,EAAQw7C,gBACzBX,IAAK76C,EAAQ66C,IACbC,KAAM96C,EAAQ86C,KACd//C,WAAyBkB,IAAlB+D,EAAQjF,OAAsBiF,EAAQjF,MAC7C6d,WAAY5Y,EAAQ4Y,WACpBggC,wBAAyB54C,EAAQ44C,wBACjCpkC,WAAYxU,EAAQwU,cAClBhV,KACCM,EAEX,OAtCA,GAAU+9C,EAAKj+C,GAsCRi+C,EAvCa,CAwCtB,IACa,MfhGA,IACbC,KAAM,QACN12B,OACE,MAAM22B,EAAYjB,KAAKkB,MAAMC,eAAeC,QAAQ,cAAgB,MACpE,MAAO,CACLC,UAAWJ,EAAU7/C,KAAO,GAC5BiqB,GAAK,OAAM3sB,KAAK4iD,SAAS5oC,WAAWrN,OAAO,GAC3CjK,IAAK,KACLmgD,IAAK,KACLhS,YAAa,IAGjBiS,QAAS,CACPpS,UAAUG,GACR,IAAK7sC,KAAKtB,IAAK,OACf,MAAMwpB,EAASloB,KAAKtB,IAAIgqB,YAAYQ,WACpChB,EAAO2kB,GAAakS,YAAW,GAC/B72B,EAAO,EAAI2kB,GAAakS,YAAW,GACnC/+C,KAAK6sC,YAAcA,GAErBmS,UACE,MAAM1sC,EAAY,CAChB,IAAI26B,OAAK,CACPnjB,SAAS,EACTjE,OAAQ,IAAIw4B,GAAI,CACdhhD,QAAS,GACTg+C,IAAK,+FAGT,IAAIpO,OAAK,CACPnjB,SAAS,EACTjE,OAAQ,IAAIw4B,GAAI,CACdhhD,QAAS,GACTg+C,IAAK,gGAIXr7C,KAAKtB,IAAM,IAAIq/B,OAAI,CACjBx7B,OAAQvC,KAAK2oB,GACbT,OAAQ5V,EACR/Q,KAAM,IAAI+3B,OAAK,CACb59B,OAAQsE,KAAK2+C,UAAUjjD,OACvBR,WAAY,YACZkZ,KAAMpU,KAAK2+C,UAAUM,YACrB7hD,QAAS,EACTC,QAAS2C,KAAK2+C,UAAUthD,YAG5B2C,KAAKk/C,MAAM,UAAWl/C,KAAKtB,MAE7BygD,SACOn/C,KAAKtB,KACVsB,KAAKtB,IAAI24B,eAGb+nB,UACEp/C,KAAKg/C,UACLh/C,KAAK6+C,IAAMQ,MACXr/C,KAAK6+C,IAAIS,SAASt/C,KAAKu/C,MAAM7gD,IAAKsB,KAAKm/C,SAEzCK,gBACEx/C,KAAK6+C,IAAIY,UAAUz/C,KAAKu/C,MAAM7gD,O,oCgB/ElC,MAAMghD,GAA2B,KAAgB,GAAQ,CAAC,CAAC,SAAS,GAAQ,CAAC,YAAY,qBAE1E,iB,yDCTf,kCAOA,IAAI1sC,EAA2B,WAO3B,SAASA,EAAU2C,EAAMC,EAAMC,EAAMC,GAIjC9V,KAAK2V,KAAOA,EAIZ3V,KAAK4V,KAAOA,EAIZ5V,KAAK6V,KAAOA,EAIZ7V,KAAK8V,KAAOA,EAkFhB,OA5EA9C,EAAU9S,UAAUuC,SAAW,SAAUjH,GACrC,OAAOwE,KAAKb,WAAW3D,EAAU,GAAIA,EAAU,KAMnDwX,EAAU9S,UAAUy/C,kBAAoB,SAAU3gD,GAC9C,OAAQgB,KAAK2V,MAAQ3W,EAAU2W,MAC3B3W,EAAU4W,MAAQ5V,KAAK4V,MACvB5V,KAAK6V,MAAQ7W,EAAU6W,MACvB7W,EAAU8W,MAAQ9V,KAAK8V,MAO/B9C,EAAU9S,UAAUf,WAAa,SAAUjB,EAAGC,GAC1C,OAAO6B,KAAK2V,MAAQzX,GAAKA,GAAK8B,KAAK4V,MAAQ5V,KAAK6V,MAAQ1X,GAAKA,GAAK6B,KAAK8V,MAM3E9C,EAAU9S,UAAU0/C,OAAS,SAAU5gD,GACnC,OAAQgB,KAAK2V,MAAQ3W,EAAU2W,MAC3B3V,KAAK6V,MAAQ7W,EAAU6W,MACvB7V,KAAK4V,MAAQ5W,EAAU4W,MACvB5V,KAAK8V,MAAQ9W,EAAU8W,MAK/B9C,EAAU9S,UAAU2/C,OAAS,SAAU7gD,GAC/BA,EAAU2W,KAAO3V,KAAK2V,OACtB3V,KAAK2V,KAAO3W,EAAU2W,MAEtB3W,EAAU4W,KAAO5V,KAAK4V,OACtB5V,KAAK4V,KAAO5W,EAAU4W,MAEtB5W,EAAU6W,KAAO7V,KAAK6V,OACtB7V,KAAK6V,KAAO7W,EAAU6W,MAEtB7W,EAAU8W,KAAO9V,KAAK8V,OACtB9V,KAAK8V,KAAO9W,EAAU8W,OAM9B9C,EAAU9S,UAAU46C,UAAY,WAC5B,OAAO96C,KAAK8V,KAAO9V,KAAK6V,KAAO,GAKnC7C,EAAU9S,UAAUuG,QAAU,WAC1B,MAAO,CAACzG,KAAK8/C,WAAY9/C,KAAK86C,cAKlC9nC,EAAU9S,UAAU4/C,SAAW,WAC3B,OAAO9/C,KAAK4V,KAAO5V,KAAK2V,KAAO,GAMnC3C,EAAU9S,UAAU6/C,WAAa,SAAU/gD,GACvC,OAAQgB,KAAK2V,MAAQ3W,EAAU4W,MAC3B5V,KAAK4V,MAAQ5W,EAAU2W,MACvB3V,KAAK6V,MAAQ7W,EAAU8W,MACvB9V,KAAK8V,MAAQ9W,EAAU6W,MAExB7C,EAzGmB,GAmHvB,SAAS/U,EAAe0X,EAAMC,EAAMC,EAAMC,EAAM9W,GACnD,YAAkBvC,IAAduC,GACAA,EAAU2W,KAAOA,EACjB3W,EAAU4W,KAAOA,EACjB5W,EAAU6W,KAAOA,EACjB7W,EAAU8W,KAAOA,EACV9W,GAGA,IAAIgU,EAAU2C,EAAMC,EAAMC,EAAMC,GAGhC","file":"public/js/chunk-a6857f80.c44c3cf1.js","sourcesContent":["/**\n * @module ol/tilegrid/common\n */\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport { DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, get as getProjection } from './proj.js';\nimport { containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth, } from './extent.js';\nimport { toSize } from './size.js';\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n    var tileGrid = projection.getDefaultTileGrid();\n    if (!tileGrid) {\n        tileGrid = createForProjection(projection);\n        projection.setDefaultTileGrid(tileGrid);\n    }\n    return tileGrid;\n}\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n    var z = tileCoord[0];\n    var center = tileGrid.getTileCoordCenter(tileCoord);\n    var projectionExtent = extentFromProjection(projection);\n    if (!containsCoordinate(projectionExtent, center)) {\n        var worldWidth = getWidth(projectionExtent);\n        var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n        center[0] += worldWidth * worldsAway;\n        return tileGrid.getTileCoordForCoordAndZ(center, z);\n    }\n    else {\n        return tileCoord;\n    }\n}\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n    var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n    var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n    return new TileGrid({\n        extent: extent,\n        origin: getCorner(extent, corner),\n        resolutions: resolutions,\n        tileSize: opt_tileSize,\n    });\n}\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n    var xyzOptions = opt_options || {};\n    var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n    var gridOptions = {\n        extent: extent,\n        minZoom: xyzOptions.minZoom,\n        tileSize: xyzOptions.tileSize,\n        resolutions: resolutionsFromExtent(extent, xyzOptions.maxZoom, xyzOptions.tileSize, xyzOptions.maxResolution),\n    };\n    return new TileGrid(gridOptions);\n}\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number=} opt_maxResolution Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize, opt_maxResolution) {\n    var maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n    var height = getHeight(extent);\n    var width = getWidth(extent);\n    var tileSize = toSize(opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE);\n    var maxResolution = opt_maxResolution > 0\n        ? opt_maxResolution\n        : Math.max(width / tileSize[0], height / tileSize[1]);\n    var length = maxZoom + 1;\n    var resolutions = new Array(length);\n    for (var z = 0; z < length; ++z) {\n        resolutions[z] = maxResolution / Math.pow(2, z);\n    }\n    return resolutions;\n}\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n    var extent = extentFromProjection(projection);\n    return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n    projection = getProjection(projection);\n    var extent = projection.getExtent();\n    if (!extent) {\n        var half = (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n        extent = createOrUpdate(-half, -half, half, half);\n    }\n    return extent;\n}\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/tilecoord\n */\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n    if (opt_tileCoord !== undefined) {\n        opt_tileCoord[0] = z;\n        opt_tileCoord[1] = x;\n        opt_tileCoord[2] = y;\n        return opt_tileCoord;\n    }\n    else {\n        return [z, x, y];\n    }\n}\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n    return z + '/' + x + '/' + y;\n}\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n    return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n    return key.split('/').map(Number);\n}\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n    return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n    var z = tileCoord[0];\n    var x = tileCoord[1];\n    var y = tileCoord[2];\n    if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n        return false;\n    }\n    var extent = tileGrid.getExtent();\n    var tileRange;\n    if (!extent) {\n        tileRange = tileGrid.getFullTileRange(z);\n    }\n    else {\n        tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    }\n    if (!tileRange) {\n        return true;\n    }\n    else {\n        return tileRange.containsXY(x, y);\n    }\n}\n//# sourceMappingURL=tilecoord.js.map","module.exports = __webpack_public_path__ + \"public/img/standardMap.52069e95.svg\";","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /** @class */ (function (_super) {\n    __extends(DoubleClickZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DoubleClickZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n     * doubleclick) and eventually zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    DoubleClickZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n            var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n            var map = mapBrowserEvent.map;\n            var anchor = mapBrowserEvent.coordinate;\n            var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n            var view = map.getView();\n            zoomByDelta(view, delta, anchor, this.duration_);\n            mapBrowserEvent.preventDefault();\n            stopEvent = true;\n        }\n        return !stopEvent;\n    };\n    return DoubleClickZoom;\n}(Interaction));\nexport default DoubleClickZoom;\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport { FALSE, TRUE } from '../functions.js';\nimport { MAC, WEBKIT } from '../has.js';\nimport { assert } from '../asserts.js';\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n    var conditions = arguments;\n    /**\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     * @return {boolean} All conditions passed.\n     */\n    return function (event) {\n        var pass = true;\n        for (var i = 0, ii = conditions.length; i < ii; ++i) {\n            pass = pass && conditions[i](event);\n            if (!pass) {\n                break;\n            }\n        }\n        return pass;\n    };\n}\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function (event) {\n    return event.target.getTargetElement().contains(document.activeElement);\n};\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport var focusWithTabindex = function (event) {\n    return event.map.getTargetElement().hasAttribute('tabindex')\n        ? focus(event)\n        : true;\n};\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function (mapBrowserEvent) {\n    var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == 'pointermove';\n};\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function (mapBrowserEvent) {\n    return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n        !originalEvent.shiftKey);\n};\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    return (!originalEvent.altKey &&\n        !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n        originalEvent.shiftKey);\n};\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function (mapBrowserEvent) {\n    var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n    var tagName = /** @type {Element} */ (originalEvent.target).tagName;\n    return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvent.pointerType == 'mouse';\n};\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport var touchOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'touch';\n};\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport var penOnly = function (mapBrowserEvent) {\n    var pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n    return pointerEvt.pointerType === 'pen';\n};\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function (mapBrowserEvent) {\n    var pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (mapBrowserEvent)\n        .originalEvent;\n    assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n    return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n//# sourceMappingURL=condition.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { all, focusWithTabindex, noModifierKeys, primaryAction, } from '../events/condition.js';\nimport { easeOut } from '../easing.js';\nimport { rotate as rotateCoordinate, scale as scaleCoordinate, } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /** @class */ (function (_super) {\n    __extends(DragPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragPan(opt_options) {\n        var _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../Kinetic.js\").default|undefined}\n         */\n        _this.kinetic_ = options.kinetic;\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.lastCentroid = null;\n        /**\n         * @type {number}\n         */\n        _this.lastPointersCount_;\n        /**\n         * @type {boolean}\n         */\n        _this.panning_ = false;\n        var condition = options.condition\n            ? options.condition\n            : all(noModifierKeys, primaryAction);\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.noKinetic_ = false;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragPan.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!this.panning_) {\n            this.panning_ = true;\n            this.getMap().getView().beginInteraction();\n        }\n        var targetPointers = this.targetPointers;\n        var centroid = centroidFromPointers(targetPointers);\n        if (targetPointers.length == this.lastPointersCount_) {\n            if (this.kinetic_) {\n                this.kinetic_.update(centroid[0], centroid[1]);\n            }\n            if (this.lastCentroid) {\n                var delta = [\n                    this.lastCentroid[0] - centroid[0],\n                    centroid[1] - this.lastCentroid[1],\n                ];\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                scaleCoordinate(delta, view.getResolution());\n                rotateCoordinate(delta, view.getRotation());\n                view.adjustCenterInternal(delta);\n            }\n        }\n        else if (this.kinetic_) {\n            // reset so we don't overestimate the kinetic energy after\n            // after one finger down, tiny drag, second finger down\n            this.kinetic_.begin();\n        }\n        this.lastCentroid = centroid;\n        this.lastPointersCount_ = targetPointers.length;\n        mapBrowserEvent.originalEvent.preventDefault();\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleUpEvent = function (mapBrowserEvent) {\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (this.targetPointers.length === 0) {\n            if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n                var distance = this.kinetic_.getDistance();\n                var angle = this.kinetic_.getAngle();\n                var center = view.getCenterInternal();\n                var centerpx = map.getPixelFromCoordinateInternal(center);\n                var dest = map.getCoordinateFromPixelInternal([\n                    centerpx[0] - distance * Math.cos(angle),\n                    centerpx[1] - distance * Math.sin(angle),\n                ]);\n                view.animateInternal({\n                    center: view.getConstrainedCenter(dest),\n                    duration: 500,\n                    easing: easeOut,\n                });\n            }\n            if (this.panning_) {\n                this.panning_ = false;\n                view.endInteraction();\n            }\n            return false;\n        }\n        else {\n            if (this.kinetic_) {\n                // reset so we don't overestimate the kinetic energy after\n                // after one finger up, tiny drag, second finger up\n                this.kinetic_.begin();\n            }\n            this.lastCentroid = null;\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragPan.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            this.lastCentroid = null;\n            // stop any current animation\n            if (view.getAnimating()) {\n                view.cancelAnimations();\n            }\n            if (this.kinetic_) {\n                this.kinetic_.begin();\n            }\n            // No kinetic as soon as more than one pointer on the screen is\n            // detected. This is to prevent nasty pans after pinch.\n            this.noKinetic_ = this.targetPointers.length > 1;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragPan;\n}(PointerInteraction));\nexport default DragPan;\n//# sourceMappingURL=DragPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { altShiftKeysOnly, mouseActionButton, mouseOnly, } from '../events/condition.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /** @class */ (function (_super) {\n    __extends(DragRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            stopDown: FALSE,\n        }) || this;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        var size = map.getSize();\n        var offset = mapBrowserEvent.pixel;\n        var theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n        if (this.lastAngle_ !== undefined) {\n            var delta = theta - this.lastAngle_;\n            view.adjustRotationInternal(-delta);\n        }\n        this.lastAngle_ = theta;\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return true;\n        }\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        view.endInteraction(this.duration_);\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (!mouseOnly(mapBrowserEvent)) {\n            return false;\n        }\n        if (mouseActionButton(mapBrowserEvent) &&\n            this.condition_(mapBrowserEvent)) {\n            var map = mapBrowserEvent.map;\n            map.getView().beginInteraction();\n            this.lastAngle_ = undefined;\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return DragRotate;\n}(PointerInteraction));\nexport default DragRotate;\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\nvar RenderBox = /** @class */ (function (_super) {\n    __extends(RenderBox, _super);\n    /**\n     * @param {string} className CSS class name.\n     */\n    function RenderBox(className) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {import(\"../geom/Polygon.js\").default}\n         * @private\n         */\n        _this.geometry_ = null;\n        /**\n         * @type {HTMLDivElement}\n         * @private\n         */\n        _this.element_ = document.createElement('div');\n        _this.element_.style.position = 'absolute';\n        _this.element_.style.pointerEvents = 'auto';\n        _this.element_.className = 'ol-box ' + className;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../pixel.js\").Pixel}\n         */\n        _this.endPixel_ = null;\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    RenderBox.prototype.disposeInternal = function () {\n        this.setMap(null);\n    };\n    /**\n     * @private\n     */\n    RenderBox.prototype.render_ = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var px = 'px';\n        var style = this.element_.style;\n        style.left = Math.min(startPixel[0], endPixel[0]) + px;\n        style.top = Math.min(startPixel[1], endPixel[1]) + px;\n        style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n        style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    RenderBox.prototype.setMap = function (map) {\n        if (this.map_) {\n            this.map_.getOverlayContainer().removeChild(this.element_);\n            var style = this.element_.style;\n            style.left = 'inherit';\n            style.top = 'inherit';\n            style.width = 'inherit';\n            style.height = 'inherit';\n        }\n        this.map_ = map;\n        if (this.map_) {\n            this.map_.getOverlayContainer().appendChild(this.element_);\n        }\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n     * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n     */\n    RenderBox.prototype.setPixels = function (startPixel, endPixel) {\n        this.startPixel_ = startPixel;\n        this.endPixel_ = endPixel;\n        this.createOrUpdateGeometry();\n        this.render_();\n    };\n    /**\n     * Creates or updates the cached geometry.\n     */\n    RenderBox.prototype.createOrUpdateGeometry = function () {\n        var startPixel = this.startPixel_;\n        var endPixel = this.endPixel_;\n        var pixels = [\n            startPixel,\n            [startPixel[0], endPixel[1]],\n            endPixel,\n            [endPixel[0], startPixel[1]],\n        ];\n        var coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n        // close the polygon\n        coordinates[4] = coordinates[0].slice();\n        if (!this.geometry_) {\n            this.geometry_ = new Polygon([coordinates]);\n        }\n        else {\n            this.geometry_.setCoordinates([coordinates]);\n        }\n    };\n    /**\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     */\n    RenderBox.prototype.getGeometry = function () {\n        return this.geometry_;\n    };\n    return RenderBox;\n}(Disposable));\nexport default RenderBox;\n//# sourceMappingURL=Box.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport { mouseActionButton } from '../events/condition.js';\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n    /**\n     * Triggered upon drag box start.\n     * @event DragBoxEvent#boxstart\n     * @api\n     */\n    BOXSTART: 'boxstart',\n    /**\n     * Triggered on drag when box is active.\n     * @event DragBoxEvent#boxdrag\n     * @api\n     */\n    BOXDRAG: 'boxdrag',\n    /**\n     * Triggered upon drag box end.\n     * @event DragBoxEvent#boxend\n     * @api\n     */\n    BOXEND: 'boxend',\n};\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /** @class */ (function (_super) {\n    __extends(DragBoxEvent, _super);\n    /**\n     * @param {string} type The event type.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n     */\n    function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The coordinate of the drag event.\n         * @const\n         * @type {import(\"../coordinate.js\").Coordinate}\n         * @api\n         */\n        _this.coordinate = coordinate;\n        /**\n         * @const\n         * @type {import(\"../MapBrowserEvent.js\").default}\n         * @api\n         */\n        _this.mapBrowserEvent = mapBrowserEvent;\n        return _this;\n    }\n    return DragBoxEvent;\n}(Event));\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /** @class */ (function (_super) {\n    __extends(DragBox, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragBox(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"../render/Box.js\").default}\n         * @private\n         */\n        _this.box_ = new RenderBox(options.className || 'ol-dragbox');\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n        if (options.onBoxEnd) {\n            _this.onBoxEnd = options.onBoxEnd;\n        }\n        /**\n         * @type {import(\"../pixel.js\").Pixel}\n         * @private\n         */\n        _this.startPixel_ = null;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : mouseActionButton;\n        /**\n         * @private\n         * @type {EndCondition}\n         */\n        _this.boxEndCondition_ = options.boxEndCondition\n            ? options.boxEndCondition\n            : _this.defaultBoxEndCondition;\n        return _this;\n    }\n    /**\n     * The default condition for determining whether the boxend event\n     * should fire.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n     *     leading to the box end.\n     * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n     * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n     * @return {boolean} Whether or not the boxend condition should be fired.\n     */\n    DragBox.prototype.defaultBoxEndCondition = function (mapBrowserEvent, startPixel, endPixel) {\n        var width = endPixel[0] - startPixel[0];\n        var height = endPixel[1] - startPixel[1];\n        return width * width + height * height >= this.minArea_;\n    };\n    /**\n     * Returns geometry of last drawn box.\n     * @return {import(\"../geom/Polygon.js\").default} Geometry.\n     * @api\n     */\n    DragBox.prototype.getGeometry = function () {\n        return this.box_.getGeometry();\n    };\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    DragBox.prototype.handleDragEvent = function (mapBrowserEvent) {\n        this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n        this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG, mapBrowserEvent.coordinate, mapBrowserEvent));\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleUpEvent = function (mapBrowserEvent) {\n        this.box_.setMap(null);\n        if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n            this.onBoxEnd(mapBrowserEvent);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND, mapBrowserEvent.coordinate, mapBrowserEvent));\n        }\n        return false;\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    DragBox.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.condition_(mapBrowserEvent)) {\n            this.startPixel_ = mapBrowserEvent.pixel;\n            this.box_.setMap(mapBrowserEvent.map);\n            this.box_.setPixels(this.startPixel_, this.startPixel_);\n            this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART, mapBrowserEvent.coordinate, mapBrowserEvent));\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragBox.prototype.onBoxEnd = function (event) { };\n    return DragBox;\n}(PointerInteraction));\nexport default DragBox;\n//# sourceMappingURL=DragBox.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport { createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter, } from '../extent.js';\nimport { easeOut } from '../easing.js';\nimport { shiftKeyOnly } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /** @class */ (function (_super) {\n    __extends(DragZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function DragZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var condition = options.condition ? options.condition : shiftKeyOnly;\n        _this = _super.call(this, {\n            condition: condition,\n            className: options.className || 'ol-dragzoom',\n            minArea: options.minArea,\n        }) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 200;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.out_ = options.out !== undefined ? options.out : false;\n        return _this;\n    }\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n     */\n    DragZoom.prototype.onBoxEnd = function (event) {\n        var map = this.getMap();\n        var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n        var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n        var extent = this.getGeometry().getExtent();\n        if (this.out_) {\n            var mapExtent = view.calculateExtentInternal(size);\n            var boxPixelExtent = createOrUpdateFromCoordinates([\n                map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n                map.getPixelFromCoordinateInternal(getTopRight(extent)),\n            ]);\n            var factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n            scaleFromCenter(mapExtent, 1 / factor);\n            extent = mapExtent;\n        }\n        var resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n        var center = view.getConstrainedCenter(getCenter(extent), resolution);\n        view.animateInternal({\n            resolution: resolution,\n            center: center,\n            duration: this.duration_,\n            easing: easeOut,\n        });\n    };\n    return DragZoom;\n}(DragBox));\nexport default DragZoom;\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n/**\n * @enum {number}\n * @const\n */\nexport default {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n};\n//# sourceMappingURL=KeyCode.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { pan } from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport { noModifierKeys, targetNotEditable } from '../events/condition.js';\nimport { rotate as rotateCoordinate } from '../coordinate.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /** @class */ (function (_super) {\n    __extends(KeyboardPan, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardPan(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options || {};\n        /**\n         * @private\n         * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n         * @return {boolean} Combined condition result.\n         */\n        _this.defaultCondition_ = function (mapBrowserEvent) {\n            return (noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent));\n        };\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ =\n            options.condition !== undefined\n                ? options.condition\n                : _this.defaultCondition_;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelDelta_ =\n            options.pixelDelta !== undefined ? options.pixelDelta : 128;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n     * pressed).\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardPan}\n     */\n    KeyboardPan.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var keyCode = keyEvent.keyCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (keyCode == KeyCode.DOWN ||\n                    keyCode == KeyCode.LEFT ||\n                    keyCode == KeyCode.RIGHT ||\n                    keyCode == KeyCode.UP)) {\n                var map = mapBrowserEvent.map;\n                var view = map.getView();\n                var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n                var deltaX = 0, deltaY = 0;\n                if (keyCode == KeyCode.DOWN) {\n                    deltaY = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.LEFT) {\n                    deltaX = -mapUnitsDelta;\n                }\n                else if (keyCode == KeyCode.RIGHT) {\n                    deltaX = mapUnitsDelta;\n                }\n                else {\n                    deltaY = mapUnitsDelta;\n                }\n                var delta = [deltaX, deltaY];\n                rotateCoordinate(delta, view.getRotation());\n                pan(view, delta, this.duration_);\n                mapBrowserEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardPan;\n}(Interaction));\nexport default KeyboardPan;\n//# sourceMappingURL=KeyboardPan.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { targetNotEditable } from '../events/condition.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /** @class */ (function (_super) {\n    __extends(KeyboardZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function KeyboardZoom(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.condition ? options.condition : targetNotEditable;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.delta_ = options.delta ? options.delta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 100;\n        return _this;\n    }\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n     * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n     * key pressed was '+' or '-').\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     * @this {KeyboardZoom}\n     */\n    KeyboardZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        var stopEvent = false;\n        if (mapBrowserEvent.type == EventType.KEYDOWN ||\n            mapBrowserEvent.type == EventType.KEYPRESS) {\n            var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n            var charCode = keyEvent.charCode;\n            if (this.condition_(mapBrowserEvent) &&\n                (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n                var map = mapBrowserEvent.map;\n                var delta = charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n                var view = map.getView();\n                zoomByDelta(view, delta, undefined, this.duration_);\n                mapBrowserEvent.preventDefault();\n                stopEvent = true;\n            }\n        }\n        return !stopEvent;\n    };\n    return KeyboardZoom;\n}(Interaction));\nexport default KeyboardZoom;\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/Kinetic\n */\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = /** @class */ (function () {\n    /**\n     * @param {number} decay Rate of decay (must be negative).\n     * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n     * @param {number} delay Delay to consider to calculate the kinetic\n     *     initial values (milliseconds).\n     */\n    function Kinetic(decay, minVelocity, delay) {\n        /**\n         * @private\n         * @type {number}\n         */\n        this.decay_ = decay;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minVelocity_ = minVelocity;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.delay_ = delay;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        this.points_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        this.angle_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.initialVelocity_ = 0;\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    Kinetic.prototype.begin = function () {\n        this.points_.length = 0;\n        this.angle_ = 0;\n        this.initialVelocity_ = 0;\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     */\n    Kinetic.prototype.update = function (x, y) {\n        this.points_.push(x, y, Date.now());\n    };\n    /**\n     * @return {boolean} Whether we should do kinetic animation.\n     */\n    Kinetic.prototype.end = function () {\n        if (this.points_.length < 6) {\n            // at least 2 points are required (i.e. there must be at least 6 elements\n            // in the array)\n            return false;\n        }\n        var delay = Date.now() - this.delay_;\n        var lastIndex = this.points_.length - 3;\n        if (this.points_[lastIndex + 2] < delay) {\n            // the last tracked point is too old, which means that the user stopped\n            // panning before releasing the map\n            return false;\n        }\n        // get the first point which still falls into the delay time\n        var firstIndex = lastIndex - 3;\n        while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n            firstIndex -= 3;\n        }\n        var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n        // we don't want a duration of 0 (divide by zero)\n        // we also make sure the user panned for a duration of at least one frame\n        // (1/60s) to compute sane displacement values\n        if (duration < 1000 / 60) {\n            return false;\n        }\n        var dx = this.points_[lastIndex] - this.points_[firstIndex];\n        var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n        this.angle_ = Math.atan2(dy, dx);\n        this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n        return this.initialVelocity_ > this.minVelocity_;\n    };\n    /**\n     * @return {number} Total distance travelled (pixels).\n     */\n    Kinetic.prototype.getDistance = function () {\n        return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n    };\n    /**\n     * @return {number} Angle of the kinetic panning animation (radians).\n     */\n    Kinetic.prototype.getAngle = function () {\n        return this.angle_;\n    };\n    return Kinetic;\n}());\nexport default Kinetic;\n//# sourceMappingURL=Kinetic.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, { zoomByDelta } from './Interaction.js';\nimport { DEVICE_PIXEL_RATIO, FIREFOX } from '../has.js';\nimport { all, always, focusWithTabindex } from '../events/condition.js';\nimport { clamp } from '../math.js';\n/**\n * @enum {string}\n */\nexport var Mode = {\n    TRACKPAD: 'trackpad',\n    WHEEL: 'wheel',\n};\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /** @class */ (function (_super) {\n    __extends(MouseWheelZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function MouseWheelZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, \n        /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.totalDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastDelta_ = 0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.useAnchor_ =\n            options.useAnchor !== undefined ? options.useAnchor : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.constrainResolution_ =\n            options.constrainResolution !== undefined\n                ? options.constrainResolution\n                : false;\n        var condition = options.condition ? options.condition : always;\n        /**\n         * @private\n         * @type {import(\"../events/condition.js\").Condition}\n         */\n        _this.condition_ = options.onFocusOnly\n            ? all(focusWithTabindex, condition)\n            : condition;\n        /**\n         * @private\n         * @type {?import(\"../coordinate.js\").Coordinate}\n         */\n        _this.lastAnchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.startTime_ = undefined;\n        /**\n         * @private\n         * @type {?}\n         */\n        _this.timeoutId_;\n        /**\n         * @private\n         * @type {Mode|undefined}\n         */\n        _this.mode_ = undefined;\n        /**\n         * Trackpad events separated by this delay will be considered separate\n         * interactions.\n         * @type {number}\n         */\n        _this.trackpadEventGap_ = 400;\n        /**\n         * @type {?}\n         */\n        _this.trackpadTimeoutId_;\n        /**\n         * The number of delta values per zoom level\n         * @private\n         * @type {number}\n         */\n        _this.deltaPerZoom_ = 300;\n        return _this;\n    }\n    /**\n     * @private\n     */\n    MouseWheelZoom.prototype.endInteraction_ = function () {\n        this.trackpadTimeoutId_ = undefined;\n        var view = this.getMap().getView();\n        view.endInteraction(undefined, this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0, this.lastAnchor_);\n    };\n    /**\n     * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n     * zooms the map.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n     * @return {boolean} `false` to stop event propagation.\n     */\n    MouseWheelZoom.prototype.handleEvent = function (mapBrowserEvent) {\n        if (!this.condition_(mapBrowserEvent)) {\n            return true;\n        }\n        var type = mapBrowserEvent.type;\n        if (type !== EventType.WHEEL) {\n            return true;\n        }\n        mapBrowserEvent.preventDefault();\n        var map = mapBrowserEvent.map;\n        var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n        if (this.useAnchor_) {\n            this.lastAnchor_ = mapBrowserEvent.coordinate;\n        }\n        // Delta normalisation inspired by\n        // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n        var delta;\n        if (mapBrowserEvent.type == EventType.WHEEL) {\n            delta = wheelEvent.deltaY;\n            if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n                delta /= DEVICE_PIXEL_RATIO;\n            }\n            if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n                delta *= 40;\n            }\n        }\n        if (delta === 0) {\n            return false;\n        }\n        else {\n            this.lastDelta_ = delta;\n        }\n        var now = Date.now();\n        if (this.startTime_ === undefined) {\n            this.startTime_ = now;\n        }\n        if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n            this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n        }\n        var view = map.getView();\n        if (this.mode_ === Mode.TRACKPAD &&\n            !(view.getConstrainResolution() || this.constrainResolution_)) {\n            if (this.trackpadTimeoutId_) {\n                clearTimeout(this.trackpadTimeoutId_);\n            }\n            else {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.beginInteraction();\n            }\n            this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.timeout_);\n            view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n            this.startTime_ = now;\n            return false;\n        }\n        this.totalDelta_ += delta;\n        var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n        clearTimeout(this.timeoutId_);\n        this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n        return false;\n    };\n    /**\n     * @private\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    MouseWheelZoom.prototype.handleWheelZoom_ = function (map) {\n        var view = map.getView();\n        if (view.getAnimating()) {\n            view.cancelAnimations();\n        }\n        var delta = -clamp(this.totalDelta_, -this.maxDelta_ * this.deltaPerZoom_, this.maxDelta_ * this.deltaPerZoom_) / this.deltaPerZoom_;\n        if (view.getConstrainResolution() || this.constrainResolution_) {\n            // view has a zoom constraint, zoom by 1\n            delta = delta ? (delta > 0 ? 1 : -1) : 0;\n        }\n        zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n        this.mode_ = undefined;\n        this.totalDelta_ = 0;\n        this.lastAnchor_ = null;\n        this.startTime_ = undefined;\n        this.timeoutId_ = undefined;\n    };\n    /**\n     * Enable or disable using the mouse's location as an anchor when zooming\n     * @param {boolean} useAnchor true to zoom to the mouse's location, false\n     * to zoom to the center of the map\n     * @api\n     */\n    MouseWheelZoom.prototype.setMouseAnchor = function (useAnchor) {\n        this.useAnchor_ = useAnchor;\n        if (!useAnchor) {\n            this.lastAnchor_ = null;\n        }\n    };\n    return MouseWheelZoom;\n}(Interaction));\nexport default MouseWheelZoom;\n//# sourceMappingURL=MouseWheelZoom.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\nimport { disable } from '../rotationconstraint.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /** @class */ (function (_super) {\n    __extends(PinchRotate, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchRotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastAngle_ = undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.rotating_ = false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.rotationDelta_ = 0.0;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchRotate.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var rotationDelta = 0.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        // angle between touches\n        var angle = Math.atan2(touch1.clientY - touch0.clientY, touch1.clientX - touch0.clientX);\n        if (this.lastAngle_ !== undefined) {\n            var delta = angle - this.lastAngle_;\n            this.rotationDelta_ += delta;\n            if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n                this.rotating_ = true;\n            }\n            rotationDelta = delta;\n        }\n        this.lastAngle_ = angle;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (view.getConstraints().rotation === disable) {\n            return;\n        }\n        // rotate anchor point.\n        // FIXME: should be the intersection point between the lines:\n        //     touch0,touch1 and previousTouch0,previousTouch1\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // rotate\n        if (this.rotating_) {\n            map.render();\n            view.adjustRotationInternal(rotationDelta, this.anchor_);\n        }\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            view.endInteraction(this.duration_);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchRotate.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastAngle_ = undefined;\n            this.rotating_ = false;\n            this.rotationDelta_ = 0.0;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchRotate;\n}(PointerInteraction));\nexport default PinchRotate;\n//# sourceMappingURL=PinchRotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, { centroid as centroidFromPointers, } from './Pointer.js';\nimport { FALSE } from '../functions.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /** @class */ (function (_super) {\n    __extends(PinchZoom, _super);\n    /**\n     * @param {Options=} opt_options Options.\n     */\n    function PinchZoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n        if (!pointerOptions.stopDown) {\n            pointerOptions.stopDown = FALSE;\n        }\n        _this = _super.call(this, pointerOptions) || this;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.anchor_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 400;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.lastDistance_ = undefined;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.lastScaleDelta_ = 1;\n        return _this;\n    }\n    /**\n     * Handle pointer drag events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     */\n    PinchZoom.prototype.handleDragEvent = function (mapBrowserEvent) {\n        var scaleDelta = 1.0;\n        var touch0 = this.targetPointers[0];\n        var touch1 = this.targetPointers[1];\n        var dx = touch0.clientX - touch1.clientX;\n        var dy = touch0.clientY - touch1.clientY;\n        // distance between touches\n        var distance = Math.sqrt(dx * dx + dy * dy);\n        if (this.lastDistance_ !== undefined) {\n            scaleDelta = this.lastDistance_ / distance;\n        }\n        this.lastDistance_ = distance;\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        if (scaleDelta != 1.0) {\n            this.lastScaleDelta_ = scaleDelta;\n        }\n        // scale anchor point.\n        var viewportPosition = map.getViewport().getBoundingClientRect();\n        var centroid = centroidFromPointers(this.targetPointers);\n        centroid[0] -= viewportPosition.left;\n        centroid[1] -= viewportPosition.top;\n        this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n        // scale, bypass the resolution constraint\n        map.render();\n        view.adjustResolutionInternal(scaleDelta, this.anchor_);\n    };\n    /**\n     * Handle pointer up events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleUpEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length < 2) {\n            var map = mapBrowserEvent.map;\n            var view = map.getView();\n            var direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n            view.endInteraction(this.duration_, direction);\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * Handle pointer down events.\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n     * @return {boolean} If the event was consumed.\n     */\n    PinchZoom.prototype.handleDownEvent = function (mapBrowserEvent) {\n        if (this.targetPointers.length >= 2) {\n            var map = mapBrowserEvent.map;\n            this.anchor_ = null;\n            this.lastDistance_ = undefined;\n            this.lastScaleDelta_ = 1;\n            if (!this.handlingDownUpSequence) {\n                map.getView().beginInteraction();\n            }\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    return PinchZoom;\n}(PointerInteraction));\nexport default PinchZoom;\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nexport { default as DoubleClickZoom } from './interaction/DoubleClickZoom.js';\nexport { default as DragAndDrop } from './interaction/DragAndDrop.js';\nexport { default as DragBox } from './interaction/DragBox.js';\nexport { default as DragPan } from './interaction/DragPan.js';\nexport { default as DragRotate } from './interaction/DragRotate.js';\nexport { default as DragRotateAndZoom } from './interaction/DragRotateAndZoom.js';\nexport { default as DragZoom } from './interaction/DragZoom.js';\nexport { default as Draw } from './interaction/Draw.js';\nexport { default as Extent } from './interaction/Extent.js';\nexport { default as Interaction } from './interaction/Interaction.js';\nexport { default as KeyboardPan } from './interaction/KeyboardPan.js';\nexport { default as KeyboardZoom } from './interaction/KeyboardZoom.js';\nexport { default as Modify } from './interaction/Modify.js';\nexport { default as MouseWheelZoom } from './interaction/MouseWheelZoom.js';\nexport { default as PinchRotate } from './interaction/PinchRotate.js';\nexport { default as PinchZoom } from './interaction/PinchZoom.js';\nexport { default as Pointer } from './interaction/Pointer.js';\nexport { default as Select } from './interaction/Select.js';\nexport { default as Snap } from './interaction/Snap.js';\nexport { default as Translate } from './interaction/Translate.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var interactions = new Collection();\n    var kinetic = new Kinetic(-0.005, 0.05, 100);\n    var altShiftDragRotate = options.altShiftDragRotate !== undefined\n        ? options.altShiftDragRotate\n        : true;\n    if (altShiftDragRotate) {\n        interactions.push(new DragRotate());\n    }\n    var doubleClickZoom = options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n    if (doubleClickZoom) {\n        interactions.push(new DoubleClickZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n    if (dragPan) {\n        interactions.push(new DragPan({\n            onFocusOnly: options.onFocusOnly,\n            kinetic: kinetic,\n        }));\n    }\n    var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate : true;\n    if (pinchRotate) {\n        interactions.push(new PinchRotate());\n    }\n    var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n    if (pinchZoom) {\n        interactions.push(new PinchZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n    if (keyboard) {\n        interactions.push(new KeyboardPan());\n        interactions.push(new KeyboardZoom({\n            delta: options.zoomDelta,\n            duration: options.zoomDuration,\n        }));\n    }\n    var mouseWheelZoom = options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n    if (mouseWheelZoom) {\n        interactions.push(new MouseWheelZoom({\n            onFocusOnly: options.onFocusOnly,\n            duration: options.zoomDuration,\n        }));\n    }\n    var shiftDragZoom = options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n    if (shiftDragZoom) {\n        interactions.push(new DragZoom({\n            duration: options.zoomDuration,\n        }));\n    }\n    return interactions;\n}\n//# sourceMappingURL=interaction.js.map","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=773cc1a0&lang=less&scoped=true\"","module.exports = __webpack_public_path__ + \"public/img/satelliteMap.1531030c.svg\";","/**\n * @module ol/layer/TileProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    PRELOAD: 'preload',\n    USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n//# sourceMappingURL=TileProperty.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport { assign } from '../obj.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nvar BaseTileLayer = /** @class */ (function (_super) {\n    __extends(BaseTileLayer, _super);\n    /**\n     * @param {Options=} opt_options Tile layer options.\n     */\n    function BaseTileLayer(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        var baseOptions = assign({}, options);\n        delete baseOptions.preload;\n        delete baseOptions.useInterimTilesOnError;\n        _this = _super.call(this, baseOptions) || this;\n        _this.setPreload(options.preload !== undefined ? options.preload : 0);\n        _this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined\n            ? options.useInterimTilesOnError\n            : true);\n        return _this;\n    }\n    /**\n     * Return the level as number to which we will preload tiles up to.\n     * @return {number} The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getPreload = function () {\n        return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n    };\n    /**\n     * Set the level as number to which we will preload tiles up to.\n     * @param {number} preload The level to preload tiles up to.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setPreload = function (preload) {\n        this.set(TileProperty.PRELOAD, preload);\n    };\n    /**\n     * Whether we use interim tiles on error.\n     * @return {boolean} Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.getUseInterimTilesOnError = function () {\n        return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n    };\n    /**\n     * Set whether we use interim tiles on error.\n     * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n     * @observable\n     * @api\n     */\n    BaseTileLayer.prototype.setUseInterimTilesOnError = function (useInterimTilesOnError) {\n        this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n    };\n    return BaseTileLayer;\n}(Layer));\nexport default BaseTileLayer;\n//# sourceMappingURL=BaseTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport { apply as applyTransform, compose as composeTransform, makeInverse, } from '../../transform.js';\nimport { assign } from '../../obj.js';\nimport { createEmpty, equals, getIntersection, getTopLeft, } from '../../extent.js';\nimport { createTransformString } from '../../render/canvas.js';\nimport { fromUserExtent } from '../../proj.js';\nimport { getUid } from '../../util.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /** @class */ (function (_super) {\n    __extends(CanvasTileLayerRenderer, _super);\n    /**\n     * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n     */\n    function CanvasTileLayerRenderer(tileLayer) {\n        var _this = _super.call(this, tileLayer) || this;\n        /**\n         * Rendered extent has changed since the previous `renderFrame()` call\n         * @type {boolean}\n         */\n        _this.extentChanged = true;\n        /**\n         * @private\n         * @type {?import(\"../../extent.js\").Extent}\n         */\n        _this.renderedExtent_ = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedPixelRatio;\n        /**\n         * @protected\n         * @type {import(\"../../proj/Projection.js\").default}\n         */\n        _this.renderedProjection = null;\n        /**\n         * @protected\n         * @type {number}\n         */\n        _this.renderedRevision;\n        /**\n         * @protected\n         * @type {!Array<import(\"../../Tile.js\").default>}\n         */\n        _this.renderedTiles = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.newTiles_ = false;\n        /**\n         * @protected\n         * @type {import(\"../../extent.js\").Extent}\n         */\n        _this.tmpExtent = createEmpty();\n        /**\n         * @private\n         * @type {import(\"../../TileRange.js\").default}\n         */\n        _this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n        return _this;\n    }\n    /**\n     * @protected\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean} Tile is drawable.\n     */\n    CanvasTileLayerRenderer.prototype.isDrawableTile = function (tile) {\n        var tileLayer = this.getLayer();\n        var tileState = tile.getState();\n        var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n        return (tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            (tileState == TileState.ERROR && !useInterimTilesOnError));\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {!import(\"../../Tile.js\").default} Tile.\n     */\n    CanvasTileLayerRenderer.prototype.getTile = function (z, x, y, frameState) {\n        var pixelRatio = frameState.pixelRatio;\n        var projection = frameState.viewState.projection;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (tile.getState() == TileState.ERROR) {\n            if (!tileLayer.getUseInterimTilesOnError()) {\n                // When useInterimTilesOnError is false, we consider the error tile as loaded.\n                tile.setState(TileState.LOADED);\n            }\n            else if (tileLayer.getPreload() > 0) {\n                // Preloaded tiles for lower resolutions might have finished loading.\n                this.newTiles_ = true;\n            }\n        }\n        if (!this.isDrawableTile(tile)) {\n            tile = tile.getInterimTile();\n        }\n        return tile;\n    };\n    /**\n     * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n     * @param {number} zoom Zoom level.\n     * @param {import(\"../../Tile.js\").default} tile Tile.\n     * @return {boolean|void} If `false`, the tile will not be considered loaded.\n     */\n    CanvasTileLayerRenderer.prototype.loadedTileCallback = function (tiles, zoom, tile) {\n        if (this.isDrawableTile(tile)) {\n            return _super.prototype.loadedTileCallback.call(this, tiles, zoom, tile);\n        }\n        return false;\n    };\n    /**\n     * Determine whether render should be called.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {boolean} Layer is ready to be rendered.\n     */\n    CanvasTileLayerRenderer.prototype.prepareFrame = function (frameState) {\n        return !!this.getLayer().getSource();\n    };\n    /**\n     * Render the layer.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {HTMLElement} target Target that may be used to render content to.\n     * @return {HTMLElement} The rendered element.\n     */\n    CanvasTileLayerRenderer.prototype.renderFrame = function (frameState, target) {\n        var layerState = frameState.layerStatesArray[frameState.layerIndex];\n        var viewState = frameState.viewState;\n        var projection = viewState.projection;\n        var viewResolution = viewState.resolution;\n        var viewCenter = viewState.center;\n        var rotation = viewState.rotation;\n        var pixelRatio = frameState.pixelRatio;\n        var tileLayer = this.getLayer();\n        var tileSource = tileLayer.getSource();\n        var sourceRevision = tileSource.getRevision();\n        var tileGrid = tileSource.getTileGridForProjection(projection);\n        var z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n        var tileResolution = tileGrid.getResolution(z);\n        var extent = frameState.extent;\n        var layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n        if (layerExtent) {\n            extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n        }\n        var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n        // desired dimensions of the canvas in pixels\n        var width = Math.round(frameState.size[0] * tilePixelRatio);\n        var height = Math.round(frameState.size[1] * tilePixelRatio);\n        if (rotation) {\n            var size = Math.round(Math.sqrt(width * width + height * height));\n            width = size;\n            height = size;\n        }\n        var dx = (tileResolution * width) / 2 / tilePixelRatio;\n        var dy = (tileResolution * height) / 2 / tilePixelRatio;\n        var canvasExtent = [\n            viewCenter[0] - dx,\n            viewCenter[1] - dy,\n            viewCenter[0] + dx,\n            viewCenter[1] + dy,\n        ];\n        var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n        /**\n         * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n         */\n        var tilesToDrawByZ = {};\n        tilesToDrawByZ[z] = {};\n        var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n        var tmpExtent = this.tmpExtent;\n        var tmpTileRange = this.tmpTileRange_;\n        this.newTiles_ = false;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                var tile = this.getTile(z, x, y, frameState);\n                if (this.isDrawableTile(tile)) {\n                    var uid = getUid(this);\n                    if (tile.getState() == TileState.LOADED) {\n                        tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n                        var inTransition = tile.inTransition(uid);\n                        if (!this.newTiles_ &&\n                            (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n                            this.newTiles_ = true;\n                        }\n                    }\n                    if (tile.getAlpha(uid, frameState.time) === 1) {\n                        // don't look for alt tiles if alpha is 1\n                        continue;\n                    }\n                }\n                var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n                var covered = false;\n                if (childTileRange) {\n                    covered = findLoadedTiles(z + 1, childTileRange);\n                }\n                if (!covered) {\n                    tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n                }\n            }\n        }\n        var canvasScale = tileResolution / viewResolution;\n        // set forward and inverse pixel transforms\n        composeTransform(this.pixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / tilePixelRatio, 1 / tilePixelRatio, rotation, -width / 2, -height / 2);\n        var canvasTransform = createTransformString(this.pixelTransform);\n        this.useContainer(target, canvasTransform, layerState.opacity);\n        var context = this.context;\n        var canvas = context.canvas;\n        makeInverse(this.inversePixelTransform, this.pixelTransform);\n        // set scale transform for calculating tile positions on the canvas\n        composeTransform(this.tempTransform, width / 2, height / 2, canvasScale, canvasScale, 0, -width / 2, -height / 2);\n        if (canvas.width != width || canvas.height != height) {\n            canvas.width = width;\n            canvas.height = height;\n        }\n        else if (!this.containerReused) {\n            context.clearRect(0, 0, width, height);\n        }\n        if (layerExtent) {\n            this.clipUnrotated(context, frameState, layerExtent);\n        }\n        assign(context, tileSource.getContextOptions());\n        this.preRender(context, frameState);\n        this.renderedTiles.length = 0;\n        /** @type {Array<number>} */\n        var zs = Object.keys(tilesToDrawByZ).map(Number);\n        zs.sort(numberSafeCompareFunction);\n        var clips, clipZs, currentClip;\n        if (layerState.opacity === 1 &&\n            (!this.containerReused ||\n                tileSource.getOpaque(frameState.viewState.projection))) {\n            zs = zs.reverse();\n        }\n        else {\n            clips = [];\n            clipZs = [];\n        }\n        for (var i = zs.length - 1; i >= 0; --i) {\n            var currentZ = zs[i];\n            var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n            var currentResolution = tileGrid.getResolution(currentZ);\n            var currentScale = currentResolution / tileResolution;\n            var dx_1 = currentTilePixelSize[0] * currentScale * canvasScale;\n            var dy_1 = currentTilePixelSize[1] * currentScale * canvasScale;\n            var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n            var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n            var origin_1 = applyTransform(this.tempTransform, [\n                (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n                    tileResolution,\n                (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n                    tileResolution,\n            ]);\n            var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n            var tilesToDraw = tilesToDrawByZ[currentZ];\n            for (var tileCoordKey in tilesToDraw) {\n                var tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n                var tileCoord = tile.tileCoord;\n                // Calculate integer positions and sizes so that tiles align\n                var floatX = origin_1[0] - (originTileCoord[1] - tileCoord[1]) * dx_1;\n                var nextX = Math.round(floatX + dx_1);\n                var floatY = origin_1[1] - (originTileCoord[2] - tileCoord[2]) * dy_1;\n                var nextY = Math.round(floatY + dy_1);\n                var x = Math.round(floatX);\n                var y = Math.round(floatY);\n                var w = nextX - x;\n                var h = nextY - y;\n                var transition = z === currentZ;\n                var inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n                if (!inTransition) {\n                    if (clips) {\n                        // Clip mask for regions in this tile that already filled by a higher z tile\n                        context.save();\n                        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n                        for (var i_1 = 0, ii = clips.length; i_1 < ii; ++i_1) {\n                            if (z !== currentZ && currentZ < clipZs[i_1]) {\n                                var clip = clips[i_1];\n                                context.beginPath();\n                                // counter-clockwise (outer ring) for current tile\n                                context.moveTo(currentClip[0], currentClip[1]);\n                                context.lineTo(currentClip[2], currentClip[3]);\n                                context.lineTo(currentClip[4], currentClip[5]);\n                                context.lineTo(currentClip[6], currentClip[7]);\n                                // clockwise (inner ring) for higher z tile\n                                context.moveTo(clip[6], clip[7]);\n                                context.lineTo(clip[4], clip[5]);\n                                context.lineTo(clip[2], clip[3]);\n                                context.lineTo(clip[0], clip[1]);\n                                context.clip();\n                            }\n                        }\n                        clips.push(currentClip);\n                        clipZs.push(currentZ);\n                    }\n                    else {\n                        context.clearRect(x, y, w, h);\n                    }\n                }\n                this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n                if (clips && !inTransition) {\n                    context.restore();\n                }\n                this.renderedTiles.push(tile);\n                this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n            }\n        }\n        this.renderedRevision = sourceRevision;\n        this.renderedResolution = tileResolution;\n        this.extentChanged =\n            !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n        this.renderedExtent_ = canvasExtent;\n        this.renderedPixelRatio = pixelRatio;\n        this.renderedProjection = projection;\n        this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio, projection, extent, z, tileLayer.getPreload());\n        this.scheduleExpireCache(frameState, tileSource);\n        this.postRender(context, frameState);\n        if (layerState.extent) {\n            context.restore();\n        }\n        if (canvasTransform !== canvas.style.transform) {\n            canvas.style.transform = canvasTransform;\n        }\n        return this.container;\n    };\n    /**\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {number} x Left of the tile.\n     * @param {number} y Top of the tile.\n     * @param {number} w Width of the tile.\n     * @param {number} h Height of the tile.\n     * @param {number} gutter Tile gutter.\n     * @param {boolean} transition Apply an alpha transition.\n     * @param {number} opacity Opacity.\n     */\n    CanvasTileLayerRenderer.prototype.drawTileImage = function (tile, frameState, x, y, w, h, gutter, transition, opacity) {\n        var image = this.getTileImage(tile);\n        if (!image) {\n            return;\n        }\n        var uid = getUid(this);\n        var tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n        var alpha = opacity * tileAlpha;\n        var alphaChanged = alpha !== this.context.globalAlpha;\n        if (alphaChanged) {\n            this.context.save();\n            this.context.globalAlpha = alpha;\n        }\n        this.context.drawImage(image, gutter, gutter, image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n        if (alphaChanged) {\n            this.context.restore();\n        }\n        if (tileAlpha !== 1) {\n            frameState.animate = true;\n        }\n        else if (transition) {\n            tile.endTransition(uid);\n        }\n    };\n    /**\n     * @return {HTMLCanvasElement} Image\n     */\n    CanvasTileLayerRenderer.prototype.getImage = function () {\n        var context = this.context;\n        return context ? context.canvas : null;\n    };\n    /**\n     * Get the image from a tile.\n     * @param {import(\"../../ImageTile.js\").default} tile Tile.\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.getTileImage = function (tile) {\n        return tile.getImage();\n    };\n    /**\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.scheduleExpireCache = function (frameState, tileSource) {\n        if (tileSource.canExpireCache()) {\n            /**\n             * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n             * @param {import(\"../../PluggableMap.js\").default} map Map.\n             * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n             */\n            var postRenderFunction = function (tileSource, map, frameState) {\n                var tileSourceKey = getUid(tileSource);\n                if (tileSourceKey in frameState.usedTiles) {\n                    tileSource.expireCache(frameState.viewState.projection, frameState.usedTiles[tileSourceKey]);\n                }\n            }.bind(null, tileSource);\n            frameState.postRenderFunctions.push(\n            /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction));\n        }\n    };\n    /**\n     * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import('../../Tile.js').default} tile Tile.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.updateUsedTiles = function (usedTiles, tileSource, tile) {\n        // FIXME should we use tilesToDrawByZ instead?\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in usedTiles)) {\n            usedTiles[tileSourceKey] = {};\n        }\n        usedTiles[tileSourceKey][tile.getKey()] = true;\n    };\n    /**\n     * Manage tile pyramid.\n     * This function performs a number of functions related to the tiles at the\n     * current zoom and lower zoom levels:\n     * - registers idle tiles in frameState.wantedTiles so that they are not\n     *   discarded by the tile queue\n     * - enqueues missing tiles\n     * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n     * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n     * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n     * @param {import(\"../../extent.js\").Extent} extent Extent.\n     * @param {number} currentZ Current Z.\n     * @param {number} preload Load low resolution tiles up to 'preload' levels.\n     * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n     * @protected\n     */\n    CanvasTileLayerRenderer.prototype.manageTilePyramid = function (frameState, tileSource, tileGrid, pixelRatio, projection, extent, currentZ, preload, opt_tileCallback) {\n        var tileSourceKey = getUid(tileSource);\n        if (!(tileSourceKey in frameState.wantedTiles)) {\n            frameState.wantedTiles[tileSourceKey] = {};\n        }\n        var wantedTiles = frameState.wantedTiles[tileSourceKey];\n        var tileQueue = frameState.tileQueue;\n        var minZoom = tileGrid.getMinZoom();\n        var tileCount = 0;\n        var tile, tileRange, tileResolution, x, y, z;\n        for (z = minZoom; z <= currentZ; ++z) {\n            tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n            tileResolution = tileGrid.getResolution(z);\n            for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n                for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                    if (currentZ - z <= preload) {\n                        ++tileCount;\n                        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n                        if (tile.getState() == TileState.IDLE) {\n                            wantedTiles[tile.getKey()] = true;\n                            if (!tileQueue.isKeyQueued(tile.getKey())) {\n                                tileQueue.enqueue([\n                                    tile,\n                                    tileSourceKey,\n                                    tileGrid.getTileCoordCenter(tile.tileCoord),\n                                    tileResolution,\n                                ]);\n                            }\n                        }\n                        if (opt_tileCallback !== undefined) {\n                            opt_tileCallback(tile);\n                        }\n                    }\n                    else {\n                        tileSource.useTile(z, x, y, projection);\n                    }\n                }\n            }\n        }\n        tileSource.updateCacheSize(tileCount, projection);\n    };\n    return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\nexport default CanvasTileLayerRenderer;\n//# sourceMappingURL=TileLayer.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /** @class */ (function (_super) {\n    __extends(TileLayer, _super);\n    /**\n     * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n     */\n    function TileLayer(opt_options) {\n        return _super.call(this, opt_options) || this;\n    }\n    /**\n     * Create a renderer for this layer.\n     * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n     * @protected\n     */\n    TileLayer.prototype.createRenderer = function () {\n        return new CanvasTileLayerRenderer(this);\n    };\n    return TileLayer;\n}(BaseTileLayer));\nexport default TileLayer;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport { lerp, squaredDistance as squaredDx } from '../../math.js';\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n    var x1 = flatCoordinates[offset1];\n    var y1 = flatCoordinates[offset1 + 1];\n    var dx = flatCoordinates[offset2] - x1;\n    var dy = flatCoordinates[offset2 + 1] - y1;\n    var offset;\n    if (dx === 0 && dy === 0) {\n        offset = offset1;\n    }\n    else {\n        var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n        if (t > 1) {\n            offset = offset2;\n        }\n        else if (t > 0) {\n            for (var i = 0; i < stride; ++i) {\n                closestPoint[i] = lerp(flatCoordinates[offset1 + i], flatCoordinates[offset2 + i], t);\n            }\n            closestPoint.length = stride;\n            return;\n        }\n        else {\n            offset = offset1;\n        }\n    }\n    for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n    }\n    closestPoint.length = stride;\n}\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    for (offset += stride; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        var squaredDelta = squaredDx(x1, y1, x2, y2);\n        if (squaredDelta > max) {\n            max = squaredDelta;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n        offset = end;\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n        offset = ends[ends.length - 1];\n    }\n    return max;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    if (offset == end) {\n        return minSquaredDistance;\n    }\n    var i, squaredDistance;\n    if (maxDelta === 0) {\n        // All points are identical, so just test the first point.\n        squaredDistance = squaredDx(x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n        if (squaredDistance < minSquaredDistance) {\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = flatCoordinates[offset + i];\n            }\n            closestPoint.length = stride;\n            return squaredDistance;\n        }\n        else {\n            return minSquaredDistance;\n        }\n    }\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    var index = offset + stride;\n    while (index < end) {\n        assignClosest(flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n            index += stride;\n        }\n        else {\n            // Skip ahead multiple points, because we know that all the skipped\n            // points cannot be any closer than the closest point we have found so\n            // far.  We know this because we know how close the current point is, how\n            // close the closest point we have found so far is, and the maximum\n            // distance between consecutive points.  For example, if we're currently\n            // at distance 10, the best we've found so far is 3, and that the maximum\n            // distance between consecutive points is 2, then we'll need to skip at\n            // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n            // finding a closer point.  We use Math.max(..., 1) to ensure that we\n            // always advance at least one point, to avoid an infinite loop.\n            index +=\n                stride *\n                    Math.max(((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n                        maxDelta) |\n                        0, 1);\n        }\n    }\n    if (isRing) {\n        // Check the closing segment.\n        assignClosest(flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n        squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n        if (squaredDistance < minSquaredDistance) {\n            minSquaredDistance = squaredDistance;\n            for (i = 0; i < stride; ++i) {\n                closestPoint[i] = tmpPoint[i];\n            }\n            closestPoint.length = stride;\n        }\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        minSquaredDistance = assignClosestPoint(flatCoordinates, offset, end, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = end;\n    }\n    return minSquaredDistance;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset, endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, opt_tmpPoint) {\n    var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        minSquaredDistance = assignClosestArrayPoint(flatCoordinates, offset, ends, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n        offset = ends[ends.length - 1];\n    }\n    return minSquaredDistance;\n}\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/area\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n    var twiceArea = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        twiceArea += y1 * x2 - x1 * y2;\n        x1 = x2;\n        y1 = y2;\n    }\n    return twiceArea / 2;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n    var area = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        area += linearRing(flatCoordinates, offset, end, stride);\n        offset = end;\n    }\n    return area;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n    var area = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        area += linearRings(flatCoordinates, offset, ends, stride);\n        offset = ends[ends.length - 1];\n    }\n    return area;\n}\n//# sourceMappingURL=area.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { assignClosestPoint, maxSquaredDelta } from './flat/closest.js';\nimport { closestSquaredDistanceXY } from '../extent.js';\nimport { deflateCoordinates } from './flat/deflate.js';\nimport { douglasPeucker } from './flat/simplify.js';\nimport { inflateCoordinates } from './flat/inflate.js';\nimport { linearRing as linearRingArea } from './flat/area.js';\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /** @class */ (function (_super) {\n    __extends(LinearRing, _super);\n    /**\n     * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n     *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     */\n    function LinearRing(coordinates, opt_layout) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!LinearRing} Clone.\n     * @api\n     */\n    LinearRing.prototype.clone = function () {\n        return new LinearRing(this.flatCoordinates.slice(), this.layout);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    LinearRing.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(maxSquaredDelta(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestPoint(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * Return the area of the linear ring on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    LinearRing.prototype.getArea = function () {\n        return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * Return the coordinates of the linear ring.\n     * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n     * @api\n     */\n    LinearRing.prototype.getCoordinates = function () {\n        return inflateCoordinates(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {LinearRing} Simplified LinearRing.\n     * @protected\n     */\n    LinearRing.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        simplifiedFlatCoordinates.length = douglasPeucker(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, squaredTolerance, simplifiedFlatCoordinates, 0);\n        return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    LinearRing.prototype.getType = function () {\n        return GeometryType.LINEAR_RING;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    LinearRing.prototype.intersectsExtent = function (extent) {\n        return false;\n    };\n    /**\n     * Set the coordinates of the linear ring.\n     * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    LinearRing.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 1);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        this.flatCoordinates.length = deflateCoordinates(this.flatCoordinates, 0, coordinates, this.stride);\n        this.changed();\n    };\n    return LinearRing;\n}(SimpleGeometry));\nexport default LinearRing;\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport { forEachCorner } from '../../extent.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n    var outside = forEachCorner(extent, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n        return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n    return !outside;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n    // http://geomalgorithms.com/a03-_inclusion.html\n    // Copyright 2000 softSurfer, 2012 Dan Sunday\n    // This code may be freely used and modified for any purpose\n    // providing that this copyright notice is included with it.\n    // SoftSurfer makes no warranty for this code, and cannot be held\n    // liable for any real or imagined damage resulting from its use.\n    // Users of this code must verify correctness for their application.\n    var wn = 0;\n    var x1 = flatCoordinates[end - stride];\n    var y1 = flatCoordinates[end - stride + 1];\n    for (; offset < end; offset += stride) {\n        var x2 = flatCoordinates[offset];\n        var y2 = flatCoordinates[offset + 1];\n        if (y1 <= y) {\n            if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n                wn++;\n            }\n        }\n        else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n            wn--;\n        }\n        x1 = x2;\n        y1 = y2;\n    }\n    return wn !== 0;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n    if (ends.length === 0) {\n        return false;\n    }\n    if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n        return false;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n    if (endss.length === 0) {\n        return false;\n    }\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport { linearRingsContainsXY } from './contains.js';\nimport { numberSafeCompareFunction } from '../../array.js';\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n    var i, ii, x, x1, x2, y1, y2;\n    var y = flatCenters[flatCentersOffset + 1];\n    /** @type {Array<number>} */\n    var intersections = [];\n    // Calculate intersections with the horizontal line\n    for (var r = 0, rr = ends.length; r < rr; ++r) {\n        var end = ends[r];\n        x1 = flatCoordinates[end - stride];\n        y1 = flatCoordinates[end - stride + 1];\n        for (i = offset; i < end; i += stride) {\n            x2 = flatCoordinates[i];\n            y2 = flatCoordinates[i + 1];\n            if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n                x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n                intersections.push(x);\n            }\n            x1 = x2;\n            y1 = y2;\n        }\n    }\n    // Find the longest segment of the horizontal line that has its center point\n    // inside the linear ring.\n    var pointX = NaN;\n    var maxSegmentLength = -Infinity;\n    intersections.sort(numberSafeCompareFunction);\n    x1 = intersections[0];\n    for (i = 1, ii = intersections.length; i < ii; ++i) {\n        x2 = intersections[i];\n        var segmentLength = Math.abs(x2 - x1);\n        if (segmentLength > maxSegmentLength) {\n            x = (x1 + x2) / 2;\n            if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n                pointX = x;\n                maxSegmentLength = segmentLength;\n            }\n        }\n        x1 = x2;\n    }\n    if (isNaN(pointX)) {\n        // There is no horizontal line that has its center point inside the linear\n        // ring.  Use the center of the the linear ring's extent.\n        pointX = flatCenters[flatCentersOffset];\n    }\n    if (opt_dest) {\n        opt_dest.push(pointX, y, maxSegmentLength);\n        return opt_dest;\n    }\n    else {\n        return [pointX, y, maxSegmentLength];\n    }\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n    var interiorPoints = [];\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        interiorPoints = getInteriorPointOfArray(flatCoordinates, offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n        offset = ends[ends.length - 1];\n    }\n    return interiorPoints;\n}\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n    var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var point2 = [];\n    var ret;\n    for (; offset + stride < end; offset += stride) {\n        point2[0] = flatCoordinates[offset + stride];\n        point2[1] = flatCoordinates[offset + stride + 1];\n        ret = callback(point1, point2);\n        if (ret) {\n            return ret;\n        }\n        point1[0] = point2[0];\n        point1[1] = point2[1];\n    }\n    return false;\n}\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport { containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment, } from '../../extent.js';\nimport { forEach as forEachSegment } from './segments.js';\nimport { linearRingContainsExtent, linearRingContainsXY } from './contains.js';\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n    var coordinatesExtent = extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n    if (!intersects(extent, coordinatesExtent)) {\n        return false;\n    }\n    if (containsExtent(extent, coordinatesExtent)) {\n        return true;\n    }\n    if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n        return true;\n    }\n    if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n        return true;\n    }\n    return forEachSegment(flatCoordinates, offset, end, stride, \n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n        return intersectsSegment(extent, point1, point2);\n    });\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        if (intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)) {\n            return true;\n        }\n        offset = ends[i];\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n    if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n        return true;\n    }\n    if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n        return true;\n    }\n    return false;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n    if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n        return false;\n    }\n    if (ends.length === 1) {\n        return true;\n    }\n    for (var i = 1, ii = ends.length; i < ii; ++i) {\n        if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n            if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)) {\n            return true;\n        }\n        offset = ends[ends.length - 1];\n    }\n    return false;\n}\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n    while (offset < end - stride) {\n        for (var i = 0; i < stride; ++i) {\n            var tmp = flatCoordinates[offset + i];\n            flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n            flatCoordinates[end - stride + i] = tmp;\n        }\n        offset += stride;\n        end -= stride;\n    }\n}\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport { coordinates as reverseCoordinates } from './reverse.js';\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n    // https://stackoverflow.com/a/1180256/2389327\n    // https://en.wikipedia.org/wiki/Curve_orientation#Orientation_of_a_simple_polygon\n    var firstVertexRepeated = true;\n    for (var i = 0; i < stride; ++i) {\n        if (flatCoordinates[offset + i] !== flatCoordinates[end - stride + i]) {\n            firstVertexRepeated = false;\n            break;\n        }\n    }\n    if (firstVertexRepeated) {\n        end -= stride;\n    }\n    var iMinVertex = findCornerVertex(flatCoordinates, offset, end, stride);\n    // Orientation matrix:\n    //     [ 1  xa  ya ]\n    // O = | 1  xb  yb |\n    //     [ 1  xc  yc ]\n    var iPreviousVertex = iMinVertex - stride;\n    if (iPreviousVertex < offset) {\n        iPreviousVertex = end - stride;\n    }\n    var iNextVertex = iMinVertex + stride;\n    if (iNextVertex >= end) {\n        iNextVertex = offset;\n    }\n    var aX = flatCoordinates[iPreviousVertex];\n    var aY = flatCoordinates[iPreviousVertex + 1];\n    var bX = flatCoordinates[iMinVertex];\n    var bY = flatCoordinates[iMinVertex + 1];\n    var cX = flatCoordinates[iNextVertex];\n    var cY = flatCoordinates[iNextVertex + 1];\n    var determinant = bX * cY + aX * bY + aY * cX - (aY * bX + bY * cX + aX * cY);\n    return determinant < 0;\n}\n// Find vertex along one edge of bounding box.\n// In this case, we find smallest y; in case of tie also smallest x.\nfunction findCornerVertex(flatCoordinates, offset, end, stride) {\n    var iMinVertex = -1;\n    var minY = Infinity;\n    var minXAtMinY = Infinity;\n    for (var i = offset; i < end; i += stride) {\n        var x = flatCoordinates[i];\n        var y = flatCoordinates[i + 1];\n        if (y > minY) {\n            continue;\n        }\n        if (y == minY) {\n            if (x >= minXAtMinY) {\n                continue;\n            }\n        }\n        // Minimum so far.\n        iMinVertex = i;\n        minY = y;\n        minXAtMinY = x;\n    }\n    return iMinVertex;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        if (i === 0) {\n            if ((right && isClockwise) || (!right && !isClockwise)) {\n                return false;\n            }\n        }\n        else {\n            if ((right && !isClockwise) || (!right && isClockwise)) {\n                return false;\n            }\n        }\n        offset = end;\n    }\n    return true;\n}\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)) {\n            return false;\n        }\n        if (ends.length) {\n            offset = ends[ends.length - 1];\n        }\n    }\n    return true;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n    var right = opt_right !== undefined ? opt_right : false;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n        var end = ends[i];\n        var isClockwise = linearRingIsClockwise(flatCoordinates, offset, end, stride);\n        var reverse = i === 0\n            ? (right && isClockwise) || (!right && !isClockwise)\n            : (right && !isClockwise) || (!right && isClockwise);\n        if (reverse) {\n            reverseCoordinates(flatCoordinates, offset, end, stride);\n        }\n        offset = end;\n    }\n    return offset;\n}\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n        offset = orientLinearRings(flatCoordinates, offset, endss[i], stride, opt_right);\n    }\n    return offset;\n}\n//# sourceMappingURL=orient.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport { arrayMaxSquaredDelta, assignClosestArrayPoint } from './flat/closest.js';\nimport { closestSquaredDistanceXY, getCenter } from '../extent.js';\nimport { deflateCoordinatesArray } from './flat/deflate.js';\nimport { extend } from '../array.js';\nimport { getInteriorPointOfArray } from './flat/interiorpoint.js';\nimport { inflateCoordinatesArray } from './flat/inflate.js';\nimport { intersectsLinearRingArray } from './flat/intersectsextent.js';\nimport { linearRingsAreOriented, orientLinearRings } from './flat/orient.js';\nimport { linearRings as linearRingsArea } from './flat/area.js';\nimport { linearRingsContainsXY } from './flat/contains.js';\nimport { modulo } from '../math.js';\nimport { quantizeArray } from './flat/simplify.js';\nimport { offset as sphereOffset } from '../sphere.js';\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /** @class */ (function (_super) {\n    __extends(Polygon, _super);\n    /**\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n     *     Array of linear rings that define the polygon. The first linear ring of the\n     *     array defines the outer-boundary or surface of the polygon. Each subsequent\n     *     linear ring defines a hole in the surface of the polygon. A linear ring is\n     *     an array of vertices' coordinates where the first coordinate and the last are\n     *     equivalent. (For internal use, flat coordinates in combination with\n     *     `opt_layout` and `opt_ends` are also accepted.)\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n     */\n    function Polygon(coordinates, opt_layout, opt_ends) {\n        var _this = _super.call(this) || this;\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        _this.ends_ = [];\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.flatInteriorPointRevision_ = -1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        _this.flatInteriorPoint_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDelta_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.maxDeltaRevision_ = -1;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.orientedRevision_ = -1;\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.orientedFlatCoordinates_ = null;\n        if (opt_layout !== undefined && opt_ends) {\n            _this.setFlatCoordinates(opt_layout, \n            /** @type {Array<number>} */ (coordinates));\n            _this.ends_ = opt_ends;\n        }\n        else {\n            _this.setCoordinates(\n            /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n        }\n        return _this;\n    }\n    /**\n     * Append the passed linear ring to this polygon.\n     * @param {LinearRing} linearRing Linear ring.\n     * @api\n     */\n    Polygon.prototype.appendLinearRing = function (linearRing) {\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n        }\n        else {\n            extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n        }\n        this.ends_.push(this.flatCoordinates.length);\n        this.changed();\n    };\n    /**\n     * Make a complete copy of the geometry.\n     * @return {!Polygon} Clone.\n     * @api\n     */\n    Polygon.prototype.clone = function () {\n        return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n     * @param {number} minSquaredDistance Minimum squared distance.\n     * @return {number} Minimum squared distance.\n     */\n    Polygon.prototype.closestPointXY = function (x, y, closestPoint, minSquaredDistance) {\n        if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n            return minSquaredDistance;\n        }\n        if (this.maxDeltaRevision_ != this.getRevision()) {\n            this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(this.flatCoordinates, 0, this.ends_, this.stride, 0));\n            this.maxDeltaRevision_ = this.getRevision();\n        }\n        return assignClosestArrayPoint(this.flatCoordinates, 0, this.ends_, this.stride, this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n    };\n    /**\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @return {boolean} Contains (x, y).\n     */\n    Polygon.prototype.containsXY = function (x, y) {\n        return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n    };\n    /**\n     * Return the area of the polygon on projected plane.\n     * @return {number} Area (on projected plane).\n     * @api\n     */\n    Polygon.prototype.getArea = function () {\n        return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n    };\n    /**\n     * Get the coordinate array for this geometry.  This array has the structure\n     * of a GeoJSON coordinate array for polygons.\n     *\n     * @param {boolean=} opt_right Orient coordinates according to the right-hand\n     *     rule (counter-clockwise for exterior and clockwise for interior rings).\n     *     If `false`, coordinates will be oriented according to the left-hand rule\n     *     (clockwise for exterior and counter-clockwise for interior rings).\n     *     By default, coordinate orientation will depend on how the geometry was\n     *     constructed.\n     * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n     * @api\n     */\n    Polygon.prototype.getCoordinates = function (opt_right) {\n        var flatCoordinates;\n        if (opt_right !== undefined) {\n            flatCoordinates = this.getOrientedFlatCoordinates().slice();\n            orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n        }\n        else {\n            flatCoordinates = this.flatCoordinates;\n        }\n        return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n    };\n    /**\n     * @return {Array<number>} Ends.\n     */\n    Polygon.prototype.getEnds = function () {\n        return this.ends_;\n    };\n    /**\n     * @return {Array<number>} Interior point.\n     */\n    Polygon.prototype.getFlatInteriorPoint = function () {\n        if (this.flatInteriorPointRevision_ != this.getRevision()) {\n            var flatCenter = getCenter(this.getExtent());\n            this.flatInteriorPoint_ = getInteriorPointOfArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, flatCenter, 0);\n            this.flatInteriorPointRevision_ = this.getRevision();\n        }\n        return this.flatInteriorPoint_;\n    };\n    /**\n     * Return an interior point of the polygon.\n     * @return {Point} Interior point as XYM coordinate, where M is the\n     * length of the horizontal intersection that the point belongs to.\n     * @api\n     */\n    Polygon.prototype.getInteriorPoint = function () {\n        return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n    };\n    /**\n     * Return the number of rings of the polygon,  this includes the exterior\n     * ring and any interior rings.\n     *\n     * @return {number} Number of rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRingCount = function () {\n        return this.ends_.length;\n    };\n    /**\n     * Return the Nth linear ring of the polygon geometry. Return `null` if the\n     * given index is out of range.\n     * The exterior linear ring is available at index `0` and the interior rings\n     * at index `1` and beyond.\n     *\n     * @param {number} index Index.\n     * @return {LinearRing} Linear ring.\n     * @api\n     */\n    Polygon.prototype.getLinearRing = function (index) {\n        if (index < 0 || this.ends_.length <= index) {\n            return null;\n        }\n        return new LinearRing(this.flatCoordinates.slice(index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n    };\n    /**\n     * Return the linear rings of the polygon.\n     * @return {Array<LinearRing>} Linear rings.\n     * @api\n     */\n    Polygon.prototype.getLinearRings = function () {\n        var layout = this.layout;\n        var flatCoordinates = this.flatCoordinates;\n        var ends = this.ends_;\n        var linearRings = [];\n        var offset = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n            var end = ends[i];\n            var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n            linearRings.push(linearRing);\n            offset = end;\n        }\n        return linearRings;\n    };\n    /**\n     * @return {Array<number>} Oriented flat coordinates.\n     */\n    Polygon.prototype.getOrientedFlatCoordinates = function () {\n        if (this.orientedRevision_ != this.getRevision()) {\n            var flatCoordinates = this.flatCoordinates;\n            if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n                this.orientedFlatCoordinates_ = flatCoordinates;\n            }\n            else {\n                this.orientedFlatCoordinates_ = flatCoordinates.slice();\n                this.orientedFlatCoordinates_.length = orientLinearRings(this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n            }\n            this.orientedRevision_ = this.getRevision();\n        }\n        return this.orientedFlatCoordinates_;\n    };\n    /**\n     * @param {number} squaredTolerance Squared tolerance.\n     * @return {Polygon} Simplified Polygon.\n     * @protected\n     */\n    Polygon.prototype.getSimplifiedGeometryInternal = function (squaredTolerance) {\n        var simplifiedFlatCoordinates = [];\n        var simplifiedEnds = [];\n        simplifiedFlatCoordinates.length = quantizeArray(this.flatCoordinates, 0, this.ends_, this.stride, Math.sqrt(squaredTolerance), simplifiedFlatCoordinates, 0, simplifiedEnds);\n        return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n    };\n    /**\n     * Get the type of this geometry.\n     * @return {import(\"./GeometryType.js\").default} Geometry type.\n     * @api\n     */\n    Polygon.prototype.getType = function () {\n        return GeometryType.POLYGON;\n    };\n    /**\n     * Test if the geometry and the passed extent intersect.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @return {boolean} `true` if the geometry and the extent intersect.\n     * @api\n     */\n    Polygon.prototype.intersectsExtent = function (extent) {\n        return intersectsLinearRingArray(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n    };\n    /**\n     * Set the coordinates of the polygon.\n     * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n     * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n     * @api\n     */\n    Polygon.prototype.setCoordinates = function (coordinates, opt_layout) {\n        this.setLayout(opt_layout, coordinates, 2);\n        if (!this.flatCoordinates) {\n            this.flatCoordinates = [];\n        }\n        var ends = deflateCoordinatesArray(this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n        this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n        this.changed();\n    };\n    return Polygon;\n}(SimpleGeometry));\nexport default Polygon;\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n    var n = opt_n ? opt_n : 32;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    for (var i = 0; i < n; ++i) {\n        extend(flatCoordinates, sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius));\n    }\n    flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var flatCoordinates = [\n        minX,\n        minY,\n        minX,\n        maxY,\n        maxX,\n        maxY,\n        maxX,\n        minY,\n        minX,\n        minY,\n    ];\n    return new Polygon(flatCoordinates, GeometryLayout.XY, [\n        flatCoordinates.length,\n    ]);\n}\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n    var sides = opt_sides ? opt_sides : 32;\n    var stride = circle.getStride();\n    var layout = circle.getLayout();\n    var center = circle.getCenter();\n    var arrayLength = stride * (sides + 1);\n    var flatCoordinates = new Array(arrayLength);\n    for (var i = 0; i < arrayLength; i += stride) {\n        flatCoordinates[i] = 0;\n        flatCoordinates[i + 1] = 0;\n        for (var j = 2; j < stride; j++) {\n            flatCoordinates[i + j] = center[j];\n        }\n    }\n    var ends = [flatCoordinates.length];\n    var polygon = new Polygon(flatCoordinates, layout, ends);\n    makeRegular(polygon, center, circle.getRadius(), opt_angle);\n    return polygon;\n}\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n    var flatCoordinates = polygon.getFlatCoordinates();\n    var stride = polygon.getStride();\n    var sides = flatCoordinates.length / stride - 1;\n    var startAngle = opt_angle ? opt_angle : 0;\n    for (var i = 0; i <= sides; ++i) {\n        var offset = i * stride;\n        var angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n        flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n        flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n    }\n    polygon.changed();\n}\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/render\n */\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\nimport { DEVICE_PIXEL_RATIO } from './has.js';\nimport { apply as applyTransform, create as createTransform, multiply as multiplyTransform, scale as scaleTransform, } from './transform.js';\nimport { getSquaredTolerance } from './renderer/vector.js';\nimport { getTransformFromProjections, getUserProjection } from './proj.js';\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n    var canvas = context.canvas;\n    var options = opt_options ? opt_options : {};\n    var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n    var size = options.size;\n    if (size) {\n        canvas.width = size[0] * pixelRatio;\n        canvas.height = size[1] * pixelRatio;\n        canvas.style.width = size[0] + 'px';\n        canvas.style.height = size[1] + 'px';\n    }\n    var extent = [0, 0, canvas.width, canvas.height];\n    var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n    return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n    var frameState = event.frameState;\n    var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n    var squaredTolerance = getSquaredTolerance(frameState.viewState.resolution, frameState.pixelRatio);\n    var userTransform;\n    var userProjection = getUserProjection();\n    if (userProjection) {\n        userTransform = getTransformFromProjections(userProjection, frameState.viewState.projection);\n    }\n    return new CanvasImmediateRenderer(event.context, frameState.pixelRatio, frameState.extent, transform, frameState.viewState.rotation, squaredTolerance, userTransform);\n}\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n    var result = pixel.slice(0);\n    applyTransform(event.inversePixelTransform.slice(), result);\n    return result;\n}\n/**\n * @param {import(\"./PluggableMap.js\").FrameState} frameState Frame state.\n * @param {?} declutterTree Declutter tree.\n * @returns {?} Declutter tree.\n */\nexport function renderDeclutterItems(frameState, declutterTree) {\n    if (declutterTree) {\n        declutterTree.clear();\n    }\n    var items = frameState.declutterItems;\n    for (var z = items.length - 1; z >= 0; --z) {\n        var item = items[z];\n        var zIndexItems = item.items;\n        for (var i = 0, ii = zIndexItems.length; i < ii; i += 3) {\n            declutterTree = zIndexItems[i].renderDeclutter(zIndexItems[i + 1], zIndexItems[i + 2], item.opacity, declutterTree);\n        }\n    }\n    items.length = 0;\n    return declutterTree;\n}\n//# sourceMappingURL=render.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport { TRUE } from '../functions.js';\nimport { abstract } from '../util.js';\nimport { compose as composeTransform, makeInverse } from '../transform.js';\nimport { getWidth } from '../extent.js';\nimport { shared as iconImageCache } from '../style/IconImageCache.js';\nimport { inView } from '../layer/Layer.js';\nimport { renderDeclutterItems } from '../render.js';\nimport { wrapX } from '../coordinate.js';\n/**\n * @abstract\n */\nvar MapRenderer = /** @class */ (function (_super) {\n    __extends(MapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function MapRenderer(map) {\n        var _this = _super.call(this) || this;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = map;\n        /**\n         * @private\n         */\n        _this.declutterTree_ = null;\n        return _this;\n    }\n    /**\n     * @abstract\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        abstract();\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @protected\n     */\n    MapRenderer.prototype.calculateMatrices2D = function (frameState) {\n        var viewState = frameState.viewState;\n        var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n        var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n        composeTransform(coordinateToPixelTransform, frameState.size[0] / 2, frameState.size[1] / 2, 1 / viewState.resolution, -1 / viewState.resolution, -viewState.rotation, -viewState.center[0], -viewState.center[1]);\n        makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n     *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n     * @param {S} thisArg Value to use as `this` when executing `callback`.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n     * @return {T|undefined} Callback result.\n     * @template S,T,U\n     */\n    MapRenderer.prototype.forEachFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, callback, thisArg, layerFilter, thisArg2) {\n        var result;\n        var viewState = frameState.viewState;\n        /**\n         * @param {boolean} managed Managed layer.\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {?} Callback result.\n         */\n        function forEachFeatureAtCoordinate(managed, feature, layer) {\n            return callback.call(thisArg, feature, managed ? layer : null);\n        }\n        var projection = viewState.projection;\n        var translatedCoordinate = wrapX(coordinate.slice(), projection);\n        var offsets = [[0, 0]];\n        if (projection.canWrapX() && checkWrapped) {\n            var projectionExtent = projection.getExtent();\n            var worldWidth = getWidth(projectionExtent);\n            offsets.push([-worldWidth, 0], [worldWidth, 0]);\n        }\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        var declutteredFeatures;\n        if (this.declutterTree_) {\n            declutteredFeatures = this.declutterTree_.all().map(function (entry) {\n                return entry.value;\n            });\n        }\n        var tmpCoord = [];\n        for (var i = 0; i < offsets.length; i++) {\n            for (var j = numLayers - 1; j >= 0; --j) {\n                var layerState = layerStates[j];\n                var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n                if (layer.hasRenderer() &&\n                    inView(layerState, viewState) &&\n                    layerFilter.call(thisArg2, layer)) {\n                    var layerRenderer = layer.getRenderer();\n                    var source = layer.getSource();\n                    if (layerRenderer && source) {\n                        var coordinates = source.getWrapX()\n                            ? translatedCoordinate\n                            : coordinate;\n                        var callback_1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n                        tmpCoord[0] = coordinates[0] + offsets[i][0];\n                        tmpCoord[1] = coordinates[1] + offsets[i][1];\n                        result = layerRenderer.forEachFeatureAtCoordinate(tmpCoord, frameState, hitTolerance, callback_1, declutteredFeatures);\n                    }\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    /**\n     * @abstract\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    MapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        return abstract();\n    };\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {boolean} checkWrapped Check for wrapped geometries.\n     * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n     * @return {boolean} Is there a feature at the given coordinate?\n     * @template U\n     */\n    MapRenderer.prototype.hasFeatureAtCoordinate = function (coordinate, frameState, hitTolerance, checkWrapped, layerFilter, thisArg) {\n        var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, checkWrapped, TRUE, this, layerFilter, thisArg);\n        return hasFeature !== undefined;\n    };\n    /**\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     */\n    MapRenderer.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    MapRenderer.prototype.renderFrame = function (frameState) {\n        this.declutterTree_ = renderDeclutterItems(frameState, this.declutterTree_);\n    };\n    /**\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @protected\n     */\n    MapRenderer.prototype.scheduleExpireIconCache = function (frameState) {\n        if (iconImageCache.canExpireCache()) {\n            frameState.postRenderFunctions.push(expireIconCache);\n        }\n    };\n    return MapRenderer;\n}(Disposable));\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n    iconImageCache.expire();\n}\nexport default MapRenderer;\n//# sourceMappingURL=Map.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport { CLASS_UNSELECTABLE } from '../css.js';\nimport { checkedFonts } from '../render/canvas.js';\nimport { inView } from '../layer/Layer.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { replaceChildren } from '../dom.js';\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /** @class */ (function (_super) {\n    __extends(CompositeMapRenderer, _super);\n    /**\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     */\n    function CompositeMapRenderer(map) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * @type {import(\"../events.js\").EventsKey}\n         */\n        _this.fontChangeListenerKey_ = listen(checkedFonts, ObjectEventType.PROPERTYCHANGE, map.redrawText.bind(map));\n        /**\n         * @private\n         * @type {HTMLDivElement}\n         */\n        _this.element_ = document.createElement('div');\n        var style = _this.element_.style;\n        style.position = 'absolute';\n        style.width = '100%';\n        style.height = '100%';\n        style.zIndex = '0';\n        _this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n        var container = map.getViewport();\n        container.insertBefore(_this.element_, container.firstChild || null);\n        /**\n         * @private\n         * @type {Array<HTMLElement>}\n         */\n        _this.children_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * @param {import(\"../render/EventType.js\").default} type Event type.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.dispatchRenderEvent = function (type, frameState) {\n        var map = this.getMap();\n        if (map.hasListener(type)) {\n            var event_1 = new RenderEvent(type, undefined, frameState);\n            map.dispatchEvent(event_1);\n        }\n    };\n    CompositeMapRenderer.prototype.disposeInternal = function () {\n        unlistenByKey(this.fontChangeListenerKey_);\n        this.element_.parentNode.removeChild(this.element_);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Render.\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    CompositeMapRenderer.prototype.renderFrame = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element_.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        this.calculateMatrices2D(frameState);\n        this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n        var layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n            return a.zIndex - b.zIndex;\n        });\n        var viewState = frameState.viewState;\n        this.children_.length = 0;\n        var previousElement = null;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            frameState.layerIndex = i;\n            if (!inView(layerState, viewState) ||\n                (layerState.sourceState != SourceState.READY &&\n                    layerState.sourceState != SourceState.UNDEFINED)) {\n                continue;\n            }\n            var layer = layerState.layer;\n            var element = layer.render(frameState, previousElement);\n            if (!element) {\n                continue;\n            }\n            if (element !== previousElement) {\n                this.children_.push(element);\n                previousElement = element;\n            }\n        }\n        _super.prototype.renderFrame.call(this, frameState);\n        replaceChildren(this.element_, this.children_);\n        this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n        if (!this.renderedVisible_) {\n            this.element_.style.display = '';\n            this.renderedVisible_ = true;\n        }\n        this.scheduleExpireIconCache(frameState);\n    };\n    /**\n     * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n     * @param {number} hitTolerance Hit tolerance in pixels.\n     * @param {function(import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n     *     callback.\n     * @param {function(import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n     *     function, only layers which are visible and for which this function\n     *     returns `true` will be tested for features.  By default, all visible\n     *     layers will be tested.\n     * @return {T|undefined} Callback result.\n     * @template T\n     */\n    CompositeMapRenderer.prototype.forEachLayerAtPixel = function (pixel, frameState, hitTolerance, callback, layerFilter) {\n        var viewState = frameState.viewState;\n        var layerStates = frameState.layerStatesArray;\n        var numLayers = layerStates.length;\n        for (var i = numLayers - 1; i >= 0; --i) {\n            var layerState = layerStates[i];\n            var layer = layerState.layer;\n            if (layer.hasRenderer() &&\n                inView(layerState, viewState) &&\n                layerFilter(layer)) {\n                var layerRenderer = layer.getRenderer();\n                var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n                if (data) {\n                    var result = callback(layer, data);\n                    if (result) {\n                        return result;\n                    }\n                }\n            }\n        }\n        return undefined;\n    };\n    return CompositeMapRenderer;\n}(MapRenderer));\nexport default CompositeMapRenderer;\n//# sourceMappingURL=Composite.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport { assert } from '../asserts.js';\nimport { assign, clear } from '../obj.js';\nimport { getChangeEventType } from '../Object.js';\nimport { getIntersection } from '../extent.js';\nimport { getUid } from '../util.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n    LAYERS: 'layers',\n};\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /** @class */ (function (_super) {\n    __extends(LayerGroup, _super);\n    /**\n     * @param {Options=} opt_options Layer options.\n     */\n    function LayerGroup(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var baseOptions = /** @type {Options} */ (assign({}, options));\n        delete baseOptions.layers;\n        var layers = options.layers;\n        _this = _super.call(this, baseOptions) || this;\n        /**\n         * @private\n         * @type {Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.layersListenerKeys_ = [];\n        /**\n         * @private\n         * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n         */\n        _this.listenerKeys_ = {};\n        _this.addEventListener(getChangeEventType(Property.LAYERS), _this.handleLayersChanged_);\n        if (layers) {\n            if (Array.isArray(layers)) {\n                layers = new Collection(layers.slice(), { unique: true });\n            }\n            else {\n                assert(typeof ( /** @type {?} */(layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n            }\n        }\n        else {\n            layers = new Collection(undefined, { unique: true });\n        }\n        _this.setLayers(layers);\n        return _this;\n    }\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayerChange_ = function () {\n        this.changed();\n    };\n    /**\n     * @private\n     */\n    LayerGroup.prototype.handleLayersChanged_ = function () {\n        this.layersListenerKeys_.forEach(unlistenByKey);\n        this.layersListenerKeys_.length = 0;\n        var layers = this.getLayers();\n        this.layersListenerKeys_.push(listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this), listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this));\n        for (var id in this.listenerKeys_) {\n            this.listenerKeys_[id].forEach(unlistenByKey);\n        }\n        clear(this.listenerKeys_);\n        var layersArray = layers.getArray();\n        for (var i = 0, ii = layersArray.length; i < ii; i++) {\n            var layer = layersArray[i];\n            this.listenerKeys_[getUid(layer)] = [\n                listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n                listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n            ];\n        }\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersAdd_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        this.listenerKeys_[getUid(layer)] = [\n            listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n            listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n        ];\n        this.changed();\n    };\n    /**\n     * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n     * @private\n     */\n    LayerGroup.prototype.handleLayersRemove_ = function (collectionEvent) {\n        var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n        var key = getUid(layer);\n        this.listenerKeys_[key].forEach(unlistenByKey);\n        delete this.listenerKeys_[key];\n        this.changed();\n    };\n    /**\n     * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.getLayers = function () {\n        return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS));\n    };\n    /**\n     * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n     * in this group.\n     * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n     *   {@link module:ol/layer/Base layers} that are part of this group.\n     * @observable\n     * @api\n     */\n    LayerGroup.prototype.setLayers = function (layers) {\n        this.set(Property.LAYERS, layers);\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n     */\n    LayerGroup.prototype.getLayersArray = function (opt_array) {\n        var array = opt_array !== undefined ? opt_array : [];\n        this.getLayers().forEach(function (layer) {\n            layer.getLayersArray(array);\n        });\n        return array;\n    };\n    /**\n     * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer states (to be modified in place).\n     * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n     */\n    LayerGroup.prototype.getLayerStatesArray = function (opt_states) {\n        var states = opt_states !== undefined ? opt_states : [];\n        var pos = states.length;\n        this.getLayers().forEach(function (layer) {\n            layer.getLayerStatesArray(states);\n        });\n        var ownLayerState = this.getLayerState();\n        for (var i = pos, ii = states.length; i < ii; i++) {\n            var layerState = states[i];\n            layerState.opacity *= ownLayerState.opacity;\n            layerState.visible = layerState.visible && ownLayerState.visible;\n            layerState.maxResolution = Math.min(layerState.maxResolution, ownLayerState.maxResolution);\n            layerState.minResolution = Math.max(layerState.minResolution, ownLayerState.minResolution);\n            layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n            layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n            if (ownLayerState.extent !== undefined) {\n                if (layerState.extent !== undefined) {\n                    layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n                }\n                else {\n                    layerState.extent = ownLayerState.extent;\n                }\n            }\n        }\n        return states;\n    };\n    /**\n     * @return {import(\"../source/State.js\").default} Source state.\n     */\n    LayerGroup.prototype.getSourceState = function () {\n        return SourceState.READY;\n    };\n    return LayerGroup;\n}(BaseLayer));\nexport default LayerGroup;\n//# sourceMappingURL=Group.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /** @class */ (function (_super) {\n    __extends(MapEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapEvent(type, map, opt_frameState) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The map where the event occurred.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @api\n         */\n        _this.map = map;\n        /**\n         * The frame state at the time of the event.\n         * @type {?import(\"./PluggableMap.js\").FrameState}\n         * @api\n         */\n        _this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n        return _this;\n    }\n    return MapEvent;\n}(Event));\nexport default MapEvent;\n//# sourceMappingURL=MapEvent.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nvar MapBrowserEvent = /** @class */ (function (_super) {\n    __extends(MapBrowserEvent, _super);\n    /**\n     * @param {string} type Event type.\n     * @param {import(\"./PluggableMap.js\").default} map Map.\n     * @param {EVENT} originalEvent Original event.\n     * @param {boolean=} opt_dragging Is the map currently being dragged?\n     * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n     */\n    function MapBrowserEvent(type, map, originalEvent, opt_dragging, opt_frameState) {\n        var _this = _super.call(this, type, map, opt_frameState) || this;\n        /**\n         * The original browser event.\n         * @const\n         * @type {EVENT}\n         * @api\n         */\n        _this.originalEvent = originalEvent;\n        /**\n         * The map pixel relative to the viewport corresponding to the original browser event.\n         * @type {?import(\"./pixel.js\").Pixel}\n         */\n        _this.pixel_ = null;\n        /**\n         * The coordinate in the user projection corresponding to the original browser event.\n         * @type {?import(\"./coordinate.js\").Coordinate}\n         */\n        _this.coordinate_ = null;\n        /**\n         * Indicates if the map is currently being dragged. Only set for\n         * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n         *\n         * @type {boolean}\n         * @api\n         */\n        _this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n        return _this;\n    }\n    Object.defineProperty(MapBrowserEvent.prototype, \"pixel\", {\n        /**\n         * The map pixel relative to the viewport corresponding to the original event.\n         * @type {import(\"./pixel.js\").Pixel}\n         * @api\n         */\n        get: function () {\n            if (!this.pixel_) {\n                this.pixel_ = this.map.getEventPixel(this.originalEvent);\n            }\n            return this.pixel_;\n        },\n        set: function (pixel) {\n            this.pixel_ = pixel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MapBrowserEvent.prototype, \"coordinate\", {\n        /**\n         * The coordinate corresponding to the original browser event.  This will be in the user\n         * projection if one is set.  Otherwise it will be in the view projection.\n         * @type {import(\"./coordinate.js\").Coordinate}\n         * @api\n         */\n        get: function () {\n            if (!this.coordinate_) {\n                this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n            }\n            return this.coordinate_;\n        },\n        set: function (coordinate) {\n            this.coordinate_ = coordinate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Prevents the default browser action.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n     * @api\n     */\n    MapBrowserEvent.prototype.preventDefault = function () {\n        _super.prototype.preventDefault.call(this);\n        this.originalEvent.preventDefault();\n    };\n    /**\n     * Prevents further propagation of the current event.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n     * @api\n     */\n    MapBrowserEvent.prototype.stopPropagation = function () {\n        _super.prototype.stopPropagation.call(this);\n        this.originalEvent.stopPropagation();\n    };\n    return MapBrowserEvent;\n}(MapEvent));\nexport default MapBrowserEvent;\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n    POINTERMOVE: 'pointermove',\n    POINTERDOWN: 'pointerdown',\n    POINTERUP: 'pointerup',\n    POINTEROVER: 'pointerover',\n    POINTEROUT: 'pointerout',\n    POINTERENTER: 'pointerenter',\n    POINTERLEAVE: 'pointerleave',\n    POINTERCANCEL: 'pointercancel',\n};\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport { DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS } from './has.js';\nimport { listen, unlistenByKey } from './events.js';\nvar MapBrowserEventHandler = /** @class */ (function (_super) {\n    __extends(MapBrowserEventHandler, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n     * @param {number=} moveTolerance The minimal distance the pointer must travel to trigger a move.\n     */\n    function MapBrowserEventHandler(map, moveTolerance) {\n        var _this = _super.call(this, map) || this;\n        /**\n         * This is the element that we will listen to the real events on.\n         * @type {import(\"./PluggableMap.js\").default}\n         * @private\n         */\n        _this.map_ = map;\n        /**\n         * @type {any}\n         * @private\n         */\n        _this.clickTimeoutId_;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.dragging_ = false;\n        /**\n         * @type {!Array<import(\"./events.js\").EventsKey>}\n         * @private\n         */\n        _this.dragListenerKeys_ = [];\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.moveTolerance_ = moveTolerance\n            ? moveTolerance * DEVICE_PIXEL_RATIO\n            : DEVICE_PIXEL_RATIO;\n        /**\n         * The most recent \"down\" type event (or null if none have occurred).\n         * Set on pointerdown.\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.down_ = null;\n        var element = _this.map_.getViewport();\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.activePointers_ = 0;\n        /**\n         * @type {!Object<number, boolean>}\n         * @private\n         */\n        _this.trackedTouches_ = {};\n        _this.element_ = element;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.pointerdownListenerKey_ = listen(element, PointerEventType.POINTERDOWN, _this.handlePointerDown_, _this);\n        /**\n         * @type {PointerEvent}\n         * @private\n         */\n        _this.originalPointerMoveEvent_;\n        /**\n         * @type {?import(\"./events.js\").EventsKey}\n         * @private\n         */\n        _this.relayedListenerKey_ = listen(element, PointerEventType.POINTERMOVE, _this.relayEvent_, _this);\n        /**\n         * @private\n         */\n        _this.boundHandleTouchMove_ = _this.handleTouchMove_.bind(_this);\n        _this.element_.addEventListener(EventType.TOUCHMOVE, _this.boundHandleTouchMove_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n        return _this;\n    }\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.emulateClick_ = function (pointerEvent) {\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.CLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        if (this.clickTimeoutId_ !== undefined) {\n            // double-click\n            clearTimeout(this.clickTimeoutId_);\n            this.clickTimeoutId_ = undefined;\n            newEvent = new MapBrowserEvent(MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n            this.dispatchEvent(newEvent);\n        }\n        else {\n            // click\n            this.clickTimeoutId_ = setTimeout(function () {\n                this.clickTimeoutId_ = undefined;\n                var newEvent = new MapBrowserEvent(MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n                this.dispatchEvent(newEvent);\n            }.bind(this), 250);\n        }\n    };\n    /**\n     * Keeps track on how many pointers are currently active.\n     *\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.updateActivePointers_ = function (pointerEvent) {\n        var event = pointerEvent;\n        if (event.type == MapBrowserEventType.POINTERUP ||\n            event.type == MapBrowserEventType.POINTERCANCEL) {\n            delete this.trackedTouches_[event.pointerId];\n        }\n        else if (event.type == MapBrowserEventType.POINTERDOWN) {\n            this.trackedTouches_[event.pointerId] = true;\n        }\n        this.activePointers_ = Object.keys(this.trackedTouches_).length;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerUp_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        // We emulate click events on left mouse button click, touch contact, and pen\n        // contact. isMouseActionButton returns true in these cases (evt.button is set\n        // to 0).\n        // See http://www.w3.org/TR/pointerevents/#button-states\n        // We only fire click, singleclick, and doubleclick if nobody has called\n        // event.stopPropagation() or event.preventDefault().\n        if (!newEvent.propagationStopped &&\n            !this.dragging_ &&\n            this.isMouseActionButton_(pointerEvent)) {\n            this.emulateClick_(this.down_);\n        }\n        if (this.activePointers_ === 0) {\n            this.dragListenerKeys_.forEach(unlistenByKey);\n            this.dragListenerKeys_.length = 0;\n            this.dragging_ = false;\n            this.down_ = null;\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} If the left mouse button was pressed.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMouseActionButton_ = function (pointerEvent) {\n        return pointerEvent.button === 0;\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerDown_ = function (pointerEvent) {\n        this.updateActivePointers_(pointerEvent);\n        var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n        this.down_ = pointerEvent;\n        if (this.dragListenerKeys_.length === 0) {\n            this.dragListenerKeys_.push(listen(document, MapBrowserEventType.POINTERMOVE, this.handlePointerMove_, this), listen(document, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this), \n            /* Note that the listener for `pointercancel is set up on\n             * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n             * the `pointerup` and `pointermove` listeners.\n             *\n             * The reason for this is the following: `TouchSource.vacuumTouches_()`\n             * issues `pointercancel` events, when there was no `touchend` for a\n             * `touchstart`. Now, let's say a first `touchstart` is registered on\n             * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n             * But `documentPointerEventHandler_` doesn't know about the first\n             * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n             * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n             * only registered there.\n             */\n            listen(this.element_, MapBrowserEventType.POINTERCANCEL, this.handlePointerUp_, this));\n            if (this.element_.getRootNode &&\n                this.element_.getRootNode() !== document) {\n                this.dragListenerKeys_.push(listen(this.element_.getRootNode(), MapBrowserEventType.POINTERUP, this.handlePointerUp_, this));\n            }\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handlePointerMove_ = function (pointerEvent) {\n        // Between pointerdown and pointerup, pointermove events are triggered.\n        // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n        // moved a significant distance.\n        if (this.isMoving_(pointerEvent)) {\n            this.dragging_ = true;\n            var newEvent = new MapBrowserEvent(MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent, this.dragging_);\n            this.dispatchEvent(newEvent);\n        }\n    };\n    /**\n     * Wrap and relay a pointer event.  Note that this requires that the type\n     * string for the MapBrowserEvent matches the PointerEvent type.\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.relayEvent_ = function (pointerEvent) {\n        this.originalPointerMoveEvent_ = pointerEvent;\n        var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n        this.dispatchEvent(new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging));\n    };\n    /**\n     * Flexible handling of a `touch-action: none` css equivalent: because calling\n     * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n     * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n     * when an interaction (currently `DragPan` handles the event.\n     * @param {TouchEvent} event Event.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.handleTouchMove_ = function (event) {\n        // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n        // may not be initialized yet when we get here on a platform without native pointer events.\n        if (!this.originalPointerMoveEvent_ ||\n            this.originalPointerMoveEvent_.defaultPrevented) {\n            event.preventDefault();\n        }\n    };\n    /**\n     * @param {PointerEvent} pointerEvent Pointer\n     * event.\n     * @return {boolean} Is moving.\n     * @private\n     */\n    MapBrowserEventHandler.prototype.isMoving_ = function (pointerEvent) {\n        return (this.dragging_ ||\n            Math.abs(pointerEvent.clientX - this.down_.clientX) >\n                this.moveTolerance_ ||\n            Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_);\n    };\n    /**\n     * Clean up.\n     */\n    MapBrowserEventHandler.prototype.disposeInternal = function () {\n        if (this.relayedListenerKey_) {\n            unlistenByKey(this.relayedListenerKey_);\n            this.relayedListenerKey_ = null;\n        }\n        this.element_.removeEventListener(EventType.TOUCHMOVE, this.boundHandleTouchMove_);\n        if (this.pointerdownListenerKey_) {\n            unlistenByKey(this.pointerdownListenerKey_);\n            this.pointerdownListenerKey_ = null;\n        }\n        this.dragListenerKeys_.forEach(unlistenByKey);\n        this.dragListenerKeys_.length = 0;\n        this.element_ = null;\n        _super.prototype.disposeInternal.call(this);\n    };\n    return MapBrowserEventHandler;\n}(EventTarget));\nexport default MapBrowserEventHandler;\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    LAYERGROUP: 'layergroup',\n    SIZE: 'size',\n    TARGET: 'target',\n    VIEW: 'view',\n};\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport { assert } from '../asserts.js';\nimport { clear } from '../obj.js';\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = /** @class */ (function () {\n    /**\n     * @param {function(T): number} priorityFunction Priority function.\n     * @param {function(T): string} keyFunction Key function.\n     */\n    function PriorityQueue(priorityFunction, keyFunction) {\n        /**\n         * @type {function(T): number}\n         * @private\n         */\n        this.priorityFunction_ = priorityFunction;\n        /**\n         * @type {function(T): string}\n         * @private\n         */\n        this.keyFunction_ = keyFunction;\n        /**\n         * @type {Array<T>}\n         * @private\n         */\n        this.elements_ = [];\n        /**\n         * @type {Array<number>}\n         * @private\n         */\n        this.priorities_ = [];\n        /**\n         * @type {!Object<string, boolean>}\n         * @private\n         */\n        this.queuedElements_ = {};\n    }\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.clear = function () {\n        this.elements_.length = 0;\n        this.priorities_.length = 0;\n        clear(this.queuedElements_);\n    };\n    /**\n     * Remove and return the highest-priority element. O(log N).\n     * @return {T} Element.\n     */\n    PriorityQueue.prototype.dequeue = function () {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[0];\n        if (elements.length == 1) {\n            elements.length = 0;\n            priorities.length = 0;\n        }\n        else {\n            elements[0] = elements.pop();\n            priorities[0] = priorities.pop();\n            this.siftUp_(0);\n        }\n        var elementKey = this.keyFunction_(element);\n        delete this.queuedElements_[elementKey];\n        return element;\n    };\n    /**\n     * Enqueue an element. O(log N).\n     * @param {T} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    PriorityQueue.prototype.enqueue = function (element) {\n        assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n        var priority = this.priorityFunction_(element);\n        if (priority != DROP) {\n            this.elements_.push(element);\n            this.priorities_.push(priority);\n            this.queuedElements_[this.keyFunction_(element)] = true;\n            this.siftDown_(0, this.elements_.length - 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * @return {number} Count.\n     */\n    PriorityQueue.prototype.getCount = function () {\n        return this.elements_.length;\n    };\n    /**\n     * Gets the index of the left child of the node at the given index.\n     * @param {number} index The index of the node to get the left child for.\n     * @return {number} The index of the left child.\n     * @private\n     */\n    PriorityQueue.prototype.getLeftChildIndex_ = function (index) {\n        return index * 2 + 1;\n    };\n    /**\n     * Gets the index of the right child of the node at the given index.\n     * @param {number} index The index of the node to get the right child for.\n     * @return {number} The index of the right child.\n     * @private\n     */\n    PriorityQueue.prototype.getRightChildIndex_ = function (index) {\n        return index * 2 + 2;\n    };\n    /**\n     * Gets the index of the parent of the node at the given index.\n     * @param {number} index The index of the node to get the parent for.\n     * @return {number} The index of the parent.\n     * @private\n     */\n    PriorityQueue.prototype.getParentIndex_ = function (index) {\n        return (index - 1) >> 1;\n    };\n    /**\n     * Make this a heap. O(N).\n     * @private\n     */\n    PriorityQueue.prototype.heapify_ = function () {\n        var i;\n        for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n            this.siftUp_(i);\n        }\n    };\n    /**\n     * @return {boolean} Is empty.\n     */\n    PriorityQueue.prototype.isEmpty = function () {\n        return this.elements_.length === 0;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Is key queued.\n     */\n    PriorityQueue.prototype.isKeyQueued = function (key) {\n        return key in this.queuedElements_;\n    };\n    /**\n     * @param {T} element Element.\n     * @return {boolean} Is queued.\n     */\n    PriorityQueue.prototype.isQueued = function (element) {\n        return this.isKeyQueued(this.keyFunction_(element));\n    };\n    /**\n     * @param {number} index The index of the node to move down.\n     * @private\n     */\n    PriorityQueue.prototype.siftUp_ = function (index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var count = elements.length;\n        var element = elements[index];\n        var priority = priorities[index];\n        var startIndex = index;\n        while (index < count >> 1) {\n            var lIndex = this.getLeftChildIndex_(index);\n            var rIndex = this.getRightChildIndex_(index);\n            var smallerChildIndex = rIndex < count && priorities[rIndex] < priorities[lIndex]\n                ? rIndex\n                : lIndex;\n            elements[index] = elements[smallerChildIndex];\n            priorities[index] = priorities[smallerChildIndex];\n            index = smallerChildIndex;\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n        this.siftDown_(startIndex, index);\n    };\n    /**\n     * @param {number} startIndex The index of the root.\n     * @param {number} index The index of the node to move up.\n     * @private\n     */\n    PriorityQueue.prototype.siftDown_ = function (startIndex, index) {\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var element = elements[index];\n        var priority = priorities[index];\n        while (index > startIndex) {\n            var parentIndex = this.getParentIndex_(index);\n            if (priorities[parentIndex] > priority) {\n                elements[index] = elements[parentIndex];\n                priorities[index] = priorities[parentIndex];\n                index = parentIndex;\n            }\n            else {\n                break;\n            }\n        }\n        elements[index] = element;\n        priorities[index] = priority;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    PriorityQueue.prototype.reprioritize = function () {\n        var priorityFunction = this.priorityFunction_;\n        var elements = this.elements_;\n        var priorities = this.priorities_;\n        var index = 0;\n        var n = elements.length;\n        var element, i, priority;\n        for (i = 0; i < n; ++i) {\n            element = elements[i];\n            priority = priorityFunction(element);\n            if (priority == DROP) {\n                delete this.queuedElements_[this.keyFunction_(element)];\n            }\n            else {\n                priorities[index] = priority;\n                elements[index++] = element;\n            }\n        }\n        elements.length = index;\n        priorities.length = index;\n        this.heapify_();\n    };\n    return PriorityQueue;\n}());\nexport default PriorityQueue;\n//# sourceMappingURL=PriorityQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, { DROP } from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\nvar TileQueue = /** @class */ (function (_super) {\n    __extends(TileQueue, _super);\n    /**\n     * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n     * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n     */\n    function TileQueue(tilePriorityFunction, tileChangeCallback) {\n        var _this = _super.call(this, \n        /**\n         * @param {Array} element Element.\n         * @return {number} Priority.\n         */\n        function (element) {\n            return tilePriorityFunction.apply(null, element);\n        }, \n        /**\n         * @param {Array} element Element.\n         * @return {string} Key.\n         */\n        function (element) {\n            return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n        }) || this;\n        /** @private */\n        _this.boundHandleTileChange_ = _this.handleTileChange.bind(_this);\n        /**\n         * @private\n         * @type {function(): ?}\n         */\n        _this.tileChangeCallback_ = tileChangeCallback;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilesLoading_ = 0;\n        /**\n         * @private\n         * @type {!Object<string,boolean>}\n         */\n        _this.tilesLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * @param {Array} element Element.\n     * @return {boolean} The element was added to the queue.\n     */\n    TileQueue.prototype.enqueue = function (element) {\n        var added = _super.prototype.enqueue.call(this, element);\n        if (added) {\n            var tile = element[0];\n            tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n        }\n        return added;\n    };\n    /**\n     * @return {number} Number of tiles loading.\n     */\n    TileQueue.prototype.getTilesLoading = function () {\n        return this.tilesLoading_;\n    };\n    /**\n     * @param {import(\"./events/Event.js\").default} event Event.\n     * @protected\n     */\n    TileQueue.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n        var state = tile.getState();\n        if ((tile.hifi && state === TileState.LOADED) ||\n            state === TileState.ERROR ||\n            state === TileState.EMPTY) {\n            tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n            var tileKey = tile.getKey();\n            if (tileKey in this.tilesLoadingKeys_) {\n                delete this.tilesLoadingKeys_[tileKey];\n                --this.tilesLoading_;\n            }\n            this.tileChangeCallback_();\n        }\n    };\n    /**\n     * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n     * @param {number} maxNewLoads Maximum number of new tiles to load.\n     */\n    TileQueue.prototype.loadMoreTiles = function (maxTotalLoading, maxNewLoads) {\n        var newLoads = 0;\n        var state, tile, tileKey;\n        while (this.tilesLoading_ < maxTotalLoading &&\n            newLoads < maxNewLoads &&\n            this.getCount() > 0) {\n            tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n            tileKey = tile.getKey();\n            state = tile.getState();\n            if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n                this.tilesLoadingKeys_[tileKey] = true;\n                ++this.tilesLoading_;\n                ++newLoads;\n                tile.load();\n            }\n        }\n    };\n    return TileQueue;\n}(PriorityQueue));\nexport default TileQueue;\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(frameState, tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n        return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n        return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels between\n    // the center of the tile and the center of the viewport.  The factor of 65536\n    // means that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var center = frameState.viewState.center;\n    var deltaX = tileCenter[0] - center[0];\n    var deltaY = tileCenter[1] - center[1];\n    return (65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution);\n}\n//# sourceMappingURL=TileQueue.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/PluggableMap\n */\nimport BaseObject, { getChangeEventType } from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, { getTilePriority } from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport { DEVICE_PIXEL_RATIO, IMAGE_DECODE, PASSIVE_EVENT_LISTENERS, } from './has.js';\nimport { TRUE } from './functions.js';\nimport { apply as applyTransform, create as createTransform, } from './transform.js';\nimport { assert } from './asserts.js';\nimport { clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty, } from './extent.js';\nimport { fromUserCoordinate, toUserCoordinate } from './proj.js';\nimport { hasArea } from './size.js';\nimport { listen, unlistenByKey } from './events.js';\nimport { removeNode } from './dom.js';\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {Array<DeclutterItems>} declutterItems\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {number} layerIndex\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n/**\n * @typedef {Object} DeclutterItems\n * @property {Array<*>} items Declutter items of an executor.\n * @property {number} opacity Layer opacity.\n */\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /** @class */ (function (_super) {\n    __extends(PluggableMap, _super);\n    /**\n     * @param {MapOptions} options Map options.\n     */\n    function PluggableMap(options) {\n        var _this = _super.call(this) || this;\n        var optionsInternal = createOptionsInternal(options);\n        /** @private */\n        _this.boundHandleBrowserEvent_ = _this.handleBrowserEvent.bind(_this);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.maxTilesLoading_ =\n            options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ =\n            options.pixelRatio !== undefined\n                ? options.pixelRatio\n                : DEVICE_PIXEL_RATIO;\n        /**\n         * @private\n         * @type {*}\n         */\n        _this.postRenderTimeoutHandle_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.animationDelayKey_;\n        /**\n         * @private\n         */\n        _this.animationDelay_ = function () {\n            this.animationDelayKey_ = undefined;\n            this.renderFrame_(Date.now());\n        }.bind(_this);\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.coordinateToPixelTransform_ = createTransform();\n        /**\n         * @private\n         * @type {import(\"./transform.js\").Transform}\n         */\n        _this.pixelToCoordinateTransform_ = createTransform();\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.frameIndex_ = 0;\n        /**\n         * @private\n         * @type {?FrameState}\n         */\n        _this.frameState_ = null;\n        /**\n         * The extent at the previous 'moveend' event.\n         * @private\n         * @type {import(\"./extent.js\").Extent}\n         */\n        _this.previousExtent_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewPropertyListenerKey_ = null;\n        /**\n         * @private\n         * @type {?import(\"./events.js\").EventsKey}\n         */\n        _this.viewChangeListenerKey_ = null;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.layerGroupPropertyListenerKeys_ = null;\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.viewport_ = document.createElement('div');\n        _this.viewport_.className =\n            'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n        _this.viewport_.style.position = 'relative';\n        _this.viewport_.style.overflow = 'hidden';\n        _this.viewport_.style.width = '100%';\n        _this.viewport_.style.height = '100%';\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainer_ = document.createElement('div');\n        _this.overlayContainer_.style.position = 'absolute';\n        _this.overlayContainer_.style.zIndex = '0';\n        _this.overlayContainer_.style.width = '100%';\n        _this.overlayContainer_.style.height = '100%';\n        _this.overlayContainer_.style.pointerEvents = 'none';\n        _this.overlayContainer_.className = 'ol-overlaycontainer';\n        _this.viewport_.appendChild(_this.overlayContainer_);\n        /**\n         * @private\n         * @type {!HTMLElement}\n         */\n        _this.overlayContainerStopEvent_ = document.createElement('div');\n        _this.overlayContainerStopEvent_.style.position = 'absolute';\n        _this.overlayContainerStopEvent_.style.zIndex = '0';\n        _this.overlayContainerStopEvent_.style.width = '100%';\n        _this.overlayContainerStopEvent_.style.height = '100%';\n        _this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n        _this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n        _this.viewport_.appendChild(_this.overlayContainerStopEvent_);\n        /**\n         * @private\n         * @type {MapBrowserEventHandler}\n         */\n        _this.mapBrowserEventHandler_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.moveTolerance_ = options.moveTolerance;\n        /**\n         * @private\n         * @type {HTMLElement|Document}\n         */\n        _this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n        /**\n         * @private\n         * @type {?Array<import(\"./events.js\").EventsKey>}\n         */\n        _this.keyHandlerKeys_ = null;\n        /**\n         * @type {Collection<import(\"./control/Control.js\").default>}\n         * @protected\n         */\n        _this.controls = optionsInternal.controls || new Collection();\n        /**\n         * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n         * @protected\n         */\n        _this.interactions = optionsInternal.interactions || new Collection();\n        /**\n         * @type {Collection<import(\"./Overlay.js\").default>}\n         * @private\n         */\n        _this.overlays_ = optionsInternal.overlays;\n        /**\n         * A lookup of overlays by id.\n         * @private\n         * @type {Object<string, import(\"./Overlay.js\").default>}\n         */\n        _this.overlayIdIndex_ = {};\n        /**\n         * @type {import(\"./renderer/Map.js\").default}\n         * @private\n         */\n        _this.renderer_ = null;\n        /**\n         * @type {undefined|function(Event): void}\n         * @private\n         */\n        _this.handleResize_;\n        /**\n         * @private\n         * @type {!Array<PostRenderFunction>}\n         */\n        _this.postRenderFunctions_ = [];\n        /**\n         * @private\n         * @type {TileQueue}\n         */\n        _this.tileQueue_ = new TileQueue(_this.getTilePriority.bind(_this), _this.handleTileChange_.bind(_this));\n        _this.addEventListener(getChangeEventType(MapProperty.LAYERGROUP), _this.handleLayerGroupChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.VIEW), _this.handleViewChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.SIZE), _this.handleSizeChanged_);\n        _this.addEventListener(getChangeEventType(MapProperty.TARGET), _this.handleTargetChanged_);\n        // setProperties will trigger the rendering of the map if the map\n        // is \"defined\" already.\n        _this.setProperties(optionsInternal.values);\n        _this.controls.forEach(\n        /**\n         * @param {import(\"./control/Control.js\").default} control Control.\n         * @this {PluggableMap}\n         */\n        function (control) {\n            control.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.controls.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.interactions.forEach(\n        /**\n         * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n         * @this {PluggableMap}\n         */\n        function (interaction) {\n            interaction.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(this);\n        }.bind(_this));\n        _this.interactions.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            event.element.setMap(null);\n        }.bind(_this));\n        _this.overlays_.forEach(_this.addOverlayInternal_.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.ADD, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            this.addOverlayInternal_(\n            /** @type {import(\"./Overlay.js\").default} */ (event.element));\n        }.bind(_this));\n        _this.overlays_.addEventListener(CollectionEventType.REMOVE, \n        /**\n         * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n         */\n        function (event) {\n            var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n            var id = overlay.getId();\n            if (id !== undefined) {\n                delete this.overlayIdIndex_[id.toString()];\n            }\n            event.element.setMap(null);\n        }.bind(_this));\n        return _this;\n    }\n    /**\n     * @abstract\n     * @return {import(\"./renderer/Map.js\").default} The map renderer\n     */\n    PluggableMap.prototype.createRenderer = function () {\n        throw new Error('Use a map type that has a createRenderer method');\n    };\n    /**\n     * Add the given control to the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @api\n     */\n    PluggableMap.prototype.addControl = function (control) {\n        this.getControls().push(control);\n    };\n    /**\n     * Add the given interaction to the map. If you want to add an interaction\n     * at another point of the collection use `getInteraction()` and the methods\n     * available on {@link module:ol/Collection~Collection}. This can be used to\n     * stop the event propagation from the handleEvent function. The interactions\n     * get to handle the events in the reverse order of this collection.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n     * @api\n     */\n    PluggableMap.prototype.addInteraction = function (interaction) {\n        this.getInteractions().push(interaction);\n    };\n    /**\n     * Adds the given layer to the top of this map. If you want to add a layer\n     * elsewhere in the stack, use `getLayers()` and the methods available on\n     * {@link module:ol/Collection~Collection}.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @api\n     */\n    PluggableMap.prototype.addLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        layers.push(layer);\n    };\n    /**\n     * Add the given overlay to the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @api\n     */\n    PluggableMap.prototype.addOverlay = function (overlay) {\n        this.getOverlays().push(overlay);\n    };\n    /**\n     * This deals with map's overlay collection changes.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @private\n     */\n    PluggableMap.prototype.addOverlayInternal_ = function (overlay) {\n        var id = overlay.getId();\n        if (id !== undefined) {\n            this.overlayIdIndex_[id.toString()] = overlay;\n        }\n        overlay.setMap(this);\n    };\n    /**\n     *\n     * Clean up.\n     */\n    PluggableMap.prototype.disposeInternal = function () {\n        this.setTarget(null);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Detect features that intersect a pixel on the viewport, and execute a\n     * callback with each intersecting feature. Layers included in the detection can\n     * be configured through the `layerFilter` option in `opt_options`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n     *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n     *     called with two arguments. The first argument is one\n     *     {@link module:ol/Feature feature} or\n     *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n     *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n     *     unmanaged layers. To stop detection, callback functions can return a\n     *     truthy value.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachFeatureAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var hitTolerance = opt_options.hitTolerance !== undefined\n            ? opt_options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.forEachFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, callback, null, layerFilter, null);\n    };\n    /**\n     * Get all features that intersect a pixel on the viewport.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n     * an empty array if none were found.\n     * @api\n     */\n    PluggableMap.prototype.getFeaturesAtPixel = function (pixel, opt_options) {\n        var features = [];\n        this.forEachFeatureAtPixel(pixel, function (feature) {\n            features.push(feature);\n        }, opt_options);\n        return features;\n    };\n    /**\n     * Detect layers that have a color value at a pixel on the viewport, and\n     * execute a callback with each matching layer. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     *\n     * Note: this may give false positives unless the map layers have had different `className`\n     * properties assigned to them.\n     *\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n     *     Layer callback. This callback will receive two arguments: first is the\n     *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n     *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n     *     that do not currently support this argument. To stop detection, callback\n     *     functions can return a truthy value.\n     * @param {AtPixelOptions=} opt_options Configuration options.\n     * @return {T|undefined} Callback result, i.e. the return value of last\n     * callback execution, or the first truthy callback return value.\n     * @template S,T\n     * @api\n     */\n    PluggableMap.prototype.forEachLayerAtPixel = function (pixel, callback, opt_options) {\n        if (!this.frameState_) {\n            return;\n        }\n        var options = opt_options || {};\n        var hitTolerance = options.hitTolerance !== undefined\n            ? options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var layerFilter = options.layerFilter || TRUE;\n        return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n    };\n    /**\n     * Detect if features intersect a pixel on the viewport. Layers included in the\n     * detection can be configured through `opt_layerFilter`.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n     * @param {AtPixelOptions=} opt_options Optional options.\n     * @return {boolean} Is there a feature at the given pixel?\n     * @api\n     */\n    PluggableMap.prototype.hasFeatureAtPixel = function (pixel, opt_options) {\n        if (!this.frameState_) {\n            return false;\n        }\n        var coordinate = this.getCoordinateFromPixelInternal(pixel);\n        opt_options = opt_options !== undefined ? opt_options : {};\n        var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n        var hitTolerance = opt_options.hitTolerance !== undefined\n            ? opt_options.hitTolerance * this.frameState_.pixelRatio\n            : 0;\n        var checkWrapped = opt_options.checkWrapped !== false;\n        return this.renderer_.hasFeatureAtCoordinate(coordinate, this.frameState_, hitTolerance, checkWrapped, layerFilter, null);\n    };\n    /**\n     * Returns the coordinate in user projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     * @api\n     */\n    PluggableMap.prototype.getEventCoordinate = function (event) {\n        return this.getCoordinateFromPixel(this.getEventPixel(event));\n    };\n    /**\n     * Returns the coordinate in view projection for a browser event.\n     * @param {MouseEvent} event Event.\n     * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n     */\n    PluggableMap.prototype.getEventCoordinateInternal = function (event) {\n        return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n    };\n    /**\n     * Returns the map pixel position for a browser event relative to the viewport.\n     * @param {UIEvent} event Event.\n     * @return {import(\"./pixel.js\").Pixel} Pixel.\n     * @api\n     */\n    PluggableMap.prototype.getEventPixel = function (event) {\n        var viewportPosition = this.viewport_.getBoundingClientRect();\n        var eventPosition = \n        //FIXME Are we really calling this with a TouchEvent anywhere?\n        'changedTouches' in event\n            ? /** @type {TouchEvent} */ (event).changedTouches[0]\n            : /** @type {MouseEvent} */ (event);\n        return [\n            eventPosition.clientX - viewportPosition.left,\n            eventPosition.clientY - viewportPosition.top,\n        ];\n    };\n    /**\n     * Get the target in which this map is rendered.\n     * Note that this returns what is entered as an option or in setTarget:\n     * if that was an element, it returns an element; if a string, it returns that.\n     * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n     *     map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getTarget = function () {\n        return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n    };\n    /**\n     * Get the DOM element into which this map is rendered. In contrast to\n     * `getTarget` this method always return an `Element`, or `null` if the\n     * map has no target.\n     * @return {HTMLElement} The element that the map is rendered in.\n     * @api\n     */\n    PluggableMap.prototype.getTargetElement = function () {\n        var target = this.getTarget();\n        if (target !== undefined) {\n            return typeof target === 'string'\n                ? document.getElementById(target)\n                : target;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * user projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     * @api\n     */\n    PluggableMap.prototype.getCoordinateFromPixel = function (pixel) {\n        return toUserCoordinate(this.getCoordinateFromPixelInternal(pixel), this.getView().getProjection());\n    };\n    /**\n     * Get the coordinate for a given pixel.  This returns a coordinate in the\n     * map view projection.\n     * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n     * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n     */\n    PluggableMap.prototype.getCoordinateFromPixelInternal = function (pixel) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n        }\n    };\n    /**\n     * Get the map controls. Modifying this collection changes the controls\n     * associated with the map.\n     * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n     * @api\n     */\n    PluggableMap.prototype.getControls = function () {\n        return this.controls;\n    };\n    /**\n     * Get the map overlays. Modifying this collection changes the overlays\n     * associated with the map.\n     * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n     * @api\n     */\n    PluggableMap.prototype.getOverlays = function () {\n        return this.overlays_;\n    };\n    /**\n     * Get an overlay by its identifier (the value returned by overlay.getId()).\n     * Note that the index treats string and numeric identifiers as the same. So\n     * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n     * @param {string|number} id Overlay identifier.\n     * @return {import(\"./Overlay.js\").default} Overlay.\n     * @api\n     */\n    PluggableMap.prototype.getOverlayById = function (id) {\n        var overlay = this.overlayIdIndex_[id.toString()];\n        return overlay !== undefined ? overlay : null;\n    };\n    /**\n     * Get the map interactions. Modifying this collection changes the interactions\n     * associated with the map.\n     *\n     * Interactions are used for e.g. pan, zoom and rotate.\n     * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n     * @api\n     */\n    PluggableMap.prototype.getInteractions = function () {\n        return this.interactions;\n    };\n    /**\n     * Get the layergroup associated with this map.\n     * @return {LayerGroup} A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getLayerGroup = function () {\n        return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n    };\n    /**\n     * Get the collection of layers associated with this map.\n     * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n     * @api\n     */\n    PluggableMap.prototype.getLayers = function () {\n        var layers = this.getLayerGroup().getLayers();\n        return layers;\n    };\n    /**\n     * @return {boolean} Layers have sources that are still loading.\n     */\n    PluggableMap.prototype.getLoading = function () {\n        var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layer = layerStatesArray[i].layer;\n            var source = /** @type {import(\"./layer/Layer.js\").default} */ (layer).getSource();\n            if (source && source.loading) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the user\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.getPixelFromCoordinate = function (coordinate) {\n        var viewCoordinate = fromUserCoordinate(coordinate, this.getView().getProjection());\n        return this.getPixelFromCoordinateInternal(viewCoordinate);\n    };\n    /**\n     * Get the pixel for a coordinate.  This takes a coordinate in the map view\n     * projection and returns the corresponding pixel.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n     * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n     */\n    PluggableMap.prototype.getPixelFromCoordinateInternal = function (coordinate) {\n        var frameState = this.frameState_;\n        if (!frameState) {\n            return null;\n        }\n        else {\n            return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n        }\n    };\n    /**\n     * Get the map renderer.\n     * @return {import(\"./renderer/Map.js\").default} Renderer\n     */\n    PluggableMap.prototype.getRenderer = function () {\n        return this.renderer_;\n    };\n    /**\n     * Get the size of this map.\n     * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getSize = function () {\n        return /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE));\n    };\n    /**\n     * Get the view associated with this map. A view manages properties such as\n     * center and resolution.\n     * @return {View} The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.getView = function () {\n        return /** @type {View} */ (this.get(MapProperty.VIEW));\n    };\n    /**\n     * Get the element that serves as the map viewport.\n     * @return {HTMLElement} Viewport.\n     * @api\n     */\n    PluggableMap.prototype.getViewport = function () {\n        return this.viewport_;\n    };\n    /**\n     * Get the element that serves as the container for overlays.  Elements added to\n     * this container will let mousedown and touchstart events through to the map,\n     * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n     * events.\n     * @return {!HTMLElement} The map's overlay container.\n     */\n    PluggableMap.prototype.getOverlayContainer = function () {\n        return this.overlayContainer_;\n    };\n    /**\n     * Get the element that serves as a container for overlays that don't allow\n     * event propagation. Elements added to this container won't let mousedown and\n     * touchstart events through to the map, so clicks and gestures on an overlay\n     * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n     * @return {!HTMLElement} The map's overlay container that stops events.\n     */\n    PluggableMap.prototype.getOverlayContainerStopEvent = function () {\n        return this.overlayContainerStopEvent_;\n    };\n    /**\n     * @param {import(\"./Tile.js\").default} tile Tile.\n     * @param {string} tileSourceKey Tile source key.\n     * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n     * @param {number} tileResolution Tile resolution.\n     * @return {number} Tile priority.\n     */\n    PluggableMap.prototype.getTilePriority = function (tile, tileSourceKey, tileCenter, tileResolution) {\n        return getTilePriority(this.frameState_, tile, tileSourceKey, tileCenter, tileResolution);\n    };\n    /**\n     * @param {UIEvent} browserEvent Browser event.\n     * @param {string=} opt_type Type.\n     */\n    PluggableMap.prototype.handleBrowserEvent = function (browserEvent, opt_type) {\n        var type = opt_type || browserEvent.type;\n        var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n        this.handleMapBrowserEvent(mapBrowserEvent);\n    };\n    /**\n     * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n     */\n    PluggableMap.prototype.handleMapBrowserEvent = function (mapBrowserEvent) {\n        if (!this.frameState_) {\n            // With no view defined, we cannot translate pixels into geographical\n            // coordinates so interactions cannot be used.\n            return;\n        }\n        var originalEvent = /** @type {PointerEvent} */ (mapBrowserEvent.originalEvent);\n        var eventType = originalEvent.type;\n        if (eventType === PointerEventType.POINTERDOWN ||\n            eventType === EventType.WHEEL ||\n            eventType === EventType.KEYDOWN) {\n            var rootNode = this.viewport_.getRootNode\n                ? this.viewport_.getRootNode()\n                : document;\n            var target = rootNode === document\n                ? /** @type {Node} */ (originalEvent.target)\n                : /** @type {ShadowRoot} */ (rootNode).elementFromPoint(originalEvent.clientX, originalEvent.clientY);\n            if (\n            // Abort if the target is a child of the container for elements whose events are not meant\n            // to be handled by map interactions.\n            this.overlayContainerStopEvent_.contains(target) ||\n                // Abort if the event target is a child of the container that is no longer in the page.\n                // It's possible for the target to no longer be in the page if it has been removed in an\n                // event listener, this might happen in a Control that recreates it's content based on\n                // user interaction either manually or via a render in something like https://reactjs.org/\n                !(rootNode === document ? document.documentElement : rootNode).contains(target)) {\n                return;\n            }\n        }\n        mapBrowserEvent.frameState = this.frameState_;\n        var interactionsArray = this.getInteractions().getArray();\n        if (this.dispatchEvent(mapBrowserEvent) !== false) {\n            for (var i = interactionsArray.length - 1; i >= 0; i--) {\n                var interaction = interactionsArray[i];\n                if (!interaction.getActive()) {\n                    continue;\n                }\n                var cont = interaction.handleEvent(mapBrowserEvent);\n                if (!cont) {\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * @protected\n     */\n    PluggableMap.prototype.handlePostRender = function () {\n        var frameState = this.frameState_;\n        // Manage the tile queue\n        // Image loads are expensive and a limited resource, so try to use them\n        // efficiently:\n        // * When the view is static we allow a large number of parallel tile loads\n        //   to complete the frame as quickly as possible.\n        // * When animating or interacting, image loads can cause janks, so we reduce\n        //   the maximum number of loads per frame and limit the number of parallel\n        //   tile loads to remain reactive to view changes and to reduce the chance of\n        //   loading tiles that will quickly disappear from view.\n        var tileQueue = this.tileQueue_;\n        if (!tileQueue.isEmpty()) {\n            var maxTotalLoading = this.maxTilesLoading_;\n            var maxNewLoads = maxTotalLoading;\n            if (frameState) {\n                var hints = frameState.viewHints;\n                if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n                    var lowOnFrameBudget = !IMAGE_DECODE && Date.now() - frameState.time > 8;\n                    maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n                    maxNewLoads = lowOnFrameBudget ? 0 : 2;\n                }\n            }\n            if (tileQueue.getTilesLoading() < maxTotalLoading) {\n                tileQueue.reprioritize(); // FIXME only call if view has changed\n                tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n            }\n        }\n        if (frameState &&\n            this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n            !frameState.animate &&\n            !this.tileQueue_.getTilesLoading() &&\n            !this.getLoading()) {\n            this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n        }\n        var postRenderFunctions = this.postRenderFunctions_;\n        for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n            postRenderFunctions[i](this, frameState);\n        }\n        postRenderFunctions.length = 0;\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleSizeChanged_ = function () {\n        if (this.getView() && !this.getView().getAnimating()) {\n            this.getView().resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTargetChanged_ = function () {\n        // target may be undefined, null, a string or an Element.\n        // If it's a string we convert it to an Element before proceeding.\n        // If it's not now an Element we remove the viewport from the DOM.\n        // If it's an Element we append the viewport element to it.\n        var targetElement;\n        if (this.getTarget()) {\n            targetElement = this.getTargetElement();\n        }\n        if (this.mapBrowserEventHandler_) {\n            for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n                unlistenByKey(this.keyHandlerKeys_[i]);\n            }\n            this.keyHandlerKeys_ = null;\n            this.viewport_.removeEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_);\n            this.viewport_.removeEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_);\n            if (this.handleResize_ !== undefined) {\n                removeEventListener(EventType.RESIZE, this.handleResize_, false);\n                this.handleResize_ = undefined;\n            }\n            this.mapBrowserEventHandler_.dispose();\n            this.mapBrowserEventHandler_ = null;\n            removeNode(this.viewport_);\n        }\n        if (!targetElement) {\n            if (this.renderer_) {\n                clearTimeout(this.postRenderTimeoutHandle_);\n                this.postRenderFunctions_.length = 0;\n                this.renderer_.dispose();\n                this.renderer_ = null;\n            }\n            if (this.animationDelayKey_) {\n                cancelAnimationFrame(this.animationDelayKey_);\n                this.animationDelayKey_ = undefined;\n            }\n        }\n        else {\n            targetElement.appendChild(this.viewport_);\n            if (!this.renderer_) {\n                this.renderer_ = this.createRenderer();\n            }\n            this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, this.moveTolerance_);\n            for (var key in MapBrowserEventType) {\n                this.mapBrowserEventHandler_.addEventListener(MapBrowserEventType[key], this.handleMapBrowserEvent.bind(this));\n            }\n            this.viewport_.addEventListener(EventType.CONTEXTMENU, this.boundHandleBrowserEvent_, false);\n            this.viewport_.addEventListener(EventType.WHEEL, this.boundHandleBrowserEvent_, PASSIVE_EVENT_LISTENERS ? { passive: false } : false);\n            var keyboardEventTarget = !this.keyboardEventTarget_\n                ? targetElement\n                : this.keyboardEventTarget_;\n            this.keyHandlerKeys_ = [\n                listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n                listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this),\n            ];\n            if (!this.handleResize_) {\n                this.handleResize_ = this.updateSize.bind(this);\n                window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n            }\n        }\n        this.updateSize();\n        // updateSize calls setSize, so no need to call this.render\n        // ourselves here.\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleTileChange_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewPropertyChanged_ = function () {\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleViewChanged_ = function () {\n        if (this.viewPropertyListenerKey_) {\n            unlistenByKey(this.viewPropertyListenerKey_);\n            this.viewPropertyListenerKey_ = null;\n        }\n        if (this.viewChangeListenerKey_) {\n            unlistenByKey(this.viewChangeListenerKey_);\n            this.viewChangeListenerKey_ = null;\n        }\n        var view = this.getView();\n        if (view) {\n            this.updateViewportSize_();\n            this.viewPropertyListenerKey_ = listen(view, ObjectEventType.PROPERTYCHANGE, this.handleViewPropertyChanged_, this);\n            this.viewChangeListenerKey_ = listen(view, EventType.CHANGE, this.handleViewPropertyChanged_, this);\n            view.resolveConstraints(0);\n        }\n        this.render();\n    };\n    /**\n     * @private\n     */\n    PluggableMap.prototype.handleLayerGroupChanged_ = function () {\n        if (this.layerGroupPropertyListenerKeys_) {\n            this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n            this.layerGroupPropertyListenerKeys_ = null;\n        }\n        var layerGroup = this.getLayerGroup();\n        if (layerGroup) {\n            this.layerGroupPropertyListenerKeys_ = [\n                listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n                listen(layerGroup, EventType.CHANGE, this.render, this),\n            ];\n        }\n        this.render();\n    };\n    /**\n     * @return {boolean} Is rendered.\n     */\n    PluggableMap.prototype.isRendered = function () {\n        return !!this.frameState_;\n    };\n    /**\n     * Requests an immediate render in a synchronous manner.\n     * @api\n     */\n    PluggableMap.prototype.renderSync = function () {\n        if (this.animationDelayKey_) {\n            cancelAnimationFrame(this.animationDelayKey_);\n        }\n        this.animationDelay_();\n    };\n    /**\n     * Redraws all text after new fonts have loaded\n     */\n    PluggableMap.prototype.redrawText = function () {\n        var layerStates = this.getLayerGroup().getLayerStatesArray();\n        for (var i = 0, ii = layerStates.length; i < ii; ++i) {\n            var layer = layerStates[i].layer;\n            if (layer.hasRenderer()) {\n                layer.getRenderer().handleFontsChanged();\n            }\n        }\n    };\n    /**\n     * Request a map rendering (at the next animation frame).\n     * @api\n     */\n    PluggableMap.prototype.render = function () {\n        if (this.renderer_ && this.animationDelayKey_ === undefined) {\n            this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n        }\n    };\n    /**\n     * Remove the given control from the map.\n     * @param {import(\"./control/Control.js\").default} control Control.\n     * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n     *     if the control was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeControl = function (control) {\n        return this.getControls().remove(control);\n    };\n    /**\n     * Remove the given interaction from the map.\n     * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n     * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n     *     undefined if the interaction was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeInteraction = function (interaction) {\n        return this.getInteractions().remove(interaction);\n    };\n    /**\n     * Removes the given layer from the map.\n     * @param {import(\"./layer/Base.js\").default} layer Layer.\n     * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n     *     layer was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeLayer = function (layer) {\n        var layers = this.getLayerGroup().getLayers();\n        return layers.remove(layer);\n    };\n    /**\n     * Remove the given overlay from the map.\n     * @param {import(\"./Overlay.js\").default} overlay Overlay.\n     * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n     *     if the overlay was not found).\n     * @api\n     */\n    PluggableMap.prototype.removeOverlay = function (overlay) {\n        return this.getOverlays().remove(overlay);\n    };\n    /**\n     * @param {number} time Time.\n     * @private\n     */\n    PluggableMap.prototype.renderFrame_ = function (time) {\n        var size = this.getSize();\n        var view = this.getView();\n        var previousFrameState = this.frameState_;\n        /** @type {?FrameState} */\n        var frameState = null;\n        if (size !== undefined && hasArea(size) && view && view.isDef()) {\n            var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n            var viewState = view.getState();\n            frameState = {\n                animate: false,\n                coordinateToPixelTransform: this.coordinateToPixelTransform_,\n                declutterItems: previousFrameState\n                    ? previousFrameState.declutterItems\n                    : [],\n                extent: getForViewAndSize(viewState.center, viewState.resolution, viewState.rotation, size),\n                index: this.frameIndex_++,\n                layerIndex: 0,\n                layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n                pixelRatio: this.pixelRatio_,\n                pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n                postRenderFunctions: [],\n                size: size,\n                tileQueue: this.tileQueue_,\n                time: time,\n                usedTiles: {},\n                viewState: viewState,\n                viewHints: viewHints,\n                wantedTiles: {},\n            };\n        }\n        this.frameState_ = frameState;\n        this.renderer_.renderFrame(frameState);\n        if (frameState) {\n            if (frameState.animate) {\n                this.render();\n            }\n            Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n            if (previousFrameState) {\n                var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                        !equals(frameState.extent, this.previousExtent_));\n                if (moveStart) {\n                    this.dispatchEvent(new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n                    this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n                }\n            }\n            var idle = this.previousExtent_ &&\n                !frameState.viewHints[ViewHint.ANIMATING] &&\n                !frameState.viewHints[ViewHint.INTERACTING] &&\n                !equals(frameState.extent, this.previousExtent_);\n            if (idle) {\n                this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n                clone(frameState.extent, this.previousExtent_);\n            }\n        }\n        this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n        this.postRenderTimeoutHandle_ = setTimeout(this.handlePostRender.bind(this), 0);\n    };\n    /**\n     * Sets the layergroup of this map.\n     * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setLayerGroup = function (layerGroup) {\n        this.set(MapProperty.LAYERGROUP, layerGroup);\n    };\n    /**\n     * Set the size of this map.\n     * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setSize = function (size) {\n        this.set(MapProperty.SIZE, size);\n    };\n    /**\n     * Set the target element to render this map into.\n     * @param {HTMLElement|string|undefined} target The Element or id of the Element\n     *     that the map is rendered in.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setTarget = function (target) {\n        this.set(MapProperty.TARGET, target);\n    };\n    /**\n     * Set the view for this map.\n     * @param {View} view The view that controls this map.\n     * @observable\n     * @api\n     */\n    PluggableMap.prototype.setView = function (view) {\n        this.set(MapProperty.VIEW, view);\n    };\n    /**\n     * Force a recalculation of the map viewport size.  This should be called when\n     * third-party code changes the size of the map viewport.\n     * @api\n     */\n    PluggableMap.prototype.updateSize = function () {\n        var targetElement = this.getTargetElement();\n        if (!targetElement) {\n            this.setSize(undefined);\n        }\n        else {\n            var computedStyle = getComputedStyle(targetElement);\n            this.setSize([\n                targetElement.offsetWidth -\n                    parseFloat(computedStyle['borderLeftWidth']) -\n                    parseFloat(computedStyle['paddingLeft']) -\n                    parseFloat(computedStyle['paddingRight']) -\n                    parseFloat(computedStyle['borderRightWidth']),\n                targetElement.offsetHeight -\n                    parseFloat(computedStyle['borderTopWidth']) -\n                    parseFloat(computedStyle['paddingTop']) -\n                    parseFloat(computedStyle['paddingBottom']) -\n                    parseFloat(computedStyle['borderBottomWidth']),\n            ]);\n        }\n        this.updateViewportSize_();\n    };\n    /**\n     * Recomputes the viewport size and save it on the view object (if any)\n     * @private\n     */\n    PluggableMap.prototype.updateViewportSize_ = function () {\n        var view = this.getView();\n        if (view) {\n            var size = undefined;\n            var computedStyle = getComputedStyle(this.viewport_);\n            if (computedStyle.width && computedStyle.height) {\n                size = [\n                    parseInt(computedStyle.width, 10),\n                    parseInt(computedStyle.height, 10),\n                ];\n            }\n            view.setViewportSize(size);\n        }\n    };\n    return PluggableMap;\n}(BaseObject));\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n    /**\n     * @type {HTMLElement|Document}\n     */\n    var keyboardEventTarget = null;\n    if (options.keyboardEventTarget !== undefined) {\n        keyboardEventTarget =\n            typeof options.keyboardEventTarget === 'string'\n                ? document.getElementById(options.keyboardEventTarget)\n                : options.keyboardEventTarget;\n    }\n    /**\n     * @type {Object<string, *>}\n     */\n    var values = {};\n    var layerGroup = options.layers &&\n        typeof ( /** @type {?} */(options.layers).getLayers) === 'function'\n        ? /** @type {LayerGroup} */ (options.layers)\n        : new LayerGroup({ layers: /** @type {Collection} */ (options.layers) });\n    values[MapProperty.LAYERGROUP] = layerGroup;\n    values[MapProperty.TARGET] = options.target;\n    values[MapProperty.VIEW] =\n        options.view !== undefined ? options.view : new View();\n    var controls;\n    if (options.controls !== undefined) {\n        if (Array.isArray(options.controls)) {\n            controls = new Collection(options.controls.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.controls).getArray) === 'function', 47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n            controls = /** @type {Collection} */ (options.controls);\n        }\n    }\n    var interactions;\n    if (options.interactions !== undefined) {\n        if (Array.isArray(options.interactions)) {\n            interactions = new Collection(options.interactions.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.interactions).getArray) ===\n                'function', 48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n            interactions = /** @type {Collection} */ (options.interactions);\n        }\n    }\n    var overlays;\n    if (options.overlays !== undefined) {\n        if (Array.isArray(options.overlays)) {\n            overlays = new Collection(options.overlays.slice());\n        }\n        else {\n            assert(typeof ( /** @type {?} */(options.overlays).getArray) === 'function', 49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n            overlays = options.overlays;\n        }\n    }\n    else {\n        overlays = new Collection();\n    }\n    return {\n        controls: controls,\n        interactions: interactions,\n        keyboardEventTarget: keyboardEventTarget,\n        overlays: overlays,\n        values: values,\n    };\n}\nexport default PluggableMap;\n//# sourceMappingURL=PluggableMap.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport { VOID } from '../functions.js';\nimport { listen, unlistenByKey } from '../events.js';\nimport { removeNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /** @class */ (function (_super) {\n    __extends(Control, _super);\n    /**\n     * @param {Options} options Control options.\n     */\n    function Control(options) {\n        var _this = _super.call(this) || this;\n        var element = options.element;\n        if (element && !options.target && !element.style.pointerEvents) {\n            element.style.pointerEvents = 'auto';\n        }\n        /**\n         * @protected\n         * @type {HTMLElement}\n         */\n        _this.element = element ? element : null;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.target_ = null;\n        /**\n         * @private\n         * @type {import(\"../PluggableMap.js\").default}\n         */\n        _this.map_ = null;\n        /**\n         * @protected\n         * @type {!Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.listenerKeys = [];\n        if (options.render) {\n            _this.render = options.render;\n        }\n        if (options.target) {\n            _this.setTarget(options.target);\n        }\n        return _this;\n    }\n    /**\n     * Clean up.\n     */\n    Control.prototype.disposeInternal = function () {\n        removeNode(this.element);\n        _super.prototype.disposeInternal.call(this);\n    };\n    /**\n     * Get the map associated with this control.\n     * @return {import(\"../PluggableMap.js\").default} Map.\n     * @api\n     */\n    Control.prototype.getMap = function () {\n        return this.map_;\n    };\n    /**\n     * Remove the control from its current map and attach it to the new map.\n     * Subclasses may set up event handlers to get notified about changes to\n     * the map here.\n     * @param {import(\"../PluggableMap.js\").default} map Map.\n     * @api\n     */\n    Control.prototype.setMap = function (map) {\n        if (this.map_) {\n            removeNode(this.element);\n        }\n        for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n            unlistenByKey(this.listenerKeys[i]);\n        }\n        this.listenerKeys.length = 0;\n        this.map_ = map;\n        if (this.map_) {\n            var target = this.target_\n                ? this.target_\n                : map.getOverlayContainerStopEvent();\n            target.appendChild(this.element);\n            if (this.render !== VOID) {\n                this.listenerKeys.push(listen(map, MapEventType.POSTRENDER, this.render, this));\n            }\n            map.render();\n        }\n    };\n    /**\n     * Renders the control.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @api\n     */\n    Control.prototype.render = function (mapEvent) { };\n    /**\n     * This function is used to set a target element for the control. It has no\n     * effect if it is called after the control has been added to the map (i.e.\n     * after `setMap` is called on the control). If no `target` is set in the\n     * options passed to the control constructor and if `setTarget` is not called\n     * then the control is added to the map's overlay container.\n     * @param {HTMLElement|string} target Target.\n     * @api\n     */\n    Control.prototype.setTarget = function (target) {\n        this.target_ =\n            typeof target === 'string' ? document.getElementById(target) : target;\n    };\n    return Control;\n}(BaseObject));\nexport default Control;\n//# sourceMappingURL=Control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { equals } from '../array.js';\nimport { inView } from '../layer/Layer.js';\nimport { removeChildren, replaceNode } from '../dom.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /** @class */ (function (_super) {\n    __extends(Attribution, _super);\n    /**\n     * @param {Options=} opt_options Attribution options.\n     */\n    function Attribution(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        /**\n         * @private\n         * @type {HTMLElement}\n         */\n        _this.ulElement_ = document.createElement('ul');\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsed_ =\n            options.collapsed !== undefined ? options.collapsed : true;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.overrideCollapsible_ = options.collapsible !== undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.collapsible_ =\n            options.collapsible !== undefined ? options.collapsible : true;\n        if (!_this.collapsible_) {\n            _this.collapsed_ = false;\n        }\n        var className = options.className !== undefined ? options.className : 'ol-attribution';\n        var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n        var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        if (typeof collapseLabel === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.collapseLabel_ = document.createElement('span');\n            _this.collapseLabel_.textContent = collapseLabel;\n        }\n        else {\n            _this.collapseLabel_ = collapseLabel;\n        }\n        var label = options.label !== undefined ? options.label : 'i';\n        if (typeof label === 'string') {\n            /**\n             * @private\n             * @type {HTMLElement}\n             */\n            _this.label_ = document.createElement('span');\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n        }\n        var activeLabel = _this.collapsible_ && !_this.collapsed_ ? _this.collapseLabel_ : _this.label_;\n        var button = document.createElement('button');\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(activeLabel);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className +\n            ' ' +\n            CLASS_UNSELECTABLE +\n            ' ' +\n            CLASS_CONTROL +\n            (_this.collapsed_ && _this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n            (_this.collapsible_ ? '' : ' ol-uncollapsible');\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(_this.ulElement_);\n        element.appendChild(button);\n        /**\n         * A list of currently rendered resolutions.\n         * @type {Array<string>}\n         * @private\n         */\n        _this.renderedAttributions_ = [];\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderedVisible_ = true;\n        return _this;\n    }\n    /**\n     * Collect a list of visible attributions and set the collapsible state.\n     * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     * @return {Array<string>} Attributions.\n     * @private\n     */\n    Attribution.prototype.collectSourceAttributions_ = function (frameState) {\n        /**\n         * Used to determine if an attribution already exists.\n         * @type {!Object<string, boolean>}\n         */\n        var lookup = {};\n        /**\n         * A list of visible attributions.\n         * @type {Array<string>}\n         */\n        var visibleAttributions = [];\n        var layerStatesArray = frameState.layerStatesArray;\n        for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n            var layerState = layerStatesArray[i];\n            if (!inView(layerState, frameState.viewState)) {\n                continue;\n            }\n            var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n            if (!source) {\n                continue;\n            }\n            var attributionGetter = source.getAttributions();\n            if (!attributionGetter) {\n                continue;\n            }\n            var attributions = attributionGetter(frameState);\n            if (!attributions) {\n                continue;\n            }\n            if (!this.overrideCollapsible_ &&\n                source.getAttributionsCollapsible() === false) {\n                this.setCollapsible(false);\n            }\n            if (Array.isArray(attributions)) {\n                for (var j = 0, jj = attributions.length; j < jj; ++j) {\n                    if (!(attributions[j] in lookup)) {\n                        visibleAttributions.push(attributions[j]);\n                        lookup[attributions[j]] = true;\n                    }\n                }\n            }\n            else {\n                if (!(attributions in lookup)) {\n                    visibleAttributions.push(attributions);\n                    lookup[attributions] = true;\n                }\n            }\n        }\n        return visibleAttributions;\n    };\n    /**\n     * @private\n     * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n     */\n    Attribution.prototype.updateElement_ = function (frameState) {\n        if (!frameState) {\n            if (this.renderedVisible_) {\n                this.element.style.display = 'none';\n                this.renderedVisible_ = false;\n            }\n            return;\n        }\n        var attributions = this.collectSourceAttributions_(frameState);\n        var visible = attributions.length > 0;\n        if (this.renderedVisible_ != visible) {\n            this.element.style.display = visible ? '' : 'none';\n            this.renderedVisible_ = visible;\n        }\n        if (equals(attributions, this.renderedAttributions_)) {\n            return;\n        }\n        removeChildren(this.ulElement_);\n        // append the attributions\n        for (var i = 0, ii = attributions.length; i < ii; ++i) {\n            var element = document.createElement('li');\n            element.innerHTML = attributions[i];\n            this.ulElement_.appendChild(element);\n        }\n        this.renderedAttributions_ = attributions;\n    };\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Attribution.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        this.handleToggle_();\n    };\n    /**\n     * @private\n     */\n    Attribution.prototype.handleToggle_ = function () {\n        this.element.classList.toggle(CLASS_COLLAPSED);\n        if (this.collapsed_) {\n            replaceNode(this.collapseLabel_, this.label_);\n        }\n        else {\n            replaceNode(this.label_, this.collapseLabel_);\n        }\n        this.collapsed_ = !this.collapsed_;\n    };\n    /**\n     * Return `true` if the attribution is collapsible, `false` otherwise.\n     * @return {boolean} True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.getCollapsible = function () {\n        return this.collapsible_;\n    };\n    /**\n     * Set whether the attribution should be collapsible.\n     * @param {boolean} collapsible True if the widget is collapsible.\n     * @api\n     */\n    Attribution.prototype.setCollapsible = function (collapsible) {\n        if (this.collapsible_ === collapsible) {\n            return;\n        }\n        this.collapsible_ = collapsible;\n        this.element.classList.toggle('ol-uncollapsible');\n        if (!collapsible && this.collapsed_) {\n            this.handleToggle_();\n        }\n    };\n    /**\n     * Collapse or expand the attribution according to the passed parameter. Will\n     * not do anything if the attribution isn't collapsible or if the current\n     * collapsed state is already the one requested.\n     * @param {boolean} collapsed True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.setCollapsed = function (collapsed) {\n        if (!this.collapsible_ || this.collapsed_ === collapsed) {\n            return;\n        }\n        this.handleToggle_();\n    };\n    /**\n     * Return `true` when the attribution is currently collapsed or `false`\n     * otherwise.\n     * @return {boolean} True if the widget is collapsed.\n     * @api\n     */\n    Attribution.prototype.getCollapsed = function () {\n        return this.collapsed_;\n    };\n    /**\n     * Update the attribution element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Attribution.prototype.render = function (mapEvent) {\n        this.updateElement_(mapEvent.frameState);\n    };\n    return Attribution;\n}(Control));\nexport default Attribution;\n//# sourceMappingURL=Attribution.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /** @class */ (function (_super) {\n    __extends(Rotate, _super);\n    /**\n     * @param {Options=} opt_options Rotate options.\n     */\n    function Rotate(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            render: options.render,\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-rotate';\n        var label = options.label !== undefined ? options.label : '\\u21E7';\n        /**\n         * @type {HTMLElement}\n         * @private\n         */\n        _this.label_ = null;\n        if (typeof label === 'string') {\n            _this.label_ = document.createElement('span');\n            _this.label_.className = 'ol-compass';\n            _this.label_.textContent = label;\n        }\n        else {\n            _this.label_ = label;\n            _this.label_.classList.add('ol-compass');\n        }\n        var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n        var button = document.createElement('button');\n        button.className = className + '-reset';\n        button.setAttribute('type', 'button');\n        button.title = tipLabel;\n        button.appendChild(_this.label_);\n        button.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(button);\n        _this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        _this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.rotation_ = undefined;\n        if (_this.autoHide_) {\n            _this.element.classList.add(CLASS_HIDDEN);\n        }\n        return _this;\n    }\n    /**\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Rotate.prototype.handleClick_ = function (event) {\n        event.preventDefault();\n        if (this.callResetNorth_ !== undefined) {\n            this.callResetNorth_();\n        }\n        else {\n            this.resetNorth_();\n        }\n    };\n    /**\n     * @private\n     */\n    Rotate.prototype.resetNorth_ = function () {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var rotation = view.getRotation();\n        if (rotation !== undefined) {\n            if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n                view.animate({\n                    rotation: 0,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setRotation(0);\n            }\n        }\n    };\n    /**\n     * Update the rotate control element.\n     * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n     * @override\n     */\n    Rotate.prototype.render = function (mapEvent) {\n        var frameState = mapEvent.frameState;\n        if (!frameState) {\n            return;\n        }\n        var rotation = frameState.viewState.rotation;\n        if (rotation != this.rotation_) {\n            var transform = 'rotate(' + rotation + 'rad)';\n            if (this.autoHide_) {\n                var contains = this.element.classList.contains(CLASS_HIDDEN);\n                if (!contains && rotation === 0) {\n                    this.element.classList.add(CLASS_HIDDEN);\n                }\n                else if (contains && rotation !== 0) {\n                    this.element.classList.remove(CLASS_HIDDEN);\n                }\n            }\n            this.label_.style.transform = transform;\n        }\n        this.rotation_ = rotation;\n    };\n    return Rotate;\n}(Control));\nexport default Rotate;\n//# sourceMappingURL=Rotate.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport { CLASS_CONTROL, CLASS_UNSELECTABLE } from '../css.js';\nimport { easeOut } from '../easing.js';\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /** @class */ (function (_super) {\n    __extends(Zoom, _super);\n    /**\n     * @param {Options=} opt_options Zoom options.\n     */\n    function Zoom(opt_options) {\n        var _this = this;\n        var options = opt_options ? opt_options : {};\n        _this = _super.call(this, {\n            element: document.createElement('div'),\n            target: options.target,\n        }) || this;\n        var className = options.className !== undefined ? options.className : 'ol-zoom';\n        var delta = options.delta !== undefined ? options.delta : 1;\n        var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n        var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n        var zoomInTipLabel = options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n        var zoomOutTipLabel = options.zoomOutTipLabel !== undefined\n            ? options.zoomOutTipLabel\n            : 'Zoom out';\n        var inElement = document.createElement('button');\n        inElement.className = className + '-in';\n        inElement.setAttribute('type', 'button');\n        inElement.title = zoomInTipLabel;\n        inElement.appendChild(typeof zoomInLabel === 'string'\n            ? document.createTextNode(zoomInLabel)\n            : zoomInLabel);\n        inElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, delta), false);\n        var outElement = document.createElement('button');\n        outElement.className = className + '-out';\n        outElement.setAttribute('type', 'button');\n        outElement.title = zoomOutTipLabel;\n        outElement.appendChild(typeof zoomOutLabel === 'string'\n            ? document.createTextNode(zoomOutLabel)\n            : zoomOutLabel);\n        outElement.addEventListener(EventType.CLICK, _this.handleClick_.bind(_this, -delta), false);\n        var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n        var element = _this.element;\n        element.className = cssClasses;\n        element.appendChild(inElement);\n        element.appendChild(outElement);\n        /**\n         * @type {number}\n         * @private\n         */\n        _this.duration_ = options.duration !== undefined ? options.duration : 250;\n        return _this;\n    }\n    /**\n     * @param {number} delta Zoom delta.\n     * @param {MouseEvent} event The event to handle\n     * @private\n     */\n    Zoom.prototype.handleClick_ = function (delta, event) {\n        event.preventDefault();\n        this.zoomByDelta_(delta);\n    };\n    /**\n     * @param {number} delta Zoom delta.\n     * @private\n     */\n    Zoom.prototype.zoomByDelta_ = function (delta) {\n        var map = this.getMap();\n        var view = map.getView();\n        if (!view) {\n            // the map does not have a view, so we can't act\n            // upon it\n            return;\n        }\n        var currentZoom = view.getZoom();\n        if (currentZoom !== undefined) {\n            var newZoom = view.getConstrainedZoom(currentZoom + delta);\n            if (this.duration_ > 0) {\n                if (view.getAnimating()) {\n                    view.cancelAnimations();\n                }\n                view.animate({\n                    zoom: newZoom,\n                    duration: this.duration_,\n                    easing: easeOut,\n                });\n            }\n            else {\n                view.setZoom(newZoom);\n            }\n        }\n    };\n    return Zoom;\n}(Control));\nexport default Zoom;\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\nexport { default as Attribution } from './control/Attribution.js';\nexport { default as Control } from './control/Control.js';\nexport { default as FullScreen } from './control/FullScreen.js';\nexport { default as MousePosition } from './control/MousePosition.js';\nexport { default as OverviewMap } from './control/OverviewMap.js';\nexport { default as Rotate } from './control/Rotate.js';\nexport { default as ScaleLine } from './control/ScaleLine.js';\nexport { default as Zoom } from './control/Zoom.js';\nexport { default as ZoomSlider } from './control/ZoomSlider.js';\nexport { default as ZoomToExtent } from './control/ZoomToExtent.js';\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n    var options = opt_options ? opt_options : {};\n    var controls = new Collection();\n    var zoomControl = options.zoom !== undefined ? options.zoom : true;\n    if (zoomControl) {\n        controls.push(new Zoom(options.zoomOptions));\n    }\n    var rotateControl = options.rotate !== undefined ? options.rotate : true;\n    if (rotateControl) {\n        controls.push(new Rotate(options.rotateOptions));\n    }\n    var attributionControl = options.attribution !== undefined ? options.attribution : true;\n    if (attributionControl) {\n        controls.push(new Attribution(options.attributionOptions));\n    }\n    return controls;\n}\n//# sourceMappingURL=control.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport { assign } from './obj.js';\nimport { defaults as defaultControls } from './control.js';\nimport { defaults as defaultInteractions } from './interaction.js';\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /** @class */ (function (_super) {\n    __extends(Map, _super);\n    /**\n     * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n     */\n    function Map(options) {\n        var _this = this;\n        options = assign({}, options);\n        if (!options.controls) {\n            options.controls = defaultControls();\n        }\n        if (!options.interactions) {\n            options.interactions = defaultInteractions({\n                onFocusOnly: true,\n            });\n        }\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    Map.prototype.createRenderer = function () {\n        return new CompositeMapRenderer(this);\n    };\n    return Map;\n}(PluggableMap));\nexport default Map;\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, { createOrUpdate as createOrUpdateTileRange, } from '../TileRange.js';\nimport { DEFAULT_TILE_SIZE } from './common.js';\nimport { assert } from '../asserts.js';\nimport { clamp } from '../math.js';\nimport { createOrUpdate, getTopLeft } from '../extent.js';\nimport { createOrUpdate as createOrUpdateTileCoord } from '../tilecoord.js';\nimport { isSorted, linearFindNearest } from '../array.js';\nimport { toSize } from '../size.js';\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = /** @class */ (function () {\n    /**\n     * @param {Options} options Tile grid options.\n     */\n    function TileGrid(options) {\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n        /**\n         * @private\n         * @type {!Array<number>}\n         */\n        this.resolutions_ = options.resolutions;\n        assert(isSorted(this.resolutions_, function (a, b) {\n            return b - a;\n        }, true), 17); // `resolutions` must be sorted in descending order\n        // check if we've got a consistent zoom factor and origin\n        var zoomFactor;\n        if (!options.origins) {\n            for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n                if (!zoomFactor) {\n                    zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n                }\n                else {\n                    if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n                        zoomFactor = undefined;\n                        break;\n                    }\n                }\n            }\n        }\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        this.zoomFactor_ = zoomFactor;\n        /**\n         * @protected\n         * @type {number}\n         */\n        this.maxZoom = this.resolutions_.length - 1;\n        /**\n         * @private\n         * @type {import(\"../coordinate.js\").Coordinate}\n         */\n        this.origin_ = options.origin !== undefined ? options.origin : null;\n        /**\n         * @private\n         * @type {Array<import(\"../coordinate.js\").Coordinate>}\n         */\n        this.origins_ = null;\n        if (options.origins !== undefined) {\n            this.origins_ = options.origins;\n            assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n        }\n        var extent = options.extent;\n        if (extent !== undefined && !this.origin_ && !this.origins_) {\n            this.origin_ = getTopLeft(extent);\n        }\n        assert((!this.origin_ && this.origins_) || (this.origin_ && !this.origins_), 18); // Either `origin` or `origins` must be configured, never both\n        /**\n         * @private\n         * @type {Array<number|import(\"../size.js\").Size>}\n         */\n        this.tileSizes_ = null;\n        if (options.tileSizes !== undefined) {\n            this.tileSizes_ = options.tileSizes;\n            assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n        }\n        /**\n         * @private\n         * @type {number|import(\"../size.js\").Size}\n         */\n        this.tileSize_ =\n            options.tileSize !== undefined\n                ? options.tileSize\n                : !this.tileSizes_\n                    ? DEFAULT_TILE_SIZE\n                    : null;\n        assert((!this.tileSize_ && this.tileSizes_) ||\n            (this.tileSize_ && !this.tileSizes_), 22); // Either `tileSize` or `tileSizes` must be configured, never both\n        /**\n         * @private\n         * @type {import(\"../extent.js\").Extent}\n         */\n        this.extent_ = extent !== undefined ? extent : null;\n        /**\n         * @private\n         * @type {Array<import(\"../TileRange.js\").default>}\n         */\n        this.fullTileRanges_ = null;\n        /**\n         * @private\n         * @type {import(\"../size.js\").Size}\n         */\n        this.tmpSize_ = [0, 0];\n        if (options.sizes !== undefined) {\n            this.fullTileRanges_ = options.sizes.map(function (size, z) {\n                var tileRange = new TileRange(Math.min(0, size[0]), Math.max(size[0] - 1, -1), Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n                return tileRange;\n            }, this);\n        }\n        else if (extent) {\n            this.calculateTileRanges_(extent);\n        }\n    }\n    /**\n     * Call a function with each tile coordinate for a given extent and zoom level.\n     *\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} zoom Integer zoom level.\n     * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.forEachTileCoord = function (extent, zoom, callback) {\n        var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n        for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n            for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n                callback([zoom, i, j]);\n            }\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {boolean} Callback succeeded.\n     */\n    TileGrid.prototype.forEachTileCoordParentTileRange = function (tileCoord, callback, opt_tileRange, opt_extent) {\n        var tileRange, x, y;\n        var tileCoordExtent = null;\n        var z = tileCoord[0] - 1;\n        if (this.zoomFactor_ === 2) {\n            x = tileCoord[1];\n            y = tileCoord[2];\n        }\n        else {\n            tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n        }\n        while (z >= this.minZoom) {\n            if (this.zoomFactor_ === 2) {\n                x = Math.floor(x / 2);\n                y = Math.floor(y / 2);\n                tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n            }\n            else {\n                tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n            }\n            if (callback(z, tileRange)) {\n                return true;\n            }\n            --z;\n        }\n        return false;\n    };\n    /**\n     * Get the extent for this tile grid, if it was configured.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getExtent = function () {\n        return this.extent_;\n    };\n    /**\n     * Get the maximum zoom level for the grid.\n     * @return {number} Max zoom.\n     * @api\n     */\n    TileGrid.prototype.getMaxZoom = function () {\n        return this.maxZoom;\n    };\n    /**\n     * Get the minimum zoom level for the grid.\n     * @return {number} Min zoom.\n     * @api\n     */\n    TileGrid.prototype.getMinZoom = function () {\n        return this.minZoom;\n    };\n    /**\n     * Get the origin for the grid at the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {import(\"../coordinate.js\").Coordinate} Origin.\n     * @api\n     */\n    TileGrid.prototype.getOrigin = function (z) {\n        if (this.origin_) {\n            return this.origin_;\n        }\n        else {\n            return this.origins_[z];\n        }\n    };\n    /**\n     * Get the resolution for the given zoom level.\n     * @param {number} z Integer zoom level.\n     * @return {number} Resolution.\n     * @api\n     */\n    TileGrid.prototype.getResolution = function (z) {\n        return this.resolutions_[z];\n    };\n    /**\n     * Get the list of resolutions for the tile grid.\n     * @return {Array<number>} Resolutions.\n     * @api\n     */\n    TileGrid.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileCoordChildTileRange = function (tileCoord, opt_tileRange, opt_extent) {\n        if (tileCoord[0] < this.maxZoom) {\n            if (this.zoomFactor_ === 2) {\n                var minX = tileCoord[1] * 2;\n                var minY = tileCoord[2] * 2;\n                return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n            }\n            var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n            return this.getTileRangeForExtentAndZ(tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n        }\n        return null;\n    };\n    /**\n     * Get the extent for a tile range.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     */\n    TileGrid.prototype.getTileRangeExtent = function (z, tileRange, opt_extent) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n        var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n        var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n        var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get a tile range for the given extent and integer zoom level.\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} z Integer zoom level.\n     * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n     * @return {import(\"../TileRange.js\").default} Tile range.\n     */\n    TileGrid.prototype.getTileRangeForExtentAndZ = function (extent, z, opt_tileRange) {\n        var tileCoord = tmpTileCoord;\n        this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n        var minX = tileCoord[1];\n        var minY = tileCoord[2];\n        this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n        return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n     */\n    TileGrid.prototype.getTileCoordCenter = function (tileCoord) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        return [\n            origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n            origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n        ];\n    };\n    /**\n     * Get the extent of a tile coordinate.\n     *\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n     * @return {import(\"../extent.js\").Extent} Extent.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordExtent = function (tileCoord, opt_extent) {\n        var origin = this.getOrigin(tileCoord[0]);\n        var resolution = this.getResolution(tileCoord[0]);\n        var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n        var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n        var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n        var maxX = minX + tileSize[0] * resolution;\n        var maxY = minY + tileSize[1] * resolution;\n        return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n    };\n    /**\n     * Get the tile coordinate for the given map coordinate and resolution.  This\n     * method considers that coordinates that intersect tile boundaries should be\n     * assigned the higher tile coordinate.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndResolution = function (coordinate, resolution, opt_tileCoord) {\n        return this.getTileCoordForXYAndResolution_(coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n    };\n    /**\n     * Note that this method should not be called for resolutions that correspond\n     * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n     * @param {number} x X.\n     * @param {number} y Y.\n     * @param {number} resolution Resolution (for a non-integer zoom level).\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndResolution_ = function (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n        var z = this.getZForResolution(resolution);\n        var scale = resolution / this.getResolution(z);\n        var origin = this.getOrigin(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = (scale * xFromOrigin) / tileSize[0];\n        var tileCoordY = (scale * yFromOrigin) / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n     * they should have separate implementations.  This method is for integer zoom\n     * levels.  The other method should only be called for resolutions corresponding\n     * to non-integer zoom levels.\n     * @param {number} x Map x coordinate.\n     * @param {number} y Map y coordinate.\n     * @param {number} z Integer zoom level.\n     * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n     *     intersections go to the higher tile coordinate, let edge intersections\n     *     go to the lower tile coordinate.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @private\n     */\n    TileGrid.prototype.getTileCoordForXYAndZ_ = function (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n        var origin = this.getOrigin(z);\n        var resolution = this.getResolution(z);\n        var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n        var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n        var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n        var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n        var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n        var tileCoordX = xFromOrigin / tileSize[0];\n        var tileCoordY = yFromOrigin / tileSize[1];\n        if (reverseIntersectionPolicy) {\n            tileCoordX = Math.ceil(tileCoordX) - 1;\n            tileCoordY = Math.ceil(tileCoordY) - 1;\n        }\n        else {\n            tileCoordX = Math.floor(tileCoordX);\n            tileCoordY = Math.floor(tileCoordY);\n        }\n        return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n    };\n    /**\n     * Get a tile coordinate given a map coordinate and zoom level.\n     * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {number} z Zoom level.\n     * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n     * @api\n     */\n    TileGrid.prototype.getTileCoordForCoordAndZ = function (coordinate, z, opt_tileCoord) {\n        return this.getTileCoordForXYAndZ_(coordinate[0], coordinate[1], z, false, opt_tileCoord);\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {number} Tile resolution.\n     */\n    TileGrid.prototype.getTileCoordResolution = function (tileCoord) {\n        return this.resolutions_[tileCoord[0]];\n    };\n    /**\n     * Get the tile size for a zoom level. The type of the return value matches the\n     * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n     * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n     * @param {number} z Z.\n     * @return {number|import(\"../size.js\").Size} Tile size.\n     * @api\n     */\n    TileGrid.prototype.getTileSize = function (z) {\n        if (this.tileSize_) {\n            return this.tileSize_;\n        }\n        else {\n            return this.tileSizes_[z];\n        }\n    };\n    /**\n     * @param {number} z Zoom level.\n     * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n     */\n    TileGrid.prototype.getFullTileRange = function (z) {\n        if (!this.fullTileRanges_) {\n            return null;\n        }\n        else {\n            return this.fullTileRanges_[z];\n        }\n    };\n    /**\n     * @param {number} resolution Resolution.\n     * @param {number=} opt_direction If 0, the nearest resolution will be used.\n     *     If 1, the nearest lower resolution will be used. If -1, the nearest\n     *     higher resolution will be used. Default is 0.\n     * @return {number} Z.\n     * @api\n     */\n    TileGrid.prototype.getZForResolution = function (resolution, opt_direction) {\n        var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n        return clamp(z, this.minZoom, this.maxZoom);\n    };\n    /**\n     * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n     * @private\n     */\n    TileGrid.prototype.calculateTileRanges_ = function (extent) {\n        var length = this.resolutions_.length;\n        var fullTileRanges = new Array(length);\n        for (var z = this.minZoom; z < length; ++z) {\n            fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n        }\n        this.fullTileRanges_ = fullTileRanges;\n    };\n    return TileGrid;\n}());\nexport default TileGrid;\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/rotationconstraint\n */\nimport { toRadians } from './math.js';\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n    if (rotation !== undefined) {\n        return 0;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n    if (rotation !== undefined) {\n        return rotation;\n    }\n    else {\n        return undefined;\n    }\n}\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n    var theta = (2 * Math.PI) / n;\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            rotation = Math.floor(rotation / theta + 0.5) * theta;\n            return rotation;\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n    var tolerance = opt_tolerance || toRadians(5);\n    return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n        if (opt_isMoving) {\n            return rotation;\n        }\n        if (rotation !== undefined) {\n            if (Math.abs(rotation) <= tolerance) {\n                return 0;\n            }\n            else {\n                return rotation;\n            }\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewProperty\n */\n/**\n * @enum {string}\n */\nexport default {\n    CENTER: 'center',\n    RESOLUTION: 'resolution',\n    ROTATION: 'rotation',\n};\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/centerconstraint\n */\nimport { clamp } from './math.js';\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n    return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving) {\n        if (center) {\n            var viewWidth = onlyCenter ? 0 : size[0] * resolution;\n            var viewHeight = onlyCenter ? 0 : size[1] * resolution;\n            var minX = extent[0] + viewWidth / 2;\n            var maxX = extent[2] - viewWidth / 2;\n            var minY = extent[1] + viewHeight / 2;\n            var maxY = extent[3] - viewHeight / 2;\n            // note: when zooming out of bounds, min and max values for x and y may\n            // end up inverted (min > max); this has to be accounted for\n            if (minX > maxX) {\n                minX = (maxX + minX) / 2;\n                maxX = minX;\n            }\n            if (minY > maxY) {\n                minY = (maxY + minY) / 2;\n                maxY = minY;\n            }\n            var x = clamp(center[0], minX, maxX);\n            var y = clamp(center[1], minY, maxY);\n            var ratio = 30 * resolution;\n            // during an interaction, allow some overscroll\n            if (opt_isMoving && smooth) {\n                x +=\n                    -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n                y +=\n                    -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n                        ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n            }\n            return [x, y];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n    return center;\n}\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport { clamp } from './math.js';\nimport { getHeight, getWidth } from './extent.js';\nimport { linearFindNearest } from './array.js';\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent=} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(resolution, maxExtent, viewportSize, showFullExtent) {\n    var xResolution = getWidth(maxExtent) / viewportSize[0];\n    var yResolution = getHeight(maxExtent) / viewportSize[1];\n    if (showFullExtent) {\n        return Math.min(resolution, Math.max(xResolution, yResolution));\n    }\n    return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n    var result = Math.min(resolution, maxResolution);\n    var ratio = 50;\n    result *=\n        Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n            1;\n    if (minResolution) {\n        result = Math.max(result, minResolution);\n        result /=\n            Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n                ratio +\n                1;\n    }\n    return clamp(result, minResolution / 2, maxResolution * 2);\n}\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var maxResolution = resolutions[0];\n            var minResolution = resolutions[resolutions.length - 1];\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var capped = Math.min(cappedMaxRes, resolution);\n            var z = Math.floor(linearFindNearest(resolutions, capped, direction));\n            if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n                return resolutions[z + 1];\n            }\n            return resolutions[z];\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_minResolution Minimum resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var minResolution = opt_minResolution !== undefined ? opt_minResolution : 0;\n            // during interacting or animating, allow intermediary values\n            if (opt_isMoving) {\n                var smooth = opt_smooth !== undefined ? opt_smooth : true;\n                if (!smooth) {\n                    return clamp(resolution, minResolution, cappedMaxRes);\n                }\n                return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n            }\n            var tolerance = 1e-9;\n            var minZoomLevel = Math.ceil(Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance);\n            var offset = -direction * (0.5 - tolerance) + 0.5;\n            var capped = Math.min(cappedMaxRes, resolution);\n            var cappedZoomLevel = Math.floor(Math.log(maxResolution / capped) / Math.log(power) + offset);\n            var zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n            var newResolution = maxResolution / Math.pow(power, zoomLevel);\n            return clamp(newResolution, minResolution, cappedMaxRes);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean=} opt_smooth If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent=} opt_maxExtent Maximum allowed extent.\n * @param {boolean=} opt_showFullExtent If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(maxResolution, minResolution, opt_smooth, opt_maxExtent, opt_showFullExtent) {\n    return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n        if (resolution !== undefined) {\n            var cappedMaxRes = opt_maxExtent\n                ? getViewportClampedResolution(maxResolution, opt_maxExtent, size, opt_showFullExtent)\n                : maxResolution;\n            var smooth = opt_smooth !== undefined ? opt_smooth : true;\n            if (!smooth || !opt_isMoving) {\n                return clamp(resolution, minResolution, cappedMaxRes);\n            }\n            return getSmoothClampedResolution(resolution, cappedMaxRes, minResolution);\n        }\n        else {\n            return undefined;\n        }\n    });\n}\n//# sourceMappingURL=resolutionconstraint.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport { DEFAULT_TILE_SIZE } from './tilegrid/common.js';\nimport { METERS_PER_UNIT, createProjection, fromUserCoordinate, fromUserExtent, getUserProjection, toUserCoordinate, toUserExtent, } from './proj.js';\nimport { VOID } from './functions.js';\nimport { add as addCoordinate, equals as coordinatesEqual, rotate as rotateCoordinate, } from './coordinate.js';\nimport { assert } from './asserts.js';\nimport { assign } from './obj.js';\nimport { none as centerNone, createExtent } from './centerconstraint.js';\nimport { clamp, modulo } from './math.js';\nimport { createMinMaxResolution } from './resolutionconstraint.js';\nimport { createSnapToN, createSnapToZero, disable, none as rotationNone, } from './rotationconstraint.js';\nimport { createSnapToPower, createSnapToResolutions, } from './resolutionconstraint.js';\nimport { easeOut } from './easing.js';\nimport { equals } from './coordinate.js';\nimport { getCenter, getForViewAndSize, getHeight, getWidth, isEmpty, } from './extent.js';\nimport { inAndOut } from './easing.js';\nimport { linearFindNearest } from './array.js';\nimport { fromExtent as polygonFromExtent } from './geom/Polygon.js';\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean):void} callback\n */\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n */\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nvar View = /** @class */ (function (_super) {\n    __extends(View, _super);\n    /**\n     * @param {ViewOptions=} opt_options View options.\n     */\n    function View(opt_options) {\n        var _this = _super.call(this) || this;\n        var options = assign({}, opt_options);\n        /**\n         * @private\n         * @type {Array<number>}\n         */\n        _this.hints_ = [0, 0];\n        /**\n         * @private\n         * @type {Array<Array<Animation>>}\n         */\n        _this.animations_ = [];\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.updateAnimationKey_;\n        /**\n         * @private\n         * @const\n         * @type {import(\"./proj/Projection.js\").default}\n         */\n        _this.projection_ = createProjection(options.projection, 'EPSG:3857');\n        /**\n         * @private\n         * @type {import(\"./size.js\").Size}\n         */\n        _this.viewportSize_ = [100, 100];\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.targetCenter_ = null;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetResolution_;\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.targetRotation_;\n        /**\n         * @private\n         * @type {import(\"./coordinate.js\").Coordinate|undefined}\n         */\n        _this.cancelAnchor_ = undefined;\n        if (options.center) {\n            options.center = fromUserCoordinate(options.center, _this.projection_);\n        }\n        if (options.extent) {\n            options.extent = fromUserExtent(options.extent, _this.projection_);\n        }\n        _this.applyOptions_(options);\n        return _this;\n    }\n    /**\n     * Set up the view with the given options.\n     * @param {ViewOptions} options View options.\n     */\n    View.prototype.applyOptions_ = function (options) {\n        /**\n         * @type {Object<string, *>}\n         */\n        var properties = {};\n        var resolutionConstraintInfo = createResolutionConstraint(options);\n        /**\n         * @private\n         * @type {number}\n         */\n        this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minResolution_ = resolutionConstraintInfo.minResolution;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n        /**\n         * @private\n         * @type {Array<number>|undefined}\n         */\n        this.resolutions_ = options.resolutions;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.minZoom_ = resolutionConstraintInfo.minZoom;\n        var centerConstraint = createCenterConstraint(options);\n        var resolutionConstraint = resolutionConstraintInfo.constraint;\n        var rotationConstraint = createRotationConstraint(options);\n        /**\n         * @private\n         * @type {Constraints}\n         */\n        this.constraints_ = {\n            center: centerConstraint,\n            resolution: resolutionConstraint,\n            rotation: rotationConstraint,\n        };\n        this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n        this.setCenterInternal(options.center !== undefined ? options.center : null);\n        if (options.resolution !== undefined) {\n            this.setResolution(options.resolution);\n        }\n        else if (options.zoom !== undefined) {\n            this.setZoom(options.zoom);\n        }\n        this.setProperties(properties);\n        /**\n         * @private\n         * @type {ViewOptions}\n         */\n        this.options_ = options;\n    };\n    /**\n     * Get an updated version of the view options used to construct the view.  The\n     * current resolution (or zoom), center, and rotation are applied to any stored\n     * options.  The provided options can be used to apply new min/max zoom or\n     * resolution limits.\n     * @param {ViewOptions} newOptions New options to be applied.\n     * @return {ViewOptions} New options updated with the current view state.\n     */\n    View.prototype.getUpdatedOptions_ = function (newOptions) {\n        var options = assign({}, this.options_);\n        // preserve resolution (or zoom)\n        if (options.resolution !== undefined) {\n            options.resolution = this.getResolution();\n        }\n        else {\n            options.zoom = this.getZoom();\n        }\n        // preserve center\n        options.center = this.getCenterInternal();\n        // preserve rotation\n        options.rotation = this.getRotation();\n        return assign({}, options, newOptions);\n    };\n    /**\n     * Animate the view.  The view's center, zoom (or resolution), and rotation\n     * can be animated for smooth transitions between view states.  For example,\n     * to animate the view to a new zoom level:\n     *\n     *     view.animate({zoom: view.getZoom() + 1});\n     *\n     * By default, the animation lasts one second and uses in-and-out easing.  You\n     * can customize this behavior by including `duration` (in milliseconds) and\n     * `easing` options (see {@link module:ol/easing}).\n     *\n     * To chain together multiple animations, call the method with multiple\n     * animation objects.  For example, to first zoom and then pan:\n     *\n     *     view.animate({zoom: 10}, {center: [0, 0]});\n     *\n     * If you provide a function as the last argument to the animate method, it\n     * will get called at the end of an animation series.  The callback will be\n     * called with `true` if the animation series completed on its own or `false`\n     * if it was cancelled.\n     *\n     * Animations are cancelled by user interactions (e.g. dragging the map) or by\n     * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n     * (or another method that calls one of these).\n     *\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n     *     options.  Multiple animations can be run in series by passing multiple\n     *     options objects.  To run multiple animations in parallel, call the method\n     *     multiple times.  An optional callback can be provided as a final\n     *     argument.  The callback will be called with a boolean indicating whether\n     *     the animation completed without being cancelled.\n     * @api\n     */\n    View.prototype.animate = function (var_args) {\n        if (this.isDef() && !this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n        var args = new Array(arguments.length);\n        for (var i = 0; i < args.length; ++i) {\n            var options = arguments[i];\n            if (options.center) {\n                options = assign({}, options);\n                options.center = fromUserCoordinate(options.center, this.getProjection());\n            }\n            if (options.anchor) {\n                options = assign({}, options);\n                options.anchor = fromUserCoordinate(options.anchor, this.getProjection());\n            }\n            args[i] = options;\n        }\n        this.animateInternal.apply(this, args);\n    };\n    /**\n     * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n     */\n    View.prototype.animateInternal = function (var_args) {\n        var animationCount = arguments.length;\n        var callback;\n        if (animationCount > 1 &&\n            typeof arguments[animationCount - 1] === 'function') {\n            callback = arguments[animationCount - 1];\n            --animationCount;\n        }\n        if (!this.isDef()) {\n            // if view properties are not yet set, shortcut to the final state\n            var state = arguments[animationCount - 1];\n            if (state.center) {\n                this.setCenterInternal(state.center);\n            }\n            if (state.zoom !== undefined) {\n                this.setZoom(state.zoom);\n            }\n            if (state.rotation !== undefined) {\n                this.setRotation(state.rotation);\n            }\n            if (callback) {\n                animationCallback(callback, true);\n            }\n            return;\n        }\n        var start = Date.now();\n        var center = this.targetCenter_.slice();\n        var resolution = this.targetResolution_;\n        var rotation = this.targetRotation_;\n        var series = [];\n        for (var i = 0; i < animationCount; ++i) {\n            var options = /** @type {AnimationOptions} */ (arguments[i]);\n            var animation = {\n                start: start,\n                complete: false,\n                anchor: options.anchor,\n                duration: options.duration !== undefined ? options.duration : 1000,\n                easing: options.easing || inAndOut,\n                callback: callback,\n            };\n            if (options.center) {\n                animation.sourceCenter = center;\n                animation.targetCenter = options.center.slice();\n                center = animation.targetCenter;\n            }\n            if (options.zoom !== undefined) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = this.getResolutionForZoom(options.zoom);\n                resolution = animation.targetResolution;\n            }\n            else if (options.resolution) {\n                animation.sourceResolution = resolution;\n                animation.targetResolution = options.resolution;\n                resolution = animation.targetResolution;\n            }\n            if (options.rotation !== undefined) {\n                animation.sourceRotation = rotation;\n                var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n                animation.targetRotation = rotation + delta;\n                rotation = animation.targetRotation;\n            }\n            // check if animation is a no-op\n            if (isNoopAnimation(animation)) {\n                animation.complete = true;\n                // we still push it onto the series for callback handling\n            }\n            else {\n                start += animation.duration;\n            }\n            series.push(animation);\n        }\n        this.animations_.push(series);\n        this.setHint(ViewHint.ANIMATING, 1);\n        this.updateAnimations_();\n    };\n    /**\n     * Determine if the view is being animated.\n     * @return {boolean} The view is being animated.\n     * @api\n     */\n    View.prototype.getAnimating = function () {\n        return this.hints_[ViewHint.ANIMATING] > 0;\n    };\n    /**\n     * Determine if the user is interacting with the view, such as panning or zooming.\n     * @return {boolean} The view is being interacted with.\n     * @api\n     */\n    View.prototype.getInteracting = function () {\n        return this.hints_[ViewHint.INTERACTING] > 0;\n    };\n    /**\n     * Cancel any ongoing animations.\n     * @api\n     */\n    View.prototype.cancelAnimations = function () {\n        this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n        var anchor;\n        for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n            var series = this.animations_[i];\n            if (series[0].callback) {\n                animationCallback(series[0].callback, false);\n            }\n            if (!anchor) {\n                for (var j = 0, jj = series.length; j < jj; ++j) {\n                    var animation = series[j];\n                    if (!animation.complete) {\n                        anchor = animation.anchor;\n                        break;\n                    }\n                }\n            }\n        }\n        this.animations_.length = 0;\n        this.cancelAnchor_ = anchor;\n    };\n    /**\n     * Update all animations.\n     */\n    View.prototype.updateAnimations_ = function () {\n        if (this.updateAnimationKey_ !== undefined) {\n            cancelAnimationFrame(this.updateAnimationKey_);\n            this.updateAnimationKey_ = undefined;\n        }\n        if (!this.getAnimating()) {\n            return;\n        }\n        var now = Date.now();\n        var more = false;\n        for (var i = this.animations_.length - 1; i >= 0; --i) {\n            var series = this.animations_[i];\n            var seriesComplete = true;\n            for (var j = 0, jj = series.length; j < jj; ++j) {\n                var animation = series[j];\n                if (animation.complete) {\n                    continue;\n                }\n                var elapsed = now - animation.start;\n                var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n                if (fraction >= 1) {\n                    animation.complete = true;\n                    fraction = 1;\n                }\n                else {\n                    seriesComplete = false;\n                }\n                var progress = animation.easing(fraction);\n                if (animation.sourceCenter) {\n                    var x0 = animation.sourceCenter[0];\n                    var y0 = animation.sourceCenter[1];\n                    var x1 = animation.targetCenter[0];\n                    var y1 = animation.targetCenter[1];\n                    var x = x0 + progress * (x1 - x0);\n                    var y = y0 + progress * (y1 - y0);\n                    this.targetCenter_ = [x, y];\n                }\n                if (animation.sourceResolution && animation.targetResolution) {\n                    var resolution = progress === 1\n                        ? animation.targetResolution\n                        : animation.sourceResolution +\n                            progress *\n                                (animation.targetResolution - animation.sourceResolution);\n                    if (animation.anchor) {\n                        var size = this.getViewportSize_(this.getRotation());\n                        var constrainedResolution = this.constraints_.resolution(resolution, 0, size, true);\n                        this.targetCenter_ = this.calculateCenterZoom(constrainedResolution, animation.anchor);\n                    }\n                    this.targetResolution_ = resolution;\n                    this.applyTargetState_(true);\n                }\n                if (animation.sourceRotation !== undefined &&\n                    animation.targetRotation !== undefined) {\n                    var rotation = progress === 1\n                        ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                            Math.PI\n                        : animation.sourceRotation +\n                            progress *\n                                (animation.targetRotation - animation.sourceRotation);\n                    if (animation.anchor) {\n                        var constrainedRotation = this.constraints_.rotation(rotation, true);\n                        this.targetCenter_ = this.calculateCenterRotate(constrainedRotation, animation.anchor);\n                    }\n                    this.targetRotation_ = rotation;\n                }\n                this.applyTargetState_(true);\n                more = true;\n                if (!animation.complete) {\n                    break;\n                }\n            }\n            if (seriesComplete) {\n                this.animations_[i] = null;\n                this.setHint(ViewHint.ANIMATING, -1);\n                var callback = series[0].callback;\n                if (callback) {\n                    animationCallback(callback, true);\n                }\n            }\n        }\n        // prune completed series\n        this.animations_ = this.animations_.filter(Boolean);\n        if (more && this.updateAnimationKey_ === undefined) {\n            this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_.bind(this));\n        }\n    };\n    /**\n     * @param {number} rotation Target rotation.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n     */\n    View.prototype.calculateCenterRotate = function (rotation, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        if (currentCenter !== undefined) {\n            center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n            rotateCoordinate(center, rotation - this.getRotation());\n            addCoordinate(center, anchor);\n        }\n        return center;\n    };\n    /**\n     * @param {number} resolution Target resolution.\n     * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n     */\n    View.prototype.calculateCenterZoom = function (resolution, anchor) {\n        var center;\n        var currentCenter = this.getCenterInternal();\n        var currentResolution = this.getResolution();\n        if (currentCenter !== undefined && currentResolution !== undefined) {\n            var x = anchor[0] -\n                (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n            var y = anchor[1] -\n                (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n            center = [x, y];\n        }\n        return center;\n    };\n    /**\n     * Returns the current viewport size.\n     * @private\n     * @param {number=} opt_rotation Take into account the rotation of the viewport when giving the size\n     * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n     */\n    View.prototype.getViewportSize_ = function (opt_rotation) {\n        var size = this.viewportSize_;\n        if (opt_rotation) {\n            var w = size[0];\n            var h = size[1];\n            return [\n                Math.abs(w * Math.cos(opt_rotation)) +\n                    Math.abs(h * Math.sin(opt_rotation)),\n                Math.abs(w * Math.sin(opt_rotation)) +\n                    Math.abs(h * Math.cos(opt_rotation)),\n            ];\n        }\n        else {\n            return size;\n        }\n    };\n    /**\n     * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n     * to avoid performance hit and layout reflow.\n     * This should be done on map size change.\n     * Note: the constraints are not resolved during an animation to avoid stopping it\n     * @param {import(\"./size.js\").Size=} opt_size Viewport size; if undefined, [100, 100] is assumed\n     */\n    View.prototype.setViewportSize = function (opt_size) {\n        this.viewportSize_ = Array.isArray(opt_size)\n            ? opt_size.slice()\n            : [100, 100];\n        if (!this.getAnimating()) {\n            this.resolveConstraints(0);\n        }\n    };\n    /**\n     * Get the view center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getCenter = function () {\n        var center = this.getCenterInternal();\n        if (!center) {\n            return center;\n        }\n        return toUserCoordinate(center, this.getProjection());\n    };\n    /**\n     * Get the view center without transforming to user projection.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n     */\n    View.prototype.getCenterInternal = function () {\n        return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER));\n    };\n    /**\n     * @return {Constraints} Constraints.\n     */\n    View.prototype.getConstraints = function () {\n        return this.constraints_;\n    };\n    /**\n     * @return {boolean} Resolution constraint is set\n     */\n    View.prototype.getConstrainResolution = function () {\n        return this.options_.constrainResolution;\n    };\n    /**\n     * @param {Array<number>=} opt_hints Destination array.\n     * @return {Array<number>} Hint.\n     */\n    View.prototype.getHints = function (opt_hints) {\n        if (opt_hints !== undefined) {\n            opt_hints[0] = this.hints_[0];\n            opt_hints[1] = this.hints_[1];\n            return opt_hints;\n        }\n        else {\n            return this.hints_.slice();\n        }\n    };\n    /**\n     * Calculate the extent for the current view state and the passed size.\n     * The size is the pixel dimensions of the box into which the calculated extent\n     * should fit. In most cases you want to get the extent of the entire map,\n     * that is `map.getSize()`.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size\n     * of the map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     * @api\n     */\n    View.prototype.calculateExtent = function (opt_size) {\n        var extent = this.calculateExtentInternal(opt_size);\n        return toUserExtent(extent, this.getProjection());\n    };\n    /**\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n     * first map that uses this view will be used.\n     * @return {import(\"./extent.js\").Extent} Extent.\n     */\n    View.prototype.calculateExtentInternal = function (opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        assert(center, 1); // The view center is not defined\n        var resolution = /** @type {!number} */ (this.getResolution());\n        assert(resolution !== undefined, 2); // The view resolution is not defined\n        var rotation = /** @type {!number} */ (this.getRotation());\n        assert(rotation !== undefined, 3); // The view rotation is not defined\n        return getForViewAndSize(center, resolution, rotation, size);\n    };\n    /**\n     * Get the maximum resolution of the view.\n     * @return {number} The maximum resolution of the view.\n     * @api\n     */\n    View.prototype.getMaxResolution = function () {\n        return this.maxResolution_;\n    };\n    /**\n     * Get the minimum resolution of the view.\n     * @return {number} The minimum resolution of the view.\n     * @api\n     */\n    View.prototype.getMinResolution = function () {\n        return this.minResolution_;\n    };\n    /**\n     * Get the maximum zoom level for the view.\n     * @return {number} The maximum zoom level.\n     * @api\n     */\n    View.prototype.getMaxZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n    };\n    /**\n     * Set a new maximum zoom level for the view.\n     * @param {number} zoom The maximum zoom level.\n     * @api\n     */\n    View.prototype.setMaxZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ maxZoom: zoom }));\n    };\n    /**\n     * Get the minimum zoom level for the view.\n     * @return {number} The minimum zoom level.\n     * @api\n     */\n    View.prototype.getMinZoom = function () {\n        return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n    };\n    /**\n     * Set a new minimum zoom level for the view.\n     * @param {number} zoom The minimum zoom level.\n     * @api\n     */\n    View.prototype.setMinZoom = function (zoom) {\n        this.applyOptions_(this.getUpdatedOptions_({ minZoom: zoom }));\n    };\n    /**\n     * Set whether the view shoud allow intermediary zoom levels.\n     * @param {boolean} enabled Whether the resolution is constrained.\n     * @api\n     */\n    View.prototype.setConstrainResolution = function (enabled) {\n        this.applyOptions_(this.getUpdatedOptions_({ constrainResolution: enabled }));\n    };\n    /**\n     * Get the view projection.\n     * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n     * @api\n     */\n    View.prototype.getProjection = function () {\n        return this.projection_;\n    };\n    /**\n     * Get the view resolution.\n     * @return {number|undefined} The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.getResolution = function () {\n        return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n    };\n    /**\n     * Get the resolutions for the view. This returns the array of resolutions\n     * passed to the constructor of the View, or undefined if none were given.\n     * @return {Array<number>|undefined} The resolutions of the view.\n     * @api\n     */\n    View.prototype.getResolutions = function () {\n        return this.resolutions_;\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     * @api\n     */\n    View.prototype.getResolutionForExtent = function (extent, opt_size) {\n        return this.getResolutionForExtentInternal(fromUserExtent(extent, this.getProjection()), opt_size);\n    };\n    /**\n     * Get the resolution for a provided extent (in map units) and size (in pixels).\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n     * @return {number} The resolution at which the provided extent will render at\n     *     the given size.\n     */\n    View.prototype.getResolutionForExtentInternal = function (extent, opt_size) {\n        var size = opt_size || this.getViewportSize_();\n        var xResolution = getWidth(extent) / size[0];\n        var yResolution = getHeight(extent) / size[1];\n        return Math.max(xResolution, yResolution);\n    };\n    /**\n     * Return a function that returns a value between 0 and 1 for a\n     * resolution. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Resolution for value function.\n     */\n    View.prototype.getResolutionForValueFunction = function (opt_power) {\n        var power = opt_power || 2;\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / Math.log(power);\n        return (\n        /**\n         * @param {number} value Value.\n         * @return {number} Resolution.\n         */\n        function (value) {\n            var resolution = maxResolution / Math.pow(power, value * max);\n            return resolution;\n        });\n    };\n    /**\n     * Get the view rotation.\n     * @return {number} The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.getRotation = function () {\n        return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n    };\n    /**\n     * Return a function that returns a resolution for a value between\n     * 0 and 1. Exponential scaling is assumed.\n     * @param {number=} opt_power Power.\n     * @return {function(number): number} Value for resolution function.\n     */\n    View.prototype.getValueForResolutionFunction = function (opt_power) {\n        var logPower = Math.log(opt_power || 2);\n        var maxResolution = this.getConstrainedResolution(this.maxResolution_);\n        var minResolution = this.minResolution_;\n        var max = Math.log(maxResolution / minResolution) / logPower;\n        return (\n        /**\n         * @param {number} resolution Resolution.\n         * @return {number} Value.\n         */\n        function (resolution) {\n            var value = Math.log(maxResolution / resolution) / logPower / max;\n            return value;\n        });\n    };\n    /**\n     * @return {State} View state.\n     */\n    View.prototype.getState = function () {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenterInternal());\n        var projection = this.getProjection();\n        var resolution = /** @type {number} */ (this.getResolution());\n        var rotation = this.getRotation();\n        return {\n            center: center.slice(0),\n            projection: projection !== undefined ? projection : null,\n            resolution: resolution,\n            rotation: rotation,\n            zoom: this.getZoom(),\n        };\n    };\n    /**\n     * Get the current zoom level. This method may return non-integer zoom levels\n     * if the view does not constrain the resolution, or if an interaction or\n     * animation is underway.\n     * @return {number|undefined} Zoom.\n     * @api\n     */\n    View.prototype.getZoom = function () {\n        var zoom;\n        var resolution = this.getResolution();\n        if (resolution !== undefined) {\n            zoom = this.getZoomForResolution(resolution);\n        }\n        return zoom;\n    };\n    /**\n     * Get the zoom level for a resolution.\n     * @param {number} resolution The resolution.\n     * @return {number|undefined} The zoom level for the provided resolution.\n     * @api\n     */\n    View.prototype.getZoomForResolution = function (resolution) {\n        var offset = this.minZoom_ || 0;\n        var max, zoomFactor;\n        if (this.resolutions_) {\n            var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n            offset = nearest;\n            max = this.resolutions_[nearest];\n            if (nearest == this.resolutions_.length - 1) {\n                zoomFactor = 2;\n            }\n            else {\n                zoomFactor = max / this.resolutions_[nearest + 1];\n            }\n        }\n        else {\n            max = this.maxResolution_;\n            zoomFactor = this.zoomFactor_;\n        }\n        return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n    };\n    /**\n     * Get the resolution for a zoom level.\n     * @param {number} zoom Zoom level.\n     * @return {number} The view resolution for the provided zoom level.\n     * @api\n     */\n    View.prototype.getResolutionForZoom = function (zoom) {\n        if (this.resolutions_) {\n            if (this.resolutions_.length <= 1) {\n                return 0;\n            }\n            var baseLevel = clamp(Math.floor(zoom), 0, this.resolutions_.length - 2);\n            var zoomFactor = this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n            return (this.resolutions_[baseLevel] /\n                Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1)));\n        }\n        else {\n            return (this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_));\n        }\n    };\n    /**\n     * Fit the given geometry or extent based on the given map size and border.\n     * The size is pixel dimensions of the box to fit the extent into.\n     * In most cases you will want to use the map size, that is `map.getSize()`.\n     * Takes care of the map angle.\n     * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n     *     extent to fit the view to.\n     * @param {FitOptions=} opt_options Options.\n     * @api\n     */\n    View.prototype.fit = function (geometryOrExtent, opt_options) {\n        var options = assign({ size: this.getViewportSize_() }, opt_options || {});\n        /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n        var geometry;\n        assert(Array.isArray(geometryOrExtent) ||\n            typeof ( /** @type {?} */(geometryOrExtent).getSimplifiedGeometry) ===\n                'function', 24); // Invalid extent or geometry provided as `geometry`\n        if (Array.isArray(geometryOrExtent)) {\n            assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n            var extent = fromUserExtent(geometryOrExtent, this.getProjection());\n            geometry = polygonFromExtent(extent);\n        }\n        else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n            var extent = fromUserExtent(geometryOrExtent.getExtent(), this.getProjection());\n            geometry = polygonFromExtent(extent);\n            geometry.rotate(this.getRotation(), getCenter(extent));\n        }\n        else {\n            var userProjection = getUserProjection();\n            if (userProjection) {\n                geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometryOrExtent\n                    .clone()\n                    .transform(userProjection, this.getProjection()));\n            }\n            else {\n                geometry = geometryOrExtent;\n            }\n        }\n        this.fitInternal(geometry, options);\n    };\n    /**\n     * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n     * @param {FitOptions=} opt_options Options.\n     */\n    View.prototype.fitInternal = function (geometry, opt_options) {\n        var options = opt_options || {};\n        var size = options.size;\n        if (!size) {\n            size = this.getViewportSize_();\n        }\n        var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n        var nearest = options.nearest !== undefined ? options.nearest : false;\n        var minResolution;\n        if (options.minResolution !== undefined) {\n            minResolution = options.minResolution;\n        }\n        else if (options.maxZoom !== undefined) {\n            minResolution = this.getResolutionForZoom(options.maxZoom);\n        }\n        else {\n            minResolution = 0;\n        }\n        var coords = geometry.getFlatCoordinates();\n        // calculate rotated extent\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var minRotX = +Infinity;\n        var minRotY = +Infinity;\n        var maxRotX = -Infinity;\n        var maxRotY = -Infinity;\n        var stride = geometry.getStride();\n        for (var i = 0, ii = coords.length; i < ii; i += stride) {\n            var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n            var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n            minRotX = Math.min(minRotX, rotX);\n            minRotY = Math.min(minRotY, rotY);\n            maxRotX = Math.max(maxRotX, rotX);\n            maxRotY = Math.max(maxRotY, rotY);\n        }\n        // calculate resolution\n        var resolution = this.getResolutionForExtentInternal([minRotX, minRotY, maxRotX, maxRotY], [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n        resolution = isNaN(resolution)\n            ? minResolution\n            : Math.max(resolution, minResolution);\n        resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n        // calculate center\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerRotX = (minRotX + maxRotX) / 2;\n        var centerRotY = (minRotY + maxRotY) / 2;\n        centerRotX += ((padding[1] - padding[3]) / 2) * resolution;\n        centerRotY += ((padding[0] - padding[2]) / 2) * resolution;\n        var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n        var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n        var center = [centerX, centerY];\n        var callback = options.callback ? options.callback : VOID;\n        if (options.duration !== undefined) {\n            this.animateInternal({\n                resolution: resolution,\n                center: this.getConstrainedCenter(center, resolution),\n                duration: options.duration,\n                easing: options.easing,\n            }, callback);\n        }\n        else {\n            this.targetResolution_ = resolution;\n            this.targetCenter_ = center;\n            this.applyTargetState_(false, true);\n            animationCallback(callback, true);\n        }\n    };\n    /**\n     * Center on coordinate and view position.\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     * @api\n     */\n    View.prototype.centerOn = function (coordinate, size, position) {\n        this.centerOnInternal(fromUserCoordinate(coordinate, this.getProjection()), size, position);\n    };\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n     * @param {import(\"./size.js\").Size} size Box pixel size.\n     * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n     */\n    View.prototype.centerOnInternal = function (coordinate, size, position) {\n        // calculate rotated position\n        var rotation = this.getRotation();\n        var cosAngle = Math.cos(-rotation);\n        var sinAngle = Math.sin(-rotation);\n        var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n        var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n        var resolution = this.getResolution();\n        rotX += (size[0] / 2 - position[0]) * resolution;\n        rotY += (position[1] - size[1] / 2) * resolution;\n        // go back to original angle\n        sinAngle = -sinAngle; // go back to original rotation\n        var centerX = rotX * cosAngle - rotY * sinAngle;\n        var centerY = rotY * cosAngle + rotX * sinAngle;\n        this.setCenterInternal([centerX, centerY]);\n    };\n    /**\n     * @return {boolean} Is defined.\n     */\n    View.prototype.isDef = function () {\n        return !!this.getCenterInternal() && this.getResolution() !== undefined;\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     * @api\n     */\n    View.prototype.adjustCenter = function (deltaCoordinates) {\n        var center = toUserCoordinate(this.targetCenter_, this.getProjection());\n        this.setCenter([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n     */\n    View.prototype.adjustCenterInternal = function (deltaCoordinates) {\n        var center = this.targetCenter_;\n        this.setCenterInternal([\n            center[0] + deltaCoordinates[0],\n            center[1] + deltaCoordinates[1],\n        ]);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustResolution = function (ratio, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.adjustResolutionInternal(ratio, anchor);\n    };\n    /**\n     * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} ratio The ratio to apply on the view resolution.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.adjustResolutionInternal = function (ratio, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var size = this.getViewportSize_(this.getRotation());\n        var newResolution = this.constraints_.resolution(this.targetResolution_ * ratio, 0, size, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n        }\n        this.targetResolution_ *= ratio;\n        this.applyTargetState_();\n    };\n    /**\n     * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom level.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.adjustZoom = function (delta, opt_anchor) {\n        this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n    };\n    /**\n     * Adds a value to the view rotation, optionally using an anchor. Any rotation\n     * constraint will apply.\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     * @api\n     */\n    View.prototype.adjustRotation = function (delta, opt_anchor) {\n        if (opt_anchor) {\n            opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n        }\n        this.adjustRotationInternal(delta, opt_anchor);\n    };\n    /**\n     * @param {number} delta Relative value to add to the zoom rotation, in radians.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n     */\n    View.prototype.adjustRotationInternal = function (delta, opt_anchor) {\n        var isMoving = this.getAnimating() || this.getInteracting();\n        var newRotation = this.constraints_.rotation(this.targetRotation_ + delta, isMoving);\n        if (opt_anchor) {\n            this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n        }\n        this.targetRotation_ += delta;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the center of the current view. Any extent constraint will apply.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setCenter = function (center) {\n        this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n    };\n    /**\n     * Set the center using the view projection (not the user projection).\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n     */\n    View.prototype.setCenterInternal = function (center) {\n        this.targetCenter_ = center;\n        this.applyTargetState_();\n    };\n    /**\n     * @param {import(\"./ViewHint.js\").default} hint Hint.\n     * @param {number} delta Delta.\n     * @return {number} New value.\n     */\n    View.prototype.setHint = function (hint, delta) {\n        this.hints_[hint] += delta;\n        this.changed();\n        return this.hints_[hint];\n    };\n    /**\n     * Set the resolution for this view. Any resolution constraint will apply.\n     * @param {number|undefined} resolution The resolution of the view.\n     * @observable\n     * @api\n     */\n    View.prototype.setResolution = function (resolution) {\n        this.targetResolution_ = resolution;\n        this.applyTargetState_();\n    };\n    /**\n     * Set the rotation for this view. Any rotation constraint will apply.\n     * @param {number} rotation The rotation of the view in radians.\n     * @observable\n     * @api\n     */\n    View.prototype.setRotation = function (rotation) {\n        this.targetRotation_ = rotation;\n        this.applyTargetState_();\n    };\n    /**\n     * Zoom to a specific zoom level. Any resolution constrain will apply.\n     * @param {number} zoom Zoom level.\n     * @api\n     */\n    View.prototype.setZoom = function (zoom) {\n        this.setResolution(this.getResolutionForZoom(zoom));\n    };\n    /**\n     * Recompute rotation/resolution/center based on target values.\n     * Note: we have to compute rotation first, then resolution and center considering that\n     * parameters can influence one another in case a view extent constraint is present.\n     * @param {boolean=} opt_doNotCancelAnims Do not cancel animations.\n     * @param {boolean=} opt_forceMoving Apply constraints as if the view is moving.\n     * @private\n     */\n    View.prototype.applyTargetState_ = function (opt_doNotCancelAnims, opt_forceMoving) {\n        var isMoving = this.getAnimating() || this.getInteracting() || opt_forceMoving;\n        // compute rotation\n        var newRotation = this.constraints_.rotation(this.targetRotation_, isMoving);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, 0, size, isMoving);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size, isMoving);\n        if (this.get(ViewProperty.ROTATION) !== newRotation) {\n            this.set(ViewProperty.ROTATION, newRotation);\n        }\n        if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n            this.set(ViewProperty.RESOLUTION, newResolution);\n        }\n        if (!this.get(ViewProperty.CENTER) ||\n            !equals(this.get(ViewProperty.CENTER), newCenter)) {\n            this.set(ViewProperty.CENTER, newCenter);\n        }\n        if (this.getAnimating() && !opt_doNotCancelAnims) {\n            this.cancelAnimations();\n        }\n        this.cancelAnchor_ = undefined;\n    };\n    /**\n     * If any constraints need to be applied, an animation will be triggered.\n     * This is typically done on interaction end.\n     * Note: calling this with a duration of 0 will apply the constrained values straight away,\n     * without animation.\n     * @param {number=} opt_duration The animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.resolveConstraints = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var duration = opt_duration !== undefined ? opt_duration : 200;\n        var direction = opt_resolutionDirection || 0;\n        var newRotation = this.constraints_.rotation(this.targetRotation_);\n        var size = this.getViewportSize_(newRotation);\n        var newResolution = this.constraints_.resolution(this.targetResolution_, direction, size);\n        var newCenter = this.constraints_.center(this.targetCenter_, newResolution, size);\n        if (duration === 0 && !this.cancelAnchor_) {\n            this.targetResolution_ = newResolution;\n            this.targetRotation_ = newRotation;\n            this.targetCenter_ = newCenter;\n            this.applyTargetState_();\n            return;\n        }\n        var anchor = opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n        this.cancelAnchor_ = undefined;\n        if (this.getResolution() !== newResolution ||\n            this.getRotation() !== newRotation ||\n            !this.getCenterInternal() ||\n            !equals(this.getCenterInternal(), newCenter)) {\n            if (this.getAnimating()) {\n                this.cancelAnimations();\n            }\n            this.animateInternal({\n                rotation: newRotation,\n                center: newCenter,\n                resolution: newResolution,\n                duration: duration,\n                easing: easeOut,\n                anchor: anchor,\n            });\n        }\n    };\n    /**\n     * Notify the View that an interaction has started.\n     * The view state will be resolved to a stable one if needed\n     * (depending on its constraints).\n     * @api\n     */\n    View.prototype.beginInteraction = function () {\n        this.resolveConstraints(0);\n        this.setHint(ViewHint.INTERACTING, 1);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     * @api\n     */\n    View.prototype.endInteraction = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        var anchor = opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n        this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n    };\n    /**\n     * Notify the View that an interaction has ended. The view state will be resolved\n     * to a stable one if needed (depending on its constraints).\n     * @param {number=} opt_duration Animation duration in ms.\n     * @param {number=} opt_resolutionDirection Which direction to zoom.\n     * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The origin of the transformation.\n     */\n    View.prototype.endInteractionInternal = function (opt_duration, opt_resolutionDirection, opt_anchor) {\n        this.setHint(ViewHint.INTERACTING, -1);\n        this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n    };\n    /**\n     * Get a valid position for the view center according to the current constraints.\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n     * @param {number=} opt_targetResolution Target resolution. If not supplied, the current one will be used.\n     * This is useful to guess a valid center position at a different zoom level.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n     */\n    View.prototype.getConstrainedCenter = function (targetCenter, opt_targetResolution) {\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.center(targetCenter, opt_targetResolution || this.getResolution(), size);\n    };\n    /**\n     * Get a valid zoom level according to the current view constraints.\n     * @param {number|undefined} targetZoom Target zoom.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid zoom level.\n     */\n    View.prototype.getConstrainedZoom = function (targetZoom, opt_direction) {\n        var targetRes = this.getResolutionForZoom(targetZoom);\n        return this.getZoomForResolution(this.getConstrainedResolution(targetRes, opt_direction));\n    };\n    /**\n     * Get a valid resolution according to the current view constraints.\n     * @param {number|undefined} targetResolution Target resolution.\n     * @param {number=} [opt_direction=0] Indicate which resolution should be used\n     * by a renderer if the view resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @return {number|undefined} Valid resolution.\n     */\n    View.prototype.getConstrainedResolution = function (targetResolution, opt_direction) {\n        var direction = opt_direction || 0;\n        var size = this.getViewportSize_(this.getRotation());\n        return this.constraints_.resolution(targetResolution, direction, size);\n    };\n    return View;\n}(BaseObject));\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n    setTimeout(function () {\n        callback(returnValue);\n    }, 0);\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n    if (options.extent !== undefined) {\n        var smooth = options.smoothExtentConstraint !== undefined\n            ? options.smoothExtentConstraint\n            : true;\n        return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n    }\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    if (options.multiWorld !== true && projection.isGlobal()) {\n        var extent = projection.getExtent().slice();\n        extent[0] = -Infinity;\n        extent[2] = Infinity;\n        return createExtent(extent, false, false);\n    }\n    return centerNone;\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n    var resolutionConstraint;\n    var maxResolution;\n    var minResolution;\n    // TODO: move these to be ol constants\n    // see https://github.com/openlayers/openlayers/issues/2076\n    var defaultMaxZoom = 28;\n    var defaultZoomFactor = 2;\n    var minZoom = options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n    var maxZoom = options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n    var zoomFactor = options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n    var multiWorld = options.multiWorld !== undefined ? options.multiWorld : false;\n    var smooth = options.smoothResolutionConstraint !== undefined\n        ? options.smoothResolutionConstraint\n        : true;\n    var showFullExtent = options.showFullExtent !== undefined ? options.showFullExtent : false;\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var projExtent = projection.getExtent();\n    var constrainOnlyCenter = options.constrainOnlyCenter;\n    var extent = options.extent;\n    if (!multiWorld && !extent && projection.isGlobal()) {\n        constrainOnlyCenter = false;\n        extent = projExtent;\n    }\n    if (options.resolutions !== undefined) {\n        var resolutions = options.resolutions;\n        maxResolution = resolutions[minZoom];\n        minResolution =\n            resolutions[maxZoom] !== undefined\n                ? resolutions[maxZoom]\n                : resolutions[resolutions.length - 1];\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToResolutions(resolutions, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    else {\n        // calculate the default min and max resolution\n        var size = !projExtent\n            ? // use an extent that can fit the whole world if need be\n                (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n            : Math.max(getWidth(projExtent), getHeight(projExtent));\n        var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n        var defaultMinResolution = defaultMaxResolution /\n            Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n        // user provided maxResolution takes precedence\n        maxResolution = options.maxResolution;\n        if (maxResolution !== undefined) {\n            minZoom = 0;\n        }\n        else {\n            maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n        }\n        // user provided minResolution takes precedence\n        minResolution = options.minResolution;\n        if (minResolution === undefined) {\n            if (options.maxZoom !== undefined) {\n                if (options.maxResolution !== undefined) {\n                    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n                else {\n                    minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n                }\n            }\n            else {\n                minResolution = defaultMinResolution;\n            }\n        }\n        // given discrete zoom levels, minResolution may be different than provided\n        maxZoom =\n            minZoom +\n                Math.floor(Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n        minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n        if (options.constrainResolution) {\n            resolutionConstraint = createSnapToPower(zoomFactor, maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n        else {\n            resolutionConstraint = createMinMaxResolution(maxResolution, minResolution, smooth, !constrainOnlyCenter && extent, showFullExtent);\n        }\n    }\n    return {\n        constraint: resolutionConstraint,\n        maxResolution: maxResolution,\n        minResolution: minResolution,\n        minZoom: minZoom,\n        zoomFactor: zoomFactor,\n    };\n}\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n    var enableRotation = options.enableRotation !== undefined ? options.enableRotation : true;\n    if (enableRotation) {\n        var constrainRotation = options.constrainRotation;\n        if (constrainRotation === undefined || constrainRotation === true) {\n            return createSnapToZero();\n        }\n        else if (constrainRotation === false) {\n            return rotationNone;\n        }\n        else if (typeof constrainRotation === 'number') {\n            return createSnapToN(constrainRotation);\n        }\n        else {\n            return rotationNone;\n        }\n    }\n    else {\n        return disable;\n    }\n}\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n    if (animation.sourceCenter && animation.targetCenter) {\n        if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n            return false;\n        }\n    }\n    if (animation.sourceResolution !== animation.targetResolution) {\n        return false;\n    }\n    if (animation.sourceRotation !== animation.targetRotation) {\n        return false;\n    }\n    return true;\n}\nexport default View;\n//# sourceMappingURL=View.js.map","/**\n * @module ol/TileState\n */\n/**\n * @enum {number}\n */\nexport default {\n    IDLE: 0,\n    LOADING: 1,\n    LOADED: 2,\n    /**\n     * Indicates that tile loading failed\n     * @type {number}\n     */\n    ERROR: 3,\n    EMPTY: 4,\n};\n//# sourceMappingURL=TileState.js.map","<template>\r\n  <div class=\"plr\">\r\n    <div ref=\"map\" :id=\"id\" class=\"w100 h100\"></div>\r\n    <div class=\"layer-box\">\r\n      <div @click=\"changeMap(0)\" class=\"layer\" :class=\"{active: activeIndex == 0}\">\r\n        <img src=\"./images/standardMap.svg\" alt=\"标准图\">\r\n        <span>标准图</span>\r\n      </div>\r\n      <div @click=\"changeMap(1)\" class=\"layer\" :class=\"{active: activeIndex == 1}\">\r\n        <img src=\"./images/satelliteMap.svg\" alt=\"卫星图\">\r\n        <span>卫星图</span>\r\n      </div>\r\n    </div>\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport elementResizeDetector from \"element-resize-detector\";\r\nimport \"ol/ol.css\"; // 样式\r\nimport Map from \"ol/Map\"; // 地图\r\nimport View from \"ol/View\"; // 视图\r\nimport { Tile } from \"ol/layer\"; // 瓦片\r\nimport { XYZ } from \"ol/source\"; // 地图源\r\n\r\nexport default {\r\n  name: \"viMap\",\r\n  data() {\r\n    const webConfig = JSON.parse(sessionStorage.getItem(\"webConfig\") || \"{}\");\r\n    return {\r\n      mapConfig: webConfig.map || {},\r\n      id: `map_${Math.random().toString().slice(-3)}`,\r\n      map: null,\r\n      erd: null,\r\n      activeIndex: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    changeMap(activeIndex) {\r\n      if (!this.map) return;\r\n      const layers = this.map.getLayers().getArray();\r\n      layers[activeIndex].setVisible(true);\r\n      layers[1 - activeIndex].setVisible(false);\r\n      this.activeIndex = activeIndex;\r\n    },\r\n    initMap() {\r\n      const tileLayer = [\r\n        new Tile({\r\n          visible: true,\r\n          source: new XYZ({\r\n            maxZoom: 18,\r\n            url: \"http://wprd0{1-4}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&style=7&x={x}&y={y}&z={z}\"\r\n          }),\r\n        }),\r\n        new Tile({\r\n          visible: false,\r\n          source: new XYZ({\r\n            maxZoom: 18,\r\n            url: \"http://wprd0{1-4}.is.autonavi.com/appmaptile?lang=zh_cn&size=1&style=6&x={x}&y={y}&z={z}\"\r\n          }),\r\n        })\r\n      ];\r\n      this.map = new Map({\r\n        target: this.id,\r\n        layers: tileLayer,\r\n        view: new View({\r\n          center: this.mapConfig.center,\r\n          projection: \"EPSG:4326\", // 4326坐标系\r\n          zoom: this.mapConfig.defaultZoom,\r\n          minZoom: 8,\r\n          maxZoom: this.mapConfig.maxZoom,\r\n        }),\r\n      });\r\n      this.$emit(\"onMount\", this.map);\r\n    },\r\n    resize() {\r\n      if (!this.map) return;\r\n      this.map.updateSize();\r\n    },\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n    this.erd = elementResizeDetector();\r\n    this.erd.listenTo(this.$refs.map, this.resize);\r\n  },\r\n  beforeUnmount() {\r\n    this.erd.uninstall(this.$refs.map);\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.layer-box {\r\n  position: absolute;\r\n  right: 12px;\r\n  top: 50px;\r\n  border-radius: 4px;\r\n  background: #FFFFFF;\r\n  border: 1px solid #DDD;\r\n  .layer {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 4px;\r\n    cursor: pointer;\r\n    border-top: 1px solid #000;\r\n    &:first-child {\r\n      border-top: none;\r\n    }\r\n    img {\r\n      width: 25px;\r\n      height: 25px;\r\n    }\r\n    span {\r\n      font-size: 12px;\r\n    }\r\n    &.active {\r\n      span {\r\n        color: #2d8cf0;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport { abstract } from './util.js';\nimport { easeIn } from './easing.js';\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /** @class */ (function (_super) {\n    __extends(Tile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {Options=} opt_options Tile options.\n     */\n    function Tile(tileCoord, state, opt_options) {\n        var _this = _super.call(this) || this;\n        var options = opt_options ? opt_options : {};\n        /**\n         * @type {import(\"./tilecoord.js\").TileCoord}\n         */\n        _this.tileCoord = tileCoord;\n        /**\n         * @protected\n         * @type {import(\"./TileState.js\").default}\n         */\n        _this.state = state;\n        /**\n         * An \"interim\" tile for this tile. The interim tile may be used while this\n         * one is loading, for \"smooth\" transitions when changing params/dimensions\n         * on the source.\n         * @type {Tile}\n         */\n        _this.interimTile = null;\n        /**\n         * The tile is available at the highest possible resolution. Subclasses can\n         * set this to `false` initially. Tile load listeners will not be\n         * unregistered before this is set to `true` and a `#changed()` is called.\n         * @type {boolean}\n         */\n        _this.hifi = true;\n        /**\n         * A key assigned to the tile. This is used by the tile source to determine\n         * if this tile can effectively be used, or if a new tile should be created\n         * and this one be used as an interim tile for this new tile.\n         * @type {string}\n         */\n        _this.key = '';\n        /**\n         * The duration for the opacity transition.\n         * @type {number}\n         */\n        _this.transition_ =\n            options.transition === undefined ? 250 : options.transition;\n        /**\n         * Lookup of start times for rendering transitions.  If the start time is\n         * equal to -1, the transition is complete.\n         * @type {Object<string, number>}\n         */\n        _this.transitionStarts_ = {};\n        return _this;\n    }\n    /**\n     * @protected\n     */\n    Tile.prototype.changed = function () {\n        this.dispatchEvent(EventType.CHANGE);\n    };\n    /**\n     * Called by the tile cache when the tile is removed from the cache due to expiry\n     */\n    Tile.prototype.release = function () { };\n    /**\n     * @return {string} Key.\n     */\n    Tile.prototype.getKey = function () {\n        return this.key + '/' + this.tileCoord;\n    };\n    /**\n     * Get the interim tile most suitable for rendering using the chain of interim\n     * tiles. This corresponds to the  most recent tile that has been loaded, if no\n     * such tile exists, the original tile is returned.\n     * @return {!Tile} Best tile for rendering.\n     */\n    Tile.prototype.getInterimTile = function () {\n        if (!this.interimTile) {\n            //empty chain\n            return this;\n        }\n        var tile = this.interimTile;\n        // find the first loaded tile and return it. Since the chain is sorted in\n        // decreasing order of creation time, there is no need to search the remainder\n        // of the list (all those tiles correspond to older requests and will be\n        // cleaned up by refreshInterimChain)\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                // Show tile immediately instead of fading it in after loading, because\n                // the interim tile is in place already\n                this.transition_ = 0;\n                return tile;\n            }\n            tile = tile.interimTile;\n        } while (tile);\n        // we can not find a better tile\n        return this;\n    };\n    /**\n     * Goes through the chain of interim tiles and discards sections of the chain\n     * that are no longer relevant.\n     */\n    Tile.prototype.refreshInterimChain = function () {\n        if (!this.interimTile) {\n            return;\n        }\n        var tile = this.interimTile;\n        var prev = /** @type {Tile} */ (this);\n        do {\n            if (tile.getState() == TileState.LOADED) {\n                //we have a loaded tile, we can discard the rest of the list\n                //we would could abort any LOADING tile request\n                //older than this tile (i.e. any LOADING tile following this entry in the chain)\n                tile.interimTile = null;\n                break;\n            }\n            else if (tile.getState() == TileState.LOADING) {\n                //keep this LOADING tile any loaded tiles later in the chain are\n                //older than this tile, so we're still interested in the request\n                prev = tile;\n            }\n            else if (tile.getState() == TileState.IDLE) {\n                //the head of the list is the most current tile, we don't need\n                //to start any other requests for this chain\n                prev.interimTile = tile.interimTile;\n            }\n            else {\n                prev = tile;\n            }\n            tile = prev.interimTile;\n        } while (tile);\n    };\n    /**\n     * Get the tile coordinate for this tile.\n     * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n     * @api\n     */\n    Tile.prototype.getTileCoord = function () {\n        return this.tileCoord;\n    };\n    /**\n     * @return {import(\"./TileState.js\").default} State.\n     */\n    Tile.prototype.getState = function () {\n        return this.state;\n    };\n    /**\n     * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n     * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n     * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n     * the tile queue and will block other requests.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @api\n     */\n    Tile.prototype.setState = function (state) {\n        if (this.state !== TileState.ERROR && this.state > state) {\n            throw new Error('Tile load sequence violation');\n        }\n        this.state = state;\n        this.changed();\n    };\n    /**\n     * Load the image or retry if loading previously failed.\n     * Loading is taken care of by the tile queue, and calling this method is\n     * only needed for preloading or for reloading in case of an error.\n     * @abstract\n     * @api\n     */\n    Tile.prototype.load = function () {\n        abstract();\n    };\n    /**\n     * Get the alpha value for rendering.\n     * @param {string} id An id for the renderer.\n     * @param {number} time The render frame time.\n     * @return {number} A number between 0 and 1.\n     */\n    Tile.prototype.getAlpha = function (id, time) {\n        if (!this.transition_) {\n            return 1;\n        }\n        var start = this.transitionStarts_[id];\n        if (!start) {\n            start = time;\n            this.transitionStarts_[id] = start;\n        }\n        else if (start === -1) {\n            return 1;\n        }\n        var delta = time - start + 1000 / 60; // avoid rendering at 0\n        if (delta >= this.transition_) {\n            return 1;\n        }\n        return easeIn(delta / this.transition_);\n    };\n    /**\n     * Determine if a tile is in an alpha transition.  A tile is considered in\n     * transition if tile.getAlpha() has not yet been called or has been called\n     * and returned 1.\n     * @param {string} id An id for the renderer.\n     * @return {boolean} The tile is in transition.\n     */\n    Tile.prototype.inTransition = function (id) {\n        if (!this.transition_) {\n            return false;\n        }\n        return this.transitionStarts_[id] !== -1;\n    };\n    /**\n     * Mark a transition as complete.\n     * @param {string} id An id for the renderer.\n     */\n    Tile.prototype.endTransition = function (id) {\n        if (this.transition_) {\n            this.transitionStarts_[id] = -1;\n        }\n    };\n    return Tile;\n}(EventTarget));\nexport default Tile;\n//# sourceMappingURL=Tile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { listenImage } from './Image.js';\nvar ImageTile = /** @class */ (function (_super) {\n    __extends(ImageTile, _super);\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"./TileState.js\").default} state State.\n     * @param {string} src Image source URI.\n     * @param {?string} crossOrigin Cross origin.\n     * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n     */\n    function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n        var _this = _super.call(this, tileCoord, state, opt_options) || this;\n        /**\n         * @private\n         * @type {?string}\n         */\n        _this.crossOrigin_ = crossOrigin;\n        /**\n         * Image URI\n         *\n         * @private\n         * @type {string}\n         */\n        _this.src_ = src;\n        /**\n         * @private\n         * @type {HTMLImageElement|HTMLCanvasElement}\n         */\n        _this.image_ = new Image();\n        if (crossOrigin !== null) {\n            _this.image_.crossOrigin = crossOrigin;\n        }\n        /**\n         * @private\n         * @type {?function():void}\n         */\n        _this.unlisten_ = null;\n        /**\n         * @private\n         * @type {import(\"./Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction_ = tileLoadFunction;\n        return _this;\n    }\n    /**\n     * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n     * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n     * @api\n     */\n    ImageTile.prototype.getImage = function () {\n        return this.image_;\n    };\n    /**\n     * @return {string} Key.\n     */\n    ImageTile.prototype.getKey = function () {\n        return this.src_;\n    };\n    /**\n     * Tracks loading or read errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageError_ = function () {\n        this.state = TileState.ERROR;\n        this.unlistenImage_();\n        this.image_ = getBlankImage();\n        this.changed();\n    };\n    /**\n     * Tracks successful image load.\n     *\n     * @private\n     */\n    ImageTile.prototype.handleImageLoad_ = function () {\n        var image = /** @type {HTMLImageElement} */ (this.image_);\n        if (image.naturalWidth && image.naturalHeight) {\n            this.state = TileState.LOADED;\n        }\n        else {\n            this.state = TileState.EMPTY;\n        }\n        this.unlistenImage_();\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     * @api\n     */\n    ImageTile.prototype.load = function () {\n        if (this.state == TileState.ERROR) {\n            this.state = TileState.IDLE;\n            this.image_ = new Image();\n            if (this.crossOrigin_ !== null) {\n                this.image_.crossOrigin = this.crossOrigin_;\n            }\n        }\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            this.tileLoadFunction_(this, this.src_);\n            this.unlisten_ = listenImage(this.image_, this.handleImageLoad_.bind(this), this.handleImageError_.bind(this));\n        }\n    };\n    /**\n     * Discards event handlers which listen for load completion or errors.\n     *\n     * @private\n     */\n    ImageTile.prototype.unlistenImage_ = function () {\n        if (this.unlisten_) {\n            this.unlisten_();\n            this.unlisten_ = null;\n        }\n    };\n    return ImageTile;\n}(Tile));\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n    var ctx = createCanvasContext2D(1, 1);\n    ctx.fillStyle = 'rgba(0,0,0,0)';\n    ctx.fillRect(0, 0, 1, 1);\n    return ctx.canvas;\n}\nexport default ImageTile;\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/reproj\n */\nimport { IMAGE_SMOOTHING_DISABLED } from './source/common.js';\nimport { assign } from './obj.js';\nimport { containsCoordinate, createEmpty, extend, forEachCorner, getCenter, getHeight, getTopLeft, getWidth, } from './extent.js';\nimport { createCanvasContext2D } from './dom.js';\nimport { getPointResolution, transform } from './proj.js';\nimport { solveLinearSystem } from './math.js';\nvar brokenDiagonalRendering_;\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n    ctx.beginPath();\n    ctx.moveTo(0, 0);\n    ctx.lineTo(u1, v1);\n    ctx.lineTo(u2, v2);\n    ctx.closePath();\n    ctx.save();\n    ctx.clip();\n    ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n    ctx.restore();\n}\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n    // the values ought to be close to the rgba(210, 0, 0, 0.75)\n    return (Math.abs(data[offset * 4] - 210) > 2 ||\n        Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2);\n}\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n    if (brokenDiagonalRendering_ === undefined) {\n        var ctx = document.createElement('canvas').getContext('2d');\n        ctx.globalCompositeOperation = 'lighter';\n        ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n        drawTestTriangle(ctx, 4, 5, 4, 0);\n        drawTestTriangle(ctx, 4, 5, 0, 5);\n        var data = ctx.getImageData(0, 0, 3, 3).data;\n        brokenDiagonalRendering_ =\n            verifyBrokenDiagonalRendering(data, 0) ||\n                verifyBrokenDiagonalRendering(data, 4) ||\n                verifyBrokenDiagonalRendering(data, 8);\n    }\n    return brokenDiagonalRendering_;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution) {\n    var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n    // calculate the ideal resolution of the source data\n    var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n    var targetMetersPerUnit = targetProj.getMetersPerUnit();\n    if (targetMetersPerUnit !== undefined) {\n        sourceResolution *= targetMetersPerUnit;\n    }\n    var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n    if (sourceMetersPerUnit !== undefined) {\n        sourceResolution /= sourceMetersPerUnit;\n    }\n    // Based on the projection properties, the point resolution at the specified\n    // coordinates may be slightly different. We need to reverse-compensate this\n    // in order to achieve optimal results.\n    var sourceExtent = sourceProj.getExtent();\n    if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n        var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n            sourceResolution;\n        if (isFinite(compensationFactor) && compensationFactor > 0) {\n            sourceResolution /= compensationFactor;\n        }\n    }\n    return sourceResolution;\n}\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(sourceProj, targetProj, targetExtent, targetResolution) {\n    var targetCenter = getCenter(targetExtent);\n    var sourceResolution = calculateSourceResolution(sourceProj, targetProj, targetCenter, targetResolution);\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n        forEachCorner(targetExtent, function (corner) {\n            sourceResolution = calculateSourceResolution(sourceProj, targetProj, corner, targetResolution);\n            return isFinite(sourceResolution) && sourceResolution > 0;\n        });\n    }\n    return sourceResolution;\n}\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @param {object=} opt_contextOptions Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio, sourceResolution, sourceExtent, targetResolution, targetExtent, triangulation, sources, gutter, opt_renderEdges, opt_contextOptions) {\n    var context = createCanvasContext2D(Math.round(pixelRatio * width), Math.round(pixelRatio * height));\n    assign(context, opt_contextOptions);\n    if (sources.length === 0) {\n        return context.canvas;\n    }\n    context.scale(pixelRatio, pixelRatio);\n    function pixelRound(value) {\n        return Math.round(value * pixelRatio) / pixelRatio;\n    }\n    context.globalCompositeOperation = 'lighter';\n    var sourceDataExtent = createEmpty();\n    sources.forEach(function (src, i, arr) {\n        extend(sourceDataExtent, src.extent);\n    });\n    var canvasWidthInUnits = getWidth(sourceDataExtent);\n    var canvasHeightInUnits = getHeight(sourceDataExtent);\n    var stitchContext = createCanvasContext2D(Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution), Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution));\n    assign(stitchContext, opt_contextOptions);\n    var stitchScale = pixelRatio / sourceResolution;\n    sources.forEach(function (src, i, arr) {\n        var xPos = src.extent[0] - sourceDataExtent[0];\n        var yPos = -(src.extent[3] - sourceDataExtent[3]);\n        var srcWidth = getWidth(src.extent);\n        var srcHeight = getHeight(src.extent);\n        // This test should never fail -- but it does. Need to find a fix the upstream condition\n        if (src.image.width > 0 && src.image.height > 0) {\n            stitchContext.drawImage(src.image, gutter, gutter, src.image.width - 2 * gutter, src.image.height - 2 * gutter, xPos * stitchScale, yPos * stitchScale, srcWidth * stitchScale, srcHeight * stitchScale);\n        }\n    });\n    var targetTopLeft = getTopLeft(targetExtent);\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n        /* Calculate affine transform (src -> dst)\n         * Resulting matrix can be used to transform coordinate\n         * from `sourceProjection` to destination pixels.\n         *\n         * To optimize number of context calls and increase numerical stability,\n         * we also do the following operations:\n         * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n         * here before solving the linear system so [ui, vi] are pixel coordinates.\n         *\n         * Src points: xi, yi\n         * Dst points: ui, vi\n         * Affine coefficients: aij\n         *\n         * | x0 y0 1  0  0 0 |   |a00|   |u0|\n         * | x1 y1 1  0  0 0 |   |a01|   |u1|\n         * | x2 y2 1  0  0 0 | x |a02| = |u2|\n         * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n         * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n         * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n         */\n        var source = triangle.source;\n        var target = triangle.target;\n        var x0 = source[0][0], y0 = source[0][1];\n        var x1 = source[1][0], y1 = source[1][1];\n        var x2 = source[2][0], y2 = source[2][1];\n        // Make sure that everything is on pixel boundaries\n        var u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n        var v0 = pixelRound(-(target[0][1] - targetTopLeft[1]) / targetResolution);\n        var u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n        var v1 = pixelRound(-(target[1][1] - targetTopLeft[1]) / targetResolution);\n        var u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n        var v2 = pixelRound(-(target[2][1] - targetTopLeft[1]) / targetResolution);\n        // Shift all the source points to improve numerical stability\n        // of all the subsequent calculations. The [x0, y0] is used here.\n        // This is also used to simplify the linear system.\n        var sourceNumericalShiftX = x0;\n        var sourceNumericalShiftY = y0;\n        x0 = 0;\n        y0 = 0;\n        x1 -= sourceNumericalShiftX;\n        y1 -= sourceNumericalShiftY;\n        x2 -= sourceNumericalShiftX;\n        y2 -= sourceNumericalShiftY;\n        var augmentedMatrix = [\n            [x1, y1, 0, 0, u1 - u0],\n            [x2, y2, 0, 0, u2 - u0],\n            [0, 0, x1, y1, v1 - v0],\n            [0, 0, x2, y2, v2 - v0],\n        ];\n        var affineCoefs = solveLinearSystem(augmentedMatrix);\n        if (!affineCoefs) {\n            return;\n        }\n        context.save();\n        context.beginPath();\n        if (isBrokenDiagonalRendering() ||\n            opt_contextOptions === IMAGE_SMOOTHING_DISABLED) {\n            // Make sure that all lines are horizontal or vertical\n            context.moveTo(u1, v1);\n            // This is the diagonal line. Do it in 4 steps\n            var steps = 4;\n            var ud = u0 - u1;\n            var vd = v0 - v1;\n            for (var step = 0; step < steps; step++) {\n                // Go horizontally\n                context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound((step * vd) / (steps - 1)));\n                // Go vertically\n                if (step != steps - 1) {\n                    context.lineTo(u1 + pixelRound(((step + 1) * ud) / steps), v1 + pixelRound(((step + 1) * vd) / (steps - 1)));\n                }\n            }\n            // We are almost at u0r, v0r\n            context.lineTo(u2, v2);\n        }\n        else {\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n        }\n        context.clip();\n        context.transform(affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n        context.translate(sourceDataExtent[0] - sourceNumericalShiftX, sourceDataExtent[3] - sourceNumericalShiftY);\n        context.scale(sourceResolution / pixelRatio, -sourceResolution / pixelRatio);\n        context.drawImage(stitchContext.canvas, 0, 0);\n        context.restore();\n    });\n    if (opt_renderEdges) {\n        context.save();\n        context.globalCompositeOperation = 'source-over';\n        context.strokeStyle = 'black';\n        context.lineWidth = 1;\n        triangulation.getTriangles().forEach(function (triangle, i, arr) {\n            var target = triangle.target;\n            var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n            var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n            var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n            var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n            var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n            var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n            context.beginPath();\n            context.moveTo(u1, v1);\n            context.lineTo(u0, v0);\n            context.lineTo(u2, v2);\n            context.closePath();\n            context.stroke();\n        });\n        context.restore();\n    }\n    return context.canvas;\n}\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/common\n */\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n//# sourceMappingURL=common.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport { boundingExtent, createEmpty, extendCoordinate, getArea, getBottomLeft, getBottomRight, getTopLeft, getTopRight, getWidth, intersects, } from '../extent.js';\nimport { getTransform } from '../proj.js';\nimport { log2, modulo } from '../math.js';\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = /** @class */ (function () {\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n     * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n     * @param {number} errorThreshold Acceptable error (in source units).\n     * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n     */\n    function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold, opt_destinationResolution) {\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.sourceProj_ = sourceProj;\n        /**\n         * @type {import(\"../proj/Projection.js\").default}\n         * @private\n         */\n        this.targetProj_ = targetProj;\n        /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n        var transformInvCache = {};\n        var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n        /**\n         * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n         * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n         * @private\n         */\n        this.transformInv_ = function (c) {\n            var key = c[0] + '/' + c[1];\n            if (!transformInvCache[key]) {\n                transformInvCache[key] = transformInv(c);\n            }\n            return transformInvCache[key];\n        };\n        /**\n         * @type {import(\"../extent.js\").Extent}\n         * @private\n         */\n        this.maxSourceExtent_ = maxSourceExtent;\n        /**\n         * @type {number}\n         * @private\n         */\n        this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n        /**\n         * @type {Array<Triangle>}\n         * @private\n         */\n        this.triangles_ = [];\n        /**\n         * Indicates that the triangulation crosses edge of the source projection.\n         * @type {boolean}\n         * @private\n         */\n        this.wrapsXInSource_ = false;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this.canWrapXInSource_ =\n            this.sourceProj_.canWrapX() &&\n                !!maxSourceExtent &&\n                !!this.sourceProj_.getExtent() &&\n                getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n            ? getWidth(this.sourceProj_.getExtent())\n            : null;\n        /**\n         * @type {?number}\n         * @private\n         */\n        this.targetWorldWidth_ = this.targetProj_.getExtent()\n            ? getWidth(this.targetProj_.getExtent())\n            : null;\n        var destinationTopLeft = getTopLeft(targetExtent);\n        var destinationTopRight = getTopRight(targetExtent);\n        var destinationBottomRight = getBottomRight(targetExtent);\n        var destinationBottomLeft = getBottomLeft(targetExtent);\n        var sourceTopLeft = this.transformInv_(destinationTopLeft);\n        var sourceTopRight = this.transformInv_(destinationTopRight);\n        var sourceBottomRight = this.transformInv_(destinationBottomRight);\n        var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n        /*\n         * The maxSubdivision controls how many splittings of the target area can\n         * be done. The idea here is to do a linear mapping of the target areas\n         * but the actual overal reprojection (can be) extremely non-linear. The\n         * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n         * tile size. However this function is also called to remap canvas rendered\n         * layers which can be much larger. This calculation increases the maxSubdivision\n         * value by the right factor so that each 256x256 pixel area has\n         * MAX_SUBDIVISION divisions.\n         */\n        var maxSubdivision = MAX_SUBDIVISION +\n            (opt_destinationResolution\n                ? Math.max(0, Math.ceil(log2(getArea(targetExtent) /\n                    (opt_destinationResolution *\n                        opt_destinationResolution *\n                        256 *\n                        256))))\n                : 0);\n        this.addQuad_(destinationTopLeft, destinationTopRight, destinationBottomRight, destinationBottomLeft, sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft, maxSubdivision);\n        if (this.wrapsXInSource_) {\n            var leftBound_1 = Infinity;\n            this.triangles_.forEach(function (triangle, i, arr) {\n                leftBound_1 = Math.min(leftBound_1, triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n            });\n            // Shift triangles to be as close to `leftBound` as possible\n            // (if the distance is more than `worldWidth / 2` it can be closer.\n            this.triangles_.forEach(function (triangle) {\n                if (Math.max(triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]) -\n                    leftBound_1 >\n                    this.sourceWorldWidth_ / 2) {\n                    var newTriangle = [\n                        [triangle.source[0][0], triangle.source[0][1]],\n                        [triangle.source[1][0], triangle.source[1][1]],\n                        [triangle.source[2][0], triangle.source[2][1]],\n                    ];\n                    if (newTriangle[0][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[0][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[1][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[1][0] -= this.sourceWorldWidth_;\n                    }\n                    if (newTriangle[2][0] - leftBound_1 > this.sourceWorldWidth_ / 2) {\n                        newTriangle[2][0] -= this.sourceWorldWidth_;\n                    }\n                    // Rarely (if the extent contains both the dateline and prime meridian)\n                    // the shift can in turn break some triangles.\n                    // Detect this here and don't shift in such cases.\n                    var minX = Math.min(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    var maxX = Math.max(newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n                    if (maxX - minX < this.sourceWorldWidth_ / 2) {\n                        triangle.source = newTriangle;\n                    }\n                }\n            }.bind(this));\n        }\n        transformInvCache = {};\n    }\n    /**\n     * Adds triangle to the triangulation.\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @private\n     */\n    Triangulation.prototype.addTriangle_ = function (a, b, c, aSrc, bSrc, cSrc) {\n        this.triangles_.push({\n            source: [aSrc, bSrc, cSrc],\n            target: [a, b, c],\n        });\n    };\n    /**\n     * Adds quad (points in clock-wise order) to the triangulation\n     * (and reprojects the vertices) if valid.\n     * Performs quad subdivision if needed to increase precision.\n     *\n     * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n     * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n     * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n     * @private\n     */\n    Triangulation.prototype.addQuad_ = function (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n        var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n        var sourceCoverageX = this.sourceWorldWidth_\n            ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n            : null;\n        var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n        // when the quad is wrapped in the source projection\n        // it covers most of the projection extent, but not fully\n        var wrapsX = this.sourceProj_.canWrapX() &&\n            sourceCoverageX > 0.5 &&\n            sourceCoverageX < 1;\n        var needsSubdivision = false;\n        if (maxSubdivision > 0) {\n            if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n                var targetQuadExtent = boundingExtent([a, b, c, d]);\n                var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n                needsSubdivision =\n                    targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n            if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n                needsSubdivision =\n                    sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n            }\n        }\n        if (!needsSubdivision && this.maxSourceExtent_) {\n            if (isFinite(sourceQuadExtent[0]) &&\n                isFinite(sourceQuadExtent[1]) &&\n                isFinite(sourceQuadExtent[2]) &&\n                isFinite(sourceQuadExtent[3])) {\n                if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n                    // whole quad outside source projection extent -> ignore\n                    return;\n                }\n            }\n        }\n        var isNotFinite = 0;\n        if (!needsSubdivision) {\n            if (!isFinite(aSrc[0]) ||\n                !isFinite(aSrc[1]) ||\n                !isFinite(bSrc[0]) ||\n                !isFinite(bSrc[1]) ||\n                !isFinite(cSrc[0]) ||\n                !isFinite(cSrc[1]) ||\n                !isFinite(dSrc[0]) ||\n                !isFinite(dSrc[1])) {\n                if (maxSubdivision > 0) {\n                    needsSubdivision = true;\n                }\n                else {\n                    // It might be the case that only 1 of the points is infinite. In this case\n                    // we can draw a single triangle with the other three points\n                    isNotFinite =\n                        (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n                            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n                            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n                            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n                    if (isNotFinite != 1 &&\n                        isNotFinite != 2 &&\n                        isNotFinite != 4 &&\n                        isNotFinite != 8) {\n                        return;\n                    }\n                }\n            }\n        }\n        if (maxSubdivision > 0) {\n            if (!needsSubdivision) {\n                var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n                var centerSrc = this.transformInv_(center);\n                var dx = void 0;\n                if (wrapsX) {\n                    var centerSrcEstimX = (modulo(aSrc[0], sourceWorldWidth) +\n                        modulo(cSrc[0], sourceWorldWidth)) /\n                        2;\n                    dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n                }\n                else {\n                    dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n                }\n                var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n                var centerSrcErrorSquared = dx * dx + dy * dy;\n                needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n            }\n            if (needsSubdivision) {\n                if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n                    // split horizontally (top & bottom)\n                    var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n                    var bcSrc = this.transformInv_(bc);\n                    var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n                    var daSrc = this.transformInv_(da);\n                    this.addQuad_(a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n                    this.addQuad_(da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n                }\n                else {\n                    // split vertically (left & right)\n                    var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n                    var abSrc = this.transformInv_(ab);\n                    var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n                    var cdSrc = this.transformInv_(cd);\n                    this.addQuad_(a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n                    this.addQuad_(ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n                }\n                return;\n            }\n        }\n        if (wrapsX) {\n            if (!this.canWrapXInSource_) {\n                return;\n            }\n            this.wrapsXInSource_ = true;\n        }\n        // Exactly zero or one of *Src is not finite\n        // The triangles must have the diagonal line as the first side\n        // This is to allow easy code in reproj.s to make it straight for broken\n        // browsers that can't handle diagonal clipping\n        if ((isNotFinite & 0xb) == 0) {\n            this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n        }\n        if ((isNotFinite & 0xe) == 0) {\n            this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n        }\n        if (isNotFinite) {\n            // Try the other two triangles\n            if ((isNotFinite & 0xd) == 0) {\n                this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n            }\n            if ((isNotFinite & 0x7) == 0) {\n                this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n            }\n        }\n    };\n    /**\n     * Calculates extent of the 'source' coordinates from all the triangles.\n     *\n     * @return {import(\"../extent.js\").Extent} Calculated extent.\n     */\n    Triangulation.prototype.calculateSourceExtent = function () {\n        var extent = createEmpty();\n        this.triangles_.forEach(function (triangle, i, arr) {\n            var src = triangle.source;\n            extendCoordinate(extent, src[0]);\n            extendCoordinate(extent, src[1]);\n            extendCoordinate(extent, src[2]);\n        });\n        return extent;\n    };\n    /**\n     * @return {Array<Triangle>} Array of the calculated triangles.\n     */\n    Triangulation.prototype.getTriangles = function () {\n        return this.triangles_;\n    };\n    return Triangulation;\n}());\nexport default Triangulation;\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/source/common\n */\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport var IMAGE_SMOOTHING_DISABLED = {\n    imageSmoothingEnabled: false,\n    msImageSmoothingEnabled: false,\n};\n//# sourceMappingURL=common.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/reproj/Tile\n */\nimport { ERROR_THRESHOLD } from './common.js';\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport { calculateSourceExtentResolution, render as renderReprojected, } from '../reproj.js';\nimport { clamp } from '../math.js';\nimport { getArea, getIntersection } from '../extent.js';\nimport { listen, unlistenByKey } from '../events.js';\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /** @class */ (function (_super) {\n    __extends(ReprojTile, _super);\n    /**\n     * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n     * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n     * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {number} gutter Gutter of the source tiles.\n     * @param {FunctionType} getTileFunction\n     *     Function returning source tiles (z, x, y, pixelRatio).\n     * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n     * @param {boolean=} opt_renderEdges Render reprojection edges.\n     * @param {object=} opt_contextOptions Properties to set on the canvas context.\n     */\n    function ReprojTile(sourceProj, sourceTileGrid, targetProj, targetTileGrid, tileCoord, wrappedTileCoord, pixelRatio, gutter, getTileFunction, opt_errorThreshold, opt_renderEdges, opt_contextOptions) {\n        var _this = _super.call(this, tileCoord, TileState.IDLE) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n        /**\n         * @private\n         * @type {object}\n         */\n        _this.contextOptions_ = opt_contextOptions;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.pixelRatio_ = pixelRatio;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.gutter_ = gutter;\n        /**\n         * @private\n         * @type {HTMLCanvasElement}\n         */\n        _this.canvas_ = null;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.sourceTileGrid_ = sourceTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.targetTileGrid_ = targetTileGrid;\n        /**\n         * @private\n         * @type {import(\"../tilecoord.js\").TileCoord}\n         */\n        _this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n        /**\n         * @private\n         * @type {!Array<import(\"../Tile.js\").default>}\n         */\n        _this.sourceTiles_ = [];\n        /**\n         * @private\n         * @type {?Array<import(\"../events.js\").EventsKey>}\n         */\n        _this.sourcesListenerKeys_ = null;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.sourceZ_ = 0;\n        var targetExtent = targetTileGrid.getTileCoordExtent(_this.wrappedTileCoord_);\n        var maxTargetExtent = _this.targetTileGrid_.getExtent();\n        var maxSourceExtent = _this.sourceTileGrid_.getExtent();\n        var limitedTargetExtent = maxTargetExtent\n            ? getIntersection(targetExtent, maxTargetExtent)\n            : targetExtent;\n        if (getArea(limitedTargetExtent) === 0) {\n            // Tile is completely outside range -> EMPTY\n            // TODO: is it actually correct that the source even creates the tile ?\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var sourceProjExtent = sourceProj.getExtent();\n        if (sourceProjExtent) {\n            if (!maxSourceExtent) {\n                maxSourceExtent = sourceProjExtent;\n            }\n            else {\n                maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n            }\n        }\n        var targetResolution = targetTileGrid.getResolution(_this.wrappedTileCoord_[0]);\n        var sourceResolution = calculateSourceExtentResolution(sourceProj, targetProj, limitedTargetExtent, targetResolution);\n        if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n            // invalid sourceResolution -> EMPTY\n            // probably edges of the projections when no extent is defined\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        var errorThresholdInPixels = opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n        /**\n         * @private\n         * @type {!import(\"./Triangulation.js\").default}\n         */\n        _this.triangulation_ = new Triangulation(sourceProj, targetProj, limitedTargetExtent, maxSourceExtent, sourceResolution * errorThresholdInPixels, targetResolution);\n        if (_this.triangulation_.getTriangles().length === 0) {\n            // no valid triangles -> EMPTY\n            _this.state = TileState.EMPTY;\n            return _this;\n        }\n        _this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n        var sourceExtent = _this.triangulation_.calculateSourceExtent();\n        if (maxSourceExtent) {\n            if (sourceProj.canWrapX()) {\n                sourceExtent[1] = clamp(sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n                sourceExtent[3] = clamp(sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n            }\n            else {\n                sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n            }\n        }\n        if (!getArea(sourceExtent)) {\n            _this.state = TileState.EMPTY;\n        }\n        else {\n            var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(sourceExtent, _this.sourceZ_);\n            for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n                for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n                    var tile = getTileFunction(_this.sourceZ_, srcX, srcY, pixelRatio);\n                    if (tile) {\n                        _this.sourceTiles_.push(tile);\n                    }\n                }\n            }\n            if (_this.sourceTiles_.length === 0) {\n                _this.state = TileState.EMPTY;\n            }\n        }\n        return _this;\n    }\n    /**\n     * Get the HTML Canvas element for this tile.\n     * @return {HTMLCanvasElement} Canvas.\n     */\n    ReprojTile.prototype.getImage = function () {\n        return this.canvas_;\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.reproject_ = function () {\n        var sources = [];\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n            if (tile && tile.getState() == TileState.LOADED) {\n                sources.push({\n                    extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n                    image: tile.getImage(),\n                });\n            }\n        }.bind(this));\n        this.sourceTiles_.length = 0;\n        if (sources.length === 0) {\n            this.state = TileState.ERROR;\n        }\n        else {\n            var z = this.wrappedTileCoord_[0];\n            var size = this.targetTileGrid_.getTileSize(z);\n            var width = typeof size === 'number' ? size : size[0];\n            var height = typeof size === 'number' ? size : size[1];\n            var targetResolution = this.targetTileGrid_.getResolution(z);\n            var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n            var targetExtent = this.targetTileGrid_.getTileCoordExtent(this.wrappedTileCoord_);\n            this.canvas_ = renderReprojected(width, height, this.pixelRatio_, sourceResolution, this.sourceTileGrid_.getExtent(), targetResolution, targetExtent, this.triangulation_, sources, this.gutter_, this.renderEdges_, this.contextOptions_);\n            this.state = TileState.LOADED;\n        }\n        this.changed();\n    };\n    /**\n     * Load not yet loaded URI.\n     */\n    ReprojTile.prototype.load = function () {\n        if (this.state == TileState.IDLE) {\n            this.state = TileState.LOADING;\n            this.changed();\n            var leftToLoad_1 = 0;\n            this.sourcesListenerKeys_ = [];\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE || state == TileState.LOADING) {\n                    leftToLoad_1++;\n                    var sourceListenKey_1 = listen(tile, EventType.CHANGE, function (e) {\n                        var state = tile.getState();\n                        if (state == TileState.LOADED ||\n                            state == TileState.ERROR ||\n                            state == TileState.EMPTY) {\n                            unlistenByKey(sourceListenKey_1);\n                            leftToLoad_1--;\n                            if (leftToLoad_1 === 0) {\n                                this.unlistenSources_();\n                                this.reproject_();\n                            }\n                        }\n                    }, this);\n                    this.sourcesListenerKeys_.push(sourceListenKey_1);\n                }\n            }.bind(this));\n            this.sourceTiles_.forEach(function (tile, i, arr) {\n                var state = tile.getState();\n                if (state == TileState.IDLE) {\n                    tile.load();\n                }\n            });\n            if (leftToLoad_1 === 0) {\n                setTimeout(this.reproject_.bind(this), 0);\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ReprojTile.prototype.unlistenSources_ = function () {\n        this.sourcesListenerKeys_.forEach(unlistenByKey);\n        this.sourcesListenerKeys_ = null;\n    };\n    return ReprojTile;\n}(Tile));\nexport default ReprojTile;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/structs/LRUCache\n */\nimport { assert } from '../asserts.js';\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nvar LRUCache = /** @class */ (function () {\n    /**\n     * @param {number=} opt_highWaterMark High water mark.\n     */\n    function LRUCache(opt_highWaterMark) {\n        /**\n         * Desired max cache size after expireCache(). If set to 0, no cache entries\n         * will be pruned at all.\n         * @type {number}\n         */\n        this.highWaterMark =\n            opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n        /**\n         * @private\n         * @type {number}\n         */\n        this.count_ = 0;\n        /**\n         * @private\n         * @type {!Object<string, Entry>}\n         */\n        this.entries_ = {};\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.oldest_ = null;\n        /**\n         * @private\n         * @type {?Entry}\n         */\n        this.newest_ = null;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    LRUCache.prototype.canExpireCache = function () {\n        return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n    };\n    /**\n     * FIXME empty description for jsdoc\n     */\n    LRUCache.prototype.clear = function () {\n        this.count_ = 0;\n        this.entries_ = {};\n        this.oldest_ = null;\n        this.newest_ = null;\n    };\n    /**\n     * @param {string} key Key.\n     * @return {boolean} Contains key.\n     */\n    LRUCache.prototype.containsKey = function (key) {\n        return this.entries_.hasOwnProperty(key);\n    };\n    /**\n     * @param {function(T, string, LRUCache<T>): ?} f The function\n     *     to call for every entry from the oldest to the newer. This function takes\n     *     3 arguments (the entry value, the entry key and the LRUCache object).\n     *     The return value is ignored.\n     */\n    LRUCache.prototype.forEach = function (f) {\n        var entry = this.oldest_;\n        while (entry) {\n            f(entry.value_, entry.key_, this);\n            entry = entry.newer;\n        }\n    };\n    /**\n     * @param {string} key Key.\n     * @param {*=} opt_options Options (reserverd for subclasses).\n     * @return {T} Value.\n     */\n    LRUCache.prototype.get = function (key, opt_options) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            return entry.value_;\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n            this.oldest_.older = null;\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        entry.newer = null;\n        entry.older = this.newest_;\n        this.newest_.newer = entry;\n        this.newest_ = entry;\n        return entry.value_;\n    };\n    /**\n     * Remove an entry from the cache.\n     * @param {string} key The entry key.\n     * @return {T} The removed entry.\n     */\n    LRUCache.prototype.remove = function (key) {\n        var entry = this.entries_[key];\n        assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n        if (entry === this.newest_) {\n            this.newest_ = /** @type {Entry} */ (entry.older);\n            if (this.newest_) {\n                this.newest_.newer = null;\n            }\n        }\n        else if (entry === this.oldest_) {\n            this.oldest_ = /** @type {Entry} */ (entry.newer);\n            if (this.oldest_) {\n                this.oldest_.older = null;\n            }\n        }\n        else {\n            entry.newer.older = entry.older;\n            entry.older.newer = entry.newer;\n        }\n        delete this.entries_[key];\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @return {number} Count.\n     */\n    LRUCache.prototype.getCount = function () {\n        return this.count_;\n    };\n    /**\n     * @return {Array<string>} Keys.\n     */\n    LRUCache.prototype.getKeys = function () {\n        var keys = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            keys[i++] = entry.key_;\n        }\n        return keys;\n    };\n    /**\n     * @return {Array<T>} Values.\n     */\n    LRUCache.prototype.getValues = function () {\n        var values = new Array(this.count_);\n        var i = 0;\n        var entry;\n        for (entry = this.newest_; entry; entry = entry.older) {\n            values[i++] = entry.value_;\n        }\n        return values;\n    };\n    /**\n     * @return {T} Last value.\n     */\n    LRUCache.prototype.peekLast = function () {\n        return this.oldest_.value_;\n    };\n    /**\n     * @return {string} Last key.\n     */\n    LRUCache.prototype.peekLastKey = function () {\n        return this.oldest_.key_;\n    };\n    /**\n     * Get the key of the newest item in the cache.  Throws if the cache is empty.\n     * @return {string} The newest key.\n     */\n    LRUCache.prototype.peekFirstKey = function () {\n        return this.newest_.key_;\n    };\n    /**\n     * @return {T} value Value.\n     */\n    LRUCache.prototype.pop = function () {\n        var entry = this.oldest_;\n        delete this.entries_[entry.key_];\n        if (entry.newer) {\n            entry.newer.older = null;\n        }\n        this.oldest_ = /** @type {Entry} */ (entry.newer);\n        if (!this.oldest_) {\n            this.newest_ = null;\n        }\n        --this.count_;\n        return entry.value_;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.replace = function (key, value) {\n        this.get(key); // update `newest_`\n        this.entries_[key].value_ = value;\n    };\n    /**\n     * @param {string} key Key.\n     * @param {T} value Value.\n     */\n    LRUCache.prototype.set = function (key, value) {\n        assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n        var entry = {\n            key_: key,\n            newer: null,\n            older: this.newest_,\n            value_: value,\n        };\n        if (!this.newest_) {\n            this.oldest_ = entry;\n        }\n        else {\n            this.newest_.newer = entry;\n        }\n        this.newest_ = entry;\n        this.entries_[key] = entry;\n        ++this.count_;\n    };\n    /**\n     * Set a maximum number of entries for the cache.\n     * @param {number} size Cache size.\n     * @api\n     */\n    LRUCache.prototype.setSize = function (size) {\n        this.highWaterMark = size;\n    };\n    return LRUCache;\n}());\nexport default LRUCache;\n//# sourceMappingURL=LRUCache.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport { fromKey, getKey } from './tilecoord.js';\nvar TileCache = /** @class */ (function (_super) {\n    __extends(TileCache, _super);\n    function TileCache() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileCache.prototype.expireCache = function (usedTiles) {\n        while (this.canExpireCache()) {\n            var tile = this.peekLast();\n            if (tile.getKey() in usedTiles) {\n                break;\n            }\n            else {\n                this.pop().release();\n            }\n        }\n    };\n    /**\n     * Prune all tiles from the cache that don't have the same z as the newest tile.\n     */\n    TileCache.prototype.pruneExceptNewestZ = function () {\n        if (this.getCount() === 0) {\n            return;\n        }\n        var key = this.peekFirstKey();\n        var tileCoord = fromKey(key);\n        var z = tileCoord[0];\n        this.forEach(function (tile) {\n            if (tile.tileCoord[0] !== z) {\n                this.remove(getKey(tile.tileCoord));\n                tile.release();\n            }\n        }.bind(this));\n    };\n    return TileCache;\n}(LRUCache));\nexport default TileCache;\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/source/TileEventType\n */\n/**\n * @enum {string}\n */\nexport default {\n    /**\n     * Triggered when a tile starts loading.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n     * @api\n     */\n    TILELOADSTART: 'tileloadstart',\n    /**\n     * Triggered when a tile finishes loading, either when its data is loaded,\n     * or when loading was aborted because the tile is no longer needed.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n     * @api\n     */\n    TILELOADEND: 'tileloadend',\n    /**\n     * Triggered if tile loading results in an error.\n     * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n     * @api\n     */\n    TILELOADERROR: 'tileloaderror',\n};\n//# sourceMappingURL=TileEventType.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport { abstract } from '../util.js';\nimport { equivalent } from '../proj.js';\nimport { getKeyZXY, withinExtentAndZ } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection, wrapX, } from '../tilegrid.js';\nimport { scale as scaleSize, toSize } from '../size.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /** @class */ (function (_super) {\n    __extends(TileSource, _super);\n    /**\n     * @param {Options} options SourceTile source options.\n     */\n    function TileSource(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            attributionsCollapsible: options.attributionsCollapsible,\n            projection: options.projection,\n            state: options.state,\n            wrapX: options.wrapX,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n        /**\n         * @private\n         * @type {number}\n         */\n        _this.tilePixelRatio_ =\n            options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n        /**\n         * @protected\n         * @type {import(\"../tilegrid/TileGrid.js\").default}\n         */\n        _this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n        var tileSize = [256, 256];\n        var tileGrid = options.tileGrid;\n        if (tileGrid) {\n            toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n        }\n        /**\n         * @protected\n         * @type {import(\"../TileCache.js\").default}\n         */\n        _this.tileCache = new TileCache(options.cacheSize || 0);\n        /**\n         * @protected\n         * @type {import(\"../size.js\").Size}\n         */\n        _this.tmpSize = [0, 0];\n        /**\n         * @private\n         * @type {string}\n         */\n        _this.key_ = options.key || '';\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").Options}\n         */\n        _this.tileOptions = { transition: options.transition };\n        /**\n         * zDirection hint, read by the renderer. Indicates which resolution should be used\n         * by a renderer if the views resolution does not match any resolution of the tile source.\n         * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n         * will be used. If -1, the nearest higher resolution will be used.\n         * @type {number}\n         */\n        _this.zDirection = options.zDirection ? options.zDirection : 0;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileSource.prototype.canExpireCache = function () {\n        return this.tileCache.canExpireCache();\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileSource.prototype.expireCache = function (projection, usedTiles) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCache) {\n            tileCache.expireCache(usedTiles);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {number} z Zoom level.\n     * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n     * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n     *     loaded tile.  If the callback returns `false`, the tile will not be\n     *     considered loaded.\n     * @return {boolean} The tile range is fully covered with loaded tiles.\n     */\n    TileSource.prototype.forEachLoadedTile = function (projection, z, tileRange, callback) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (!tileCache) {\n            return false;\n        }\n        var covered = true;\n        var tile, tileCoordKey, loaded;\n        for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n            for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n                tileCoordKey = getKeyZXY(z, x, y);\n                loaded = false;\n                if (tileCache.containsKey(tileCoordKey)) {\n                    tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n                    loaded = tile.getState() === TileState.LOADED;\n                    if (loaded) {\n                        loaded = callback(tile) !== false;\n                    }\n                }\n                if (!loaded) {\n                    covered = false;\n                }\n            }\n        }\n        return covered;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileSource.prototype.getGutterForProjection = function (projection) {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileSource.prototype.getKey = function () {\n        return this.key_;\n    };\n    /**\n     * Set the value to be used as the key for all tiles in the source.\n     * @param {string} key The key for tiles.\n     * @protected\n     */\n    TileSource.prototype.setKey = function (key) {\n        if (this.key_ !== key) {\n            this.key_ = key;\n            this.changed();\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileSource.prototype.getOpaque = function (projection) {\n        return this.opaque_;\n    };\n    /**\n     * @return {Array<number>} Resolutions.\n     */\n    TileSource.prototype.getResolutions = function () {\n        return this.tileGrid.getResolutions();\n    };\n    /**\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileSource.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        return abstract();\n    };\n    /**\n     * Return the tile grid of the tile source.\n     * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     * @api\n     */\n    TileSource.prototype.getTileGrid = function () {\n        return this.tileGrid;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileSource.prototype.getTileGridForProjection = function (projection) {\n        if (!this.tileGrid) {\n            return getTileGridForProjection(projection);\n        }\n        else {\n            return this.tileGrid;\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     * @protected\n     */\n    TileSource.prototype.getTileCacheForProjection = function (projection) {\n        var thisProj = this.getProjection();\n        if (thisProj && !equivalent(thisProj, projection)) {\n            return null;\n        }\n        else {\n            return this.tileCache;\n        }\n    };\n    /**\n     * Get the tile pixel ratio for this source. Subclasses may override this\n     * method, which is meant to return a supported pixel ratio that matches the\n     * provided `pixelRatio` as close as possible.\n     * @param {number} pixelRatio Pixel ratio.\n     * @return {number} Tile pixel ratio.\n     */\n    TileSource.prototype.getTilePixelRatio = function (pixelRatio) {\n        return this.tilePixelRatio_;\n    };\n    /**\n     * @param {number} z Z.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../size.js\").Size} Tile size.\n     */\n    TileSource.prototype.getTilePixelSize = function (z, pixelRatio, projection) {\n        var tileGrid = this.getTileGridForProjection(projection);\n        var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n        var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n        if (tilePixelRatio == 1) {\n            return tileSize;\n        }\n        else {\n            return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n        }\n    };\n    /**\n     * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n     * is outside the resolution and extent range of the tile grid, `null` will be\n     * returned.\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n     * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n     *     null if no tile URL should be created for the passed `tileCoord`.\n     */\n    TileSource.prototype.getTileCoordForTileUrlFunction = function (tileCoord, opt_projection) {\n        var projection = opt_projection !== undefined ? opt_projection : this.getProjection();\n        var tileGrid = this.getTileGridForProjection(projection);\n        if (this.getWrapX() && projection.isGlobal()) {\n            tileCoord = wrapX(tileGrid, tileCoord, projection);\n        }\n        return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n    };\n    /**\n     * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n     * @api\n     */\n    TileSource.prototype.clear = function () {\n        this.tileCache.clear();\n    };\n    TileSource.prototype.refresh = function () {\n        this.clear();\n        _super.prototype.refresh.call(this);\n    };\n    /**\n     * Increases the cache size if needed\n     * @param {number} tileCount Minimum number of tiles needed.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.updateCacheSize = function (tileCount, projection) {\n        var tileCache = this.getTileCacheForProjection(projection);\n        if (tileCount > tileCache.highWaterMark) {\n            tileCache.highWaterMark = tileCount;\n        }\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @abstract\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    TileSource.prototype.useTile = function (z, x, y, projection) { };\n    return TileSource;\n}(Source));\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nvar TileSourceEvent = /** @class */ (function (_super) {\n    __extends(TileSourceEvent, _super);\n    /**\n     * @param {string} type Type.\n     * @param {import(\"../Tile.js\").default} tile The tile.\n     */\n    function TileSourceEvent(type, tile) {\n        var _this = _super.call(this, type) || this;\n        /**\n         * The tile related to the event.\n         * @type {import(\"../Tile.js\").default}\n         * @api\n         */\n        _this.tile = tile;\n        return _this;\n    }\n    return TileSourceEvent;\n}(Event));\nexport { TileSourceEvent };\nexport default TileSource;\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport { assert } from './asserts.js';\nimport { modulo } from './math.js';\nimport { hash as tileCoordHash } from './tilecoord.js';\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n    var zRegEx = /\\{z\\}/g;\n    var xRegEx = /\\{x\\}/g;\n    var yRegEx = /\\{y\\}/g;\n    var dashYRegEx = /\\{-y\\}/g;\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            return template\n                .replace(zRegEx, tileCoord[0].toString())\n                .replace(xRegEx, tileCoord[1].toString())\n                .replace(yRegEx, tileCoord[2].toString())\n                .replace(dashYRegEx, function () {\n                var z = tileCoord[0];\n                var range = tileGrid.getFullTileRange(z);\n                assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n                var y = range.getHeight() - tileCoord[2] - 1;\n                return y.toString();\n            });\n        }\n    });\n}\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n    var len = templates.length;\n    var tileUrlFunctions = new Array(len);\n    for (var i = 0; i < len; ++i) {\n        tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n    }\n    return createFromTileUrlFunctions(tileUrlFunctions);\n}\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n    if (tileUrlFunctions.length === 1) {\n        return tileUrlFunctions[0];\n    }\n    return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n            return undefined;\n        }\n        else {\n            var h = tileCoordHash(tileCoord);\n            var index = modulo(h, tileUrlFunctions.length);\n            return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n        }\n    });\n}\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n}\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n    var urls = [];\n    var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n    if (match) {\n        // char range\n        var startCharCode = match[1].charCodeAt(0);\n        var stopCharCode = match[2].charCodeAt(0);\n        var charCode = void 0;\n        for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n            urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n        }\n        return urls;\n    }\n    match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n    if (match) {\n        // number range\n        var stop_1 = parseInt(match[2], 10);\n        for (var i = parseInt(match[1], 10); i <= stop_1; i++) {\n            urls.push(url.replace(match[0], i.toString()));\n        }\n        return urls;\n    }\n    urls.push(url);\n    return urls;\n}\n//# sourceMappingURL=tileurlfunction.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, { TileSourceEvent } from './Tile.js';\nimport TileState from '../TileState.js';\nimport { createFromTemplates, expandUrl } from '../tileurlfunction.js';\nimport { getKeyZXY } from '../tilecoord.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /** @class */ (function (_super) {\n    __extends(UrlTile, _super);\n    /**\n     * @param {Options} options Image tile options.\n     */\n    function UrlTile(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tilePixelRatio: options.tilePixelRatio,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.generateTileUrlFunction_ =\n            _this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n        /**\n         * @protected\n         * @type {import(\"../Tile.js\").LoadFunction}\n         */\n        _this.tileLoadFunction = options.tileLoadFunction;\n        if (options.tileUrlFunction) {\n            _this.tileUrlFunction = options.tileUrlFunction.bind(_this);\n        }\n        /**\n         * @protected\n         * @type {!Array<string>|null}\n         */\n        _this.urls = null;\n        if (options.urls) {\n            _this.setUrls(options.urls);\n        }\n        else if (options.url) {\n            _this.setUrl(options.url);\n        }\n        /**\n         * @private\n         * @type {!Object<string, boolean>}\n         */\n        _this.tileLoadingKeys_ = {};\n        return _this;\n    }\n    /**\n     * Return the tile load function of the source.\n     * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n     * @api\n     */\n    UrlTile.prototype.getTileLoadFunction = function () {\n        return this.tileLoadFunction;\n    };\n    /**\n     * Return the tile URL function of the source.\n     * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n     * @api\n     */\n    UrlTile.prototype.getTileUrlFunction = function () {\n        return this.tileUrlFunction;\n    };\n    /**\n     * Return the URLs used for this source.\n     * When a tileUrlFunction is used instead of url or urls,\n     * null will be returned.\n     * @return {!Array<string>|null} URLs.\n     * @api\n     */\n    UrlTile.prototype.getUrls = function () {\n        return this.urls;\n    };\n    /**\n     * Handle tile change events.\n     * @param {import(\"../events/Event.js\").default} event Event.\n     * @protected\n     */\n    UrlTile.prototype.handleTileChange = function (event) {\n        var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n        var uid = getUid(tile);\n        var tileState = tile.getState();\n        var type;\n        if (tileState == TileState.LOADING) {\n            this.tileLoadingKeys_[uid] = true;\n            type = TileEventType.TILELOADSTART;\n        }\n        else if (uid in this.tileLoadingKeys_) {\n            delete this.tileLoadingKeys_[uid];\n            type =\n                tileState == TileState.ERROR\n                    ? TileEventType.TILELOADERROR\n                    : tileState == TileState.LOADED\n                        ? TileEventType.TILELOADEND\n                        : undefined;\n        }\n        if (type != undefined) {\n            this.dispatchEvent(new TileSourceEvent(type, tile));\n        }\n    };\n    /**\n     * Set the tile load function of the source.\n     * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n     * @api\n     */\n    UrlTile.prototype.setTileLoadFunction = function (tileLoadFunction) {\n        this.tileCache.clear();\n        this.tileLoadFunction = tileLoadFunction;\n        this.changed();\n    };\n    /**\n     * Set the tile URL function of the source.\n     * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n     * @param {string=} key Optional new tile key for the source.\n     * @api\n     */\n    UrlTile.prototype.setTileUrlFunction = function (tileUrlFunction, key) {\n        this.tileUrlFunction = tileUrlFunction;\n        this.tileCache.pruneExceptNewestZ();\n        if (typeof key !== 'undefined') {\n            this.setKey(key);\n        }\n        else {\n            this.changed();\n        }\n    };\n    /**\n     * Set the URL to use for requests.\n     * @param {string} url URL.\n     * @api\n     */\n    UrlTile.prototype.setUrl = function (url) {\n        var urls = expandUrl(url);\n        this.urls = urls;\n        this.setUrls(urls);\n    };\n    /**\n     * Set the URLs to use for requests.\n     * @param {Array<string>} urls URLs.\n     * @api\n     */\n    UrlTile.prototype.setUrls = function (urls) {\n        this.urls = urls;\n        var key = urls.join('\\n');\n        if (this.generateTileUrlFunction_) {\n            this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n        }\n        else {\n            this.setKey(key);\n        }\n    };\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    UrlTile.prototype.tileUrlFunction = function (tileCoord, pixelRatio, projection) {\n        return undefined;\n    };\n    /**\n     * Marks a tile coord as being used, without triggering a load.\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     */\n    UrlTile.prototype.useTile = function (z, x, y) {\n        var tileCoordKey = getKeyZXY(z, x, y);\n        if (this.tileCache.containsKey(tileCoordKey)) {\n            this.tileCache.get(tileCoordKey);\n        }\n    };\n    return UrlTile;\n}(TileSource));\nexport default UrlTile;\n//# sourceMappingURL=UrlTile.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport { ENABLE_RASTER_REPROJECTION } from '../reproj/common.js';\nimport { IMAGE_SMOOTHING_DISABLED } from './common.js';\nimport { equivalent, get as getProjection } from '../proj.js';\nimport { getKey, getKeyZXY } from '../tilecoord.js';\nimport { getForProjection as getTileGridForProjection } from '../tilegrid.js';\nimport { getUid } from '../util.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /** @class */ (function (_super) {\n    __extends(TileImage, _super);\n    /**\n     * @param {!Options} options Image tile options.\n     */\n    function TileImage(options) {\n        var _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            opaque: options.opaque,\n            projection: options.projection,\n            state: options.state,\n            tileGrid: options.tileGrid,\n            tileLoadFunction: options.tileLoadFunction\n                ? options.tileLoadFunction\n                : defaultTileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX,\n            transition: options.transition,\n            key: options.key,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        /**\n         * @protected\n         * @type {?string}\n         */\n        _this.crossOrigin =\n            options.crossOrigin !== undefined ? options.crossOrigin : null;\n        /**\n         * @protected\n         * @type {typeof ImageTile}\n         */\n        _this.tileClass =\n            options.tileClass !== undefined ? options.tileClass : ImageTile;\n        /**\n         * @protected\n         * @type {!Object<string, TileCache>}\n         */\n        _this.tileCacheForProjection = {};\n        /**\n         * @protected\n         * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n         */\n        _this.tileGridForProjection = {};\n        /**\n         * @private\n         * @type {number|undefined}\n         */\n        _this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n        /**\n         * @private\n         * @type {object|undefined}\n         */\n        _this.contextOptions_ =\n            options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n        /**\n         * @private\n         * @type {boolean}\n         */\n        _this.renderReprojectionEdges_ = false;\n        return _this;\n    }\n    /**\n     * @return {boolean} Can expire cache.\n     */\n    TileImage.prototype.canExpireCache = function () {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.canExpireCache.call(this);\n        }\n        if (this.tileCache.canExpireCache()) {\n            return true;\n        }\n        else {\n            for (var key in this.tileCacheForProjection) {\n                if (this.tileCacheForProjection[key].canExpireCache()) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {!Object<string, boolean>} usedTiles Used tiles.\n     */\n    TileImage.prototype.expireCache = function (projection, usedTiles) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            _super.prototype.expireCache.call(this, projection, usedTiles);\n            return;\n        }\n        var usedTileCache = this.getTileCacheForProjection(projection);\n        this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n        for (var id in this.tileCacheForProjection) {\n            var tileCache = this.tileCacheForProjection[id];\n            tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n        }\n    };\n    /**\n     * @return {Object|undefined} Context options.\n     */\n    TileImage.prototype.getContextOptions = function () {\n        return this.contextOptions_;\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutterForProjection = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return 0;\n        }\n        else {\n            return this.getGutter();\n        }\n    };\n    /**\n     * @return {number} Gutter.\n     */\n    TileImage.prototype.getGutter = function () {\n        return 0;\n    };\n    /**\n     * Return the key to be used for all tiles in the source.\n     * @return {string} The key for all tiles.\n     * @protected\n     */\n    TileImage.prototype.getKey = function () {\n        return (_super.prototype.getKey.call(this) +\n            (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : ''));\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {boolean} Opaque.\n     */\n    TileImage.prototype.getOpaque = function (projection) {\n        if (ENABLE_RASTER_REPROJECTION &&\n            this.getProjection() &&\n            projection &&\n            !equivalent(this.getProjection(), projection)) {\n            return false;\n        }\n        else {\n            return _super.prototype.getOpaque.call(this, projection);\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n     */\n    TileImage.prototype.getTileGridForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileGridForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n            return this.tileGrid;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileGridForProjection)) {\n                this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n            }\n            return this.tileGridForProjection[projKey];\n        }\n    };\n    /**\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {import(\"../TileCache.js\").default} Tile cache.\n     */\n    TileImage.prototype.getTileCacheForProjection = function (projection) {\n        if (!ENABLE_RASTER_REPROJECTION) {\n            return _super.prototype.getTileCacheForProjection.call(this, projection);\n        }\n        var thisProj = this.getProjection();\n        if (!thisProj || equivalent(thisProj, projection)) {\n            return this.tileCache;\n        }\n        else {\n            var projKey = getUid(projection);\n            if (!(projKey in this.tileCacheForProjection)) {\n                this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n            }\n            return this.tileCacheForProjection[projKey];\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @param {string} key The key set on the tile.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @private\n     */\n    TileImage.prototype.createTile_ = function (z, x, y, pixelRatio, projection, key) {\n        var tileCoord = [z, x, y];\n        var urlTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var tileUrl = urlTileCoord\n            ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n            : undefined;\n        var tile = new this.tileClass(tileCoord, tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY, tileUrl !== undefined ? tileUrl : '', this.crossOrigin, this.tileLoadFunction, this.tileOptions);\n        tile.key = key;\n        tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n        return tile;\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     */\n    TileImage.prototype.getTile = function (z, x, y, pixelRatio, projection) {\n        var sourceProjection = this.getProjection();\n        if (!ENABLE_RASTER_REPROJECTION ||\n            !sourceProjection ||\n            !projection ||\n            equivalent(sourceProjection, projection)) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n        }\n        else {\n            var cache = this.getTileCacheForProjection(projection);\n            var tileCoord = [z, x, y];\n            var tile = void 0;\n            var tileCoordKey = getKey(tileCoord);\n            if (cache.containsKey(tileCoordKey)) {\n                tile = cache.get(tileCoordKey);\n            }\n            var key = this.getKey();\n            if (tile && tile.key == key) {\n                return tile;\n            }\n            else {\n                var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n                var targetTileGrid = this.getTileGridForProjection(projection);\n                var wrappedTileCoord = this.getTileCoordForTileUrlFunction(tileCoord, projection);\n                var newTile = new ReprojTile(sourceProjection, sourceTileGrid, projection, targetTileGrid, tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio), this.getGutter(), function (z, x, y, pixelRatio) {\n                    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n                }.bind(this), this.reprojectionErrorThreshold_, this.renderReprojectionEdges_, this.contextOptions_);\n                newTile.key = key;\n                if (tile) {\n                    newTile.interimTile = tile;\n                    newTile.refreshInterimChain();\n                    cache.replace(tileCoordKey, newTile);\n                }\n                else {\n                    cache.set(tileCoordKey, newTile);\n                }\n                return newTile;\n            }\n        }\n    };\n    /**\n     * @param {number} z Tile coordinate z.\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {!import(\"../Tile.js\").default} Tile.\n     * @protected\n     */\n    TileImage.prototype.getTileInternal = function (z, x, y, pixelRatio, projection) {\n        var tile = null;\n        var tileCoordKey = getKeyZXY(z, x, y);\n        var key = this.getKey();\n        if (!this.tileCache.containsKey(tileCoordKey)) {\n            tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n            this.tileCache.set(tileCoordKey, tile);\n        }\n        else {\n            tile = this.tileCache.get(tileCoordKey);\n            if (tile.key != key) {\n                // The source's params changed. If the tile has an interim tile and if we\n                // can use it then we use it. Otherwise we create a new tile.  In both\n                // cases we attempt to assign an interim tile to the new tile.\n                var interimTile = tile;\n                tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n                //make the new tile the head of the list,\n                if (interimTile.getState() == TileState.IDLE) {\n                    //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n                    tile.interimTile = interimTile.interimTile;\n                }\n                else {\n                    tile.interimTile = interimTile;\n                }\n                tile.refreshInterimChain();\n                this.tileCache.replace(tileCoordKey, tile);\n            }\n        }\n        return tile;\n    };\n    /**\n     * Sets whether to render reprojection edges or not (usually for debugging).\n     * @param {boolean} render Render the edges.\n     * @api\n     */\n    TileImage.prototype.setRenderReprojectionEdges = function (render) {\n        if (!ENABLE_RASTER_REPROJECTION ||\n            this.renderReprojectionEdges_ == render) {\n            return;\n        }\n        this.renderReprojectionEdges_ = render;\n        for (var id in this.tileCacheForProjection) {\n            this.tileCacheForProjection[id].clear();\n        }\n        this.changed();\n    };\n    /**\n     * Sets the tile grid to use when reprojecting the tiles to the given\n     * projection instead of the default tile grid for the projection.\n     *\n     * This can be useful when the default tile grid cannot be created\n     * (e.g. projection has no extent defined) or\n     * for optimization reasons (custom tile size, resolutions, ...).\n     *\n     * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n     * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n     * @api\n     */\n    TileImage.prototype.setTileGridForProjection = function (projection, tilegrid) {\n        if (ENABLE_RASTER_REPROJECTION) {\n            var proj = getProjection(projection);\n            if (proj) {\n                var projKey = getUid(proj);\n                if (!(projKey in this.tileGridForProjection)) {\n                    this.tileGridForProjection[projKey] = tilegrid;\n                }\n            }\n        }\n    };\n    return TileImage;\n}(UrlTile));\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n    /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\nexport default TileImage;\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport TileImage from './TileImage.js';\nimport { createXYZ, extentFromProjection } from '../tilegrid.js';\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /** @class */ (function (_super) {\n    __extends(XYZ, _super);\n    /**\n     * @param {Options=} opt_options XYZ options.\n     */\n    function XYZ(opt_options) {\n        var _this = this;\n        var options = opt_options || {};\n        var projection = options.projection !== undefined ? options.projection : 'EPSG:3857';\n        var tileGrid = options.tileGrid !== undefined\n            ? options.tileGrid\n            : createXYZ({\n                extent: extentFromProjection(projection),\n                maxResolution: options.maxResolution,\n                maxZoom: options.maxZoom,\n                minZoom: options.minZoom,\n                tileSize: options.tileSize,\n            });\n        _this = _super.call(this, {\n            attributions: options.attributions,\n            cacheSize: options.cacheSize,\n            crossOrigin: options.crossOrigin,\n            imageSmoothing: options.imageSmoothing,\n            opaque: options.opaque,\n            projection: projection,\n            reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n            tileGrid: tileGrid,\n            tileLoadFunction: options.tileLoadFunction,\n            tilePixelRatio: options.tilePixelRatio,\n            tileUrlFunction: options.tileUrlFunction,\n            url: options.url,\n            urls: options.urls,\n            wrapX: options.wrapX !== undefined ? options.wrapX : true,\n            transition: options.transition,\n            attributionsCollapsible: options.attributionsCollapsible,\n            zDirection: options.zDirection,\n        }) || this;\n        return _this;\n    }\n    return XYZ;\n}(TileImage));\nexport default XYZ;\n//# sourceMappingURL=XYZ.js.map","import { render } from \"./index.vue?vue&type=template&id=773cc1a0&scoped=true\"\nimport script from \"./index.vue?vue&type=script&lang=js\"\nexport * from \"./index.vue?vue&type=script&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=773cc1a0&lang=less&scoped=true\"\n\nimport exportComponent from \"E:\\\\goodCashier\\\\web\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-773cc1a0\"]])\n\nexport default __exports__","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = /** @class */ (function () {\n    /**\n     * @param {number} minX Minimum X.\n     * @param {number} maxX Maximum X.\n     * @param {number} minY Minimum Y.\n     * @param {number} maxY Maximum Y.\n     */\n    function TileRange(minX, maxX, minY, maxY) {\n        /**\n         * @type {number}\n         */\n        this.minX = minX;\n        /**\n         * @type {number}\n         */\n        this.maxX = maxX;\n        /**\n         * @type {number}\n         */\n        this.minY = minY;\n        /**\n         * @type {number}\n         */\n        this.maxY = maxY;\n    }\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @return {boolean} Contains tile coordinate.\n     */\n    TileRange.prototype.contains = function (tileCoord) {\n        return this.containsXY(tileCoord[1], tileCoord[2]);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Contains.\n     */\n    TileRange.prototype.containsTileRange = function (tileRange) {\n        return (this.minX <= tileRange.minX &&\n            tileRange.maxX <= this.maxX &&\n            this.minY <= tileRange.minY &&\n            tileRange.maxY <= this.maxY);\n    };\n    /**\n     * @param {number} x Tile coordinate x.\n     * @param {number} y Tile coordinate y.\n     * @return {boolean} Contains coordinate.\n     */\n    TileRange.prototype.containsXY = function (x, y) {\n        return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Equals.\n     */\n    TileRange.prototype.equals = function (tileRange) {\n        return (this.minX == tileRange.minX &&\n            this.minY == tileRange.minY &&\n            this.maxX == tileRange.maxX &&\n            this.maxY == tileRange.maxY);\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     */\n    TileRange.prototype.extend = function (tileRange) {\n        if (tileRange.minX < this.minX) {\n            this.minX = tileRange.minX;\n        }\n        if (tileRange.maxX > this.maxX) {\n            this.maxX = tileRange.maxX;\n        }\n        if (tileRange.minY < this.minY) {\n            this.minY = tileRange.minY;\n        }\n        if (tileRange.maxY > this.maxY) {\n            this.maxY = tileRange.maxY;\n        }\n    };\n    /**\n     * @return {number} Height.\n     */\n    TileRange.prototype.getHeight = function () {\n        return this.maxY - this.minY + 1;\n    };\n    /**\n     * @return {import(\"./size.js\").Size} Size.\n     */\n    TileRange.prototype.getSize = function () {\n        return [this.getWidth(), this.getHeight()];\n    };\n    /**\n     * @return {number} Width.\n     */\n    TileRange.prototype.getWidth = function () {\n        return this.maxX - this.minX + 1;\n    };\n    /**\n     * @param {TileRange} tileRange Tile range.\n     * @return {boolean} Intersects.\n     */\n    TileRange.prototype.intersects = function (tileRange) {\n        return (this.minX <= tileRange.maxX &&\n            this.maxX >= tileRange.minX &&\n            this.minY <= tileRange.maxY &&\n            this.maxY >= tileRange.minY);\n    };\n    return TileRange;\n}());\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n    if (tileRange !== undefined) {\n        tileRange.minX = minX;\n        tileRange.maxX = maxX;\n        tileRange.minY = minY;\n        tileRange.maxY = maxY;\n        return tileRange;\n    }\n    else {\n        return new TileRange(minX, maxX, minY, maxY);\n    }\n}\nexport default TileRange;\n//# sourceMappingURL=TileRange.js.map"],"sourceRoot":""}